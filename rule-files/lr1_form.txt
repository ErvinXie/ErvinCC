246 ( :  reduce postfix-expression -> postfix-expression . identifier 
246 [ :  reduce postfix-expression -> postfix-expression . identifier 
246 ++ :  reduce postfix-expression -> postfix-expression . identifier 
246 . :  reduce postfix-expression -> postfix-expression . identifier 
246 -> :  reduce postfix-expression -> postfix-expression . identifier 
246 -- :  reduce postfix-expression -> postfix-expression . identifier 
246 # :  reduce postfix-expression -> postfix-expression . identifier 
165 void :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 char :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 short :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 int :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 long :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 float :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 double :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 signed :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 unsigned :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 const :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 restrict :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 volatile :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 { :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 struct :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 union :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 identifier :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 enum :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 # :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
165 epsilon :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
166 void :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 char :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 short :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 int :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 long :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 float :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 double :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 signed :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 unsigned :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 const :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 restrict :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 volatile :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 { :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 struct :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 union :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 identifier :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 enum :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 # :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
166 epsilon :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
8 declaration-specifiers :  goto 455
8 ; :  reduce declaration-specifiers -> type-specifier 
8 storage-class-specifier :  goto 293
8 type-specifier :  goto 294
8 type-qualifier :  goto 295
8 extern :  shift 10
8 extern :  reduce declaration-specifiers -> type-specifier 
8 static :  shift 11
8 static :  reduce declaration-specifiers -> type-specifier 
8 register :  shift 12
8 register :  reduce declaration-specifiers -> type-specifier 
8 void :  shift 13
8 void :  reduce declaration-specifiers -> type-specifier 
8 char :  shift 14
8 char :  reduce declaration-specifiers -> type-specifier 
8 short :  shift 15
8 short :  reduce declaration-specifiers -> type-specifier 
8 int :  shift 16
8 int :  reduce declaration-specifiers -> type-specifier 
8 long :  shift 17
8 long :  reduce declaration-specifiers -> type-specifier 
8 float :  shift 18
8 float :  reduce declaration-specifiers -> type-specifier 
8 double :  shift 19
8 double :  reduce declaration-specifiers -> type-specifier 
8 signed :  shift 20
8 signed :  reduce declaration-specifiers -> type-specifier 
8 unsigned :  shift 21
8 unsigned :  reduce declaration-specifiers -> type-specifier 
8 struct-or-union-specifier :  goto 22
8 enum-specifier :  goto 23
8 const :  shift 24
8 const :  reduce declaration-specifiers -> type-specifier 
8 restrict :  shift 25
8 restrict :  reduce declaration-specifiers -> type-specifier 
8 volatile :  shift 26
8 volatile :  reduce declaration-specifiers -> type-specifier 
8 , :  reduce declaration-specifiers -> type-specifier 
8 = :  reduce declaration-specifiers -> type-specifier 
8 struct-or-union :  goto 27
8 { :  reduce declaration-specifiers -> type-specifier 
8 struct :  shift 28
8 struct :  reduce declaration-specifiers -> type-specifier 
8 union :  shift 29
8 union :  reduce declaration-specifiers -> type-specifier 
8 identifier :  reduce declaration-specifiers -> type-specifier 
8 enum :  shift 30
8 enum :  reduce declaration-specifiers -> type-specifier 
8 ( :  reduce declaration-specifiers -> type-specifier 
8 [ :  reduce declaration-specifiers -> type-specifier 
8 * :  reduce declaration-specifiers -> type-specifier 
8 # :  reduce declaration-specifiers -> type-specifier 
8 epsilon :  reduce declaration-specifiers -> type-specifier 
34 ; :  shift 318
34 , :  shift 319
35 ; :  reduce init-declarator-list -> init-declarator 
35 , :  reduce init-declarator-list -> init-declarator 
36 ( :  reduce direct-declarator -> identifier 
36 [ :  reduce direct-declarator -> identifier 
36 # :  reduce direct-declarator -> identifier 
39 declarator :  goto 278
39 identifier :  shift 36
39 direct-declarator :  goto 279
39 pointer :  goto 280
39 ( :  shift 39
39 * :  shift 40
33 # :  reduce declaration -> declaration-specifiers ; 
32 declaration :  goto 41
32 declaration-specifiers :  goto 42
32 compound-statement :  goto 43
32 declaration-list :  goto 44
32 storage-class-specifier :  goto 45
32 type-specifier :  goto 46
32 type-qualifier :  goto 47
32 extern :  shift 10
32 static :  shift 11
32 register :  shift 12
32 void :  shift 13
32 char :  shift 14
32 short :  shift 15
32 int :  shift 16
32 long :  shift 17
32 float :  shift 18
32 double :  shift 19
32 signed :  shift 20
32 unsigned :  shift 21
32 struct-or-union-specifier :  goto 22
32 enum-specifier :  goto 23
32 const :  shift 24
32 restrict :  shift 25
32 volatile :  shift 26
32 = :  shift 48
32 struct-or-union :  goto 27
32 { :  shift 49
32 struct :  shift 28
32 union :  shift 29
32 enum :  shift 30
32 # :  reduce init-declarator -> declarator 
40 type-qualifier :  goto 283
40 const :  shift 106
40 restrict :  shift 107
40 volatile :  shift 108
40 identifier :  reduce pointer -> * 
40 pointer :  goto 284
40 ( :  reduce pointer -> * 
40 [ :  reduce pointer -> * 
40 * :  shift 285
40 type-qualifier-list :  goto 286
40 # :  reduce pointer -> * 
37 ; :  reduce declarator -> direct-declarator 
37 extern :  reduce declarator -> direct-declarator 
37 static :  reduce declarator -> direct-declarator 
37 register :  reduce declarator -> direct-declarator 
37 void :  reduce declarator -> direct-declarator 
37 char :  reduce declarator -> direct-declarator 
37 short :  reduce declarator -> direct-declarator 
37 int :  reduce declarator -> direct-declarator 
37 long :  reduce declarator -> direct-declarator 
37 float :  reduce declarator -> direct-declarator 
37 double :  reduce declarator -> direct-declarator 
37 signed :  reduce declarator -> direct-declarator 
37 unsigned :  reduce declarator -> direct-declarator 
37 const :  reduce declarator -> direct-declarator 
37 restrict :  reduce declarator -> direct-declarator 
37 volatile :  reduce declarator -> direct-declarator 
37 , :  reduce declarator -> direct-declarator 
37 = :  reduce declarator -> direct-declarator 
37 { :  reduce declarator -> direct-declarator 
37 struct :  reduce declarator -> direct-declarator 
37 union :  reduce declarator -> direct-declarator 
37 identifier :  reduce declarator -> direct-declarator 
37 enum :  reduce declarator -> direct-declarator 
37 ( :  shift 254
37 ( :  reduce declarator -> direct-declarator 
37 [ :  shift 255
37 [ :  reduce declarator -> direct-declarator 
37 * :  reduce declarator -> direct-declarator 
37 # :  reduce declarator -> direct-declarator 
37 epsilon :  reduce declarator -> direct-declarator 
38 identifier :  shift 36
38 direct-declarator :  goto 453
38 ( :  shift 39
41 ; :  reduce declaration-list -> declaration 
41 extern :  reduce declaration-list -> declaration 
41 static :  reduce declaration-list -> declaration 
41 register :  reduce declaration-list -> declaration 
41 void :  reduce declaration-list -> declaration 
41 char :  reduce declaration-list -> declaration 
41 short :  reduce declaration-list -> declaration 
41 int :  reduce declaration-list -> declaration 
41 long :  reduce declaration-list -> declaration 
41 float :  reduce declaration-list -> declaration 
41 double :  reduce declaration-list -> declaration 
41 signed :  reduce declaration-list -> declaration 
41 unsigned :  reduce declaration-list -> declaration 
41 const :  reduce declaration-list -> declaration 
41 restrict :  reduce declaration-list -> declaration 
41 volatile :  reduce declaration-list -> declaration 
41 , :  reduce declaration-list -> declaration 
41 = :  reduce declaration-list -> declaration 
41 { :  reduce declaration-list -> declaration 
41 struct :  reduce declaration-list -> declaration 
41 union :  reduce declaration-list -> declaration 
41 identifier :  reduce declaration-list -> declaration 
41 enum :  reduce declaration-list -> declaration 
41 ( :  reduce declaration-list -> declaration 
41 [ :  reduce declaration-list -> declaration 
41 * :  reduce declaration-list -> declaration 
41 # :  reduce declaration-list -> declaration 
47 declaration-specifiers :  goto 326
47 ; :  reduce declaration-specifiers -> type-qualifier 
47 storage-class-specifier :  goto 293
47 type-specifier :  goto 294
47 type-qualifier :  goto 295
47 extern :  shift 10
47 static :  shift 11
47 register :  shift 12
47 void :  shift 13
47 char :  shift 14
47 short :  shift 15
47 int :  shift 16
47 long :  shift 17
47 float :  shift 18
47 double :  shift 19
47 signed :  shift 20
47 unsigned :  shift 21
47 struct-or-union-specifier :  goto 22
47 enum-specifier :  goto 23
47 const :  shift 24
47 restrict :  shift 25
47 volatile :  shift 26
47 , :  reduce declaration-specifiers -> type-qualifier 
47 = :  reduce declaration-specifiers -> type-qualifier 
47 struct-or-union :  goto 27
47 struct :  shift 28
47 union :  shift 29
47 identifier :  reduce declaration-specifiers -> type-qualifier 
47 enum :  shift 30
47 ( :  reduce declaration-specifiers -> type-qualifier 
47 [ :  reduce declaration-specifiers -> type-qualifier 
47 * :  reduce declaration-specifiers -> type-qualifier 
47 epsilon :  reduce declaration-specifiers -> type-qualifier 
52 identifier :  shift 36
52 direct-declarator :  goto 321
52 ( :  shift 39
77 identifier :  reduce unary-operator -> - 
77 ( :  reduce unary-operator -> - 
77 [ :  reduce unary-operator -> - 
77 * :  reduce unary-operator -> - 
77 string-literal :  reduce unary-operator -> - 
77 integer-constant :  reduce unary-operator -> - 
77 floating-constant :  reduce unary-operator -> - 
77 character-constant :  reduce unary-operator -> - 
77 ++ :  reduce unary-operator -> - 
77 . :  reduce unary-operator -> - 
77 -> :  reduce unary-operator -> - 
77 -- :  reduce unary-operator -> - 
77 sizeof :  reduce unary-operator -> - 
77 & :  reduce unary-operator -> - 
77 + :  reduce unary-operator -> - 
77 - :  reduce unary-operator -> - 
77 ~ :  reduce unary-operator -> - 
77 ! :  reduce unary-operator -> - 
77 # :  reduce unary-operator -> - 
77 epsilon :  reduce unary-operator -> - 
74 identifier :  shift 55
74 enumeration-constant :  goto 57
74 ( :  shift 235
74 constant :  goto 59
74 * :  shift 60
74 primary-expression :  goto 61
74 string-literal :  shift 62
74 integer-constant :  shift 63
74 floating-constant :  shift 64
74 character-constant :  shift 65
74 postfix-expression :  goto 132
74 ++ :  shift 133
74 -- :  shift 134
74 function-call :  goto 69
74 array-access :  goto 70
74 unary-expression :  goto 236
74 unary-operator :  goto 136
74 sizeof :  shift 137
74 & :  shift 75
74 + :  shift 76
74 - :  shift 77
74 ~ :  shift 78
74 ! :  shift 79
75 identifier :  reduce unary-operator -> & 
75 ( :  reduce unary-operator -> & 
75 [ :  reduce unary-operator -> & 
75 * :  reduce unary-operator -> & 
75 string-literal :  reduce unary-operator -> & 
75 integer-constant :  reduce unary-operator -> & 
75 floating-constant :  reduce unary-operator -> & 
75 character-constant :  reduce unary-operator -> & 
75 ++ :  reduce unary-operator -> & 
75 . :  reduce unary-operator -> & 
75 -> :  reduce unary-operator -> & 
75 -- :  reduce unary-operator -> & 
75 sizeof :  reduce unary-operator -> & 
75 & :  reduce unary-operator -> & 
75 + :  reduce unary-operator -> & 
75 - :  reduce unary-operator -> & 
75 ~ :  reduce unary-operator -> & 
75 ! :  reduce unary-operator -> & 
75 # :  reduce unary-operator -> & 
75 epsilon :  reduce unary-operator -> & 
76 identifier :  reduce unary-operator -> + 
76 ( :  reduce unary-operator -> + 
76 [ :  reduce unary-operator -> + 
76 * :  reduce unary-operator -> + 
76 string-literal :  reduce unary-operator -> + 
76 integer-constant :  reduce unary-operator -> + 
76 floating-constant :  reduce unary-operator -> + 
76 character-constant :  reduce unary-operator -> + 
76 ++ :  reduce unary-operator -> + 
76 . :  reduce unary-operator -> + 
76 -> :  reduce unary-operator -> + 
76 -- :  reduce unary-operator -> + 
76 sizeof :  reduce unary-operator -> + 
76 & :  reduce unary-operator -> + 
76 + :  reduce unary-operator -> + 
76 - :  reduce unary-operator -> + 
76 ~ :  reduce unary-operator -> + 
76 ! :  reduce unary-operator -> + 
76 # :  reduce unary-operator -> + 
76 epsilon :  reduce unary-operator -> + 
78 identifier :  reduce unary-operator -> ~ 
78 ( :  reduce unary-operator -> ~ 
78 [ :  reduce unary-operator -> ~ 
78 * :  reduce unary-operator -> ~ 
78 string-literal :  reduce unary-operator -> ~ 
78 integer-constant :  reduce unary-operator -> ~ 
78 floating-constant :  reduce unary-operator -> ~ 
78 character-constant :  reduce unary-operator -> ~ 
78 ++ :  reduce unary-operator -> ~ 
78 . :  reduce unary-operator -> ~ 
78 -> :  reduce unary-operator -> ~ 
78 -- :  reduce unary-operator -> ~ 
78 sizeof :  reduce unary-operator -> ~ 
78 & :  reduce unary-operator -> ~ 
78 + :  reduce unary-operator -> ~ 
78 - :  reduce unary-operator -> ~ 
78 ~ :  reduce unary-operator -> ~ 
78 ! :  reduce unary-operator -> ~ 
78 # :  reduce unary-operator -> ~ 
78 epsilon :  reduce unary-operator -> ~ 
79 identifier :  reduce unary-operator -> ! 
79 ( :  reduce unary-operator -> ! 
79 [ :  reduce unary-operator -> ! 
79 * :  reduce unary-operator -> ! 
79 string-literal :  reduce unary-operator -> ! 
79 integer-constant :  reduce unary-operator -> ! 
79 floating-constant :  reduce unary-operator -> ! 
79 character-constant :  reduce unary-operator -> ! 
79 ++ :  reduce unary-operator -> ! 
79 . :  reduce unary-operator -> ! 
79 -> :  reduce unary-operator -> ! 
79 -- :  reduce unary-operator -> ! 
79 sizeof :  reduce unary-operator -> ! 
79 & :  reduce unary-operator -> ! 
79 + :  reduce unary-operator -> ! 
79 - :  reduce unary-operator -> ! 
79 ~ :  reduce unary-operator -> ! 
79 ! :  reduce unary-operator -> ! 
79 # :  reduce unary-operator -> ! 
79 epsilon :  reduce unary-operator -> ! 
80 * :  shift 179
80 + :  reduce additive-expression -> multiplicative-expression 
80 - :  reduce additive-expression -> multiplicative-expression 
80 / :  shift 180
80 % :  shift 181
80 # :  reduce additive-expression -> multiplicative-expression 
81 + :  shift 185
81 - :  shift 186
81 << :  reduce shift-expression -> additive-expression 
81 >> :  reduce shift-expression -> additive-expression 
81 # :  reduce shift-expression -> additive-expression 
82 << :  shift 189
82 >> :  shift 190
82 < :  reduce relational-expression -> shift-expression 
82 > :  reduce relational-expression -> shift-expression 
82 <= :  reduce relational-expression -> shift-expression 
82 >= :  reduce relational-expression -> shift-expression 
82 # :  reduce relational-expression -> shift-expression 
84 & :  reduce AND-expression -> equality-expression 
84 == :  shift 201
84 != :  shift 202
84 # :  reduce AND-expression -> equality-expression 
85 & :  shift 205
85 ^ :  reduce exclusive-OR-expression -> AND-expression 
85 # :  reduce exclusive-OR-expression -> AND-expression 
83 < :  shift 193
83 > :  shift 194
83 <= :  shift 195
83 >= :  shift 196
83 == :  reduce equality-expression -> relational-expression 
83 != :  reduce equality-expression -> relational-expression 
83 # :  reduce equality-expression -> relational-expression 
86 ^ :  shift 207
86 | :  reduce inclusive-OR-expression -> exclusive-OR-expression 
86 # :  reduce inclusive-OR-expression -> exclusive-OR-expression 
87 | :  shift 209
87 && :  reduce logical-AND-expression -> inclusive-OR-expression 
87 # :  reduce logical-AND-expression -> inclusive-OR-expression 
88 && :  shift 211
88 || :  reduce logical-OR-expression -> logical-AND-expression 
88 ? :  reduce logical-OR-expression -> logical-AND-expression 
88 # :  reduce logical-OR-expression -> logical-AND-expression 
89 || :  shift 213
89 ? :  shift 214
89 # :  reduce conditional-expression -> logical-OR-expression 
90 # :  reduce assignment-expression -> conditional-expression 
322 ; :  reduce declaration-list -> declaration-list declaration 
322 extern :  reduce declaration-list -> declaration-list declaration 
322 static :  reduce declaration-list -> declaration-list declaration 
322 register :  reduce declaration-list -> declaration-list declaration 
322 void :  reduce declaration-list -> declaration-list declaration 
322 char :  reduce declaration-list -> declaration-list declaration 
322 short :  reduce declaration-list -> declaration-list declaration 
322 int :  reduce declaration-list -> declaration-list declaration 
322 long :  reduce declaration-list -> declaration-list declaration 
322 float :  reduce declaration-list -> declaration-list declaration 
322 double :  reduce declaration-list -> declaration-list declaration 
322 signed :  reduce declaration-list -> declaration-list declaration 
322 unsigned :  reduce declaration-list -> declaration-list declaration 
322 const :  reduce declaration-list -> declaration-list declaration 
322 restrict :  reduce declaration-list -> declaration-list declaration 
322 volatile :  reduce declaration-list -> declaration-list declaration 
322 , :  reduce declaration-list -> declaration-list declaration 
322 = :  reduce declaration-list -> declaration-list declaration 
322 { :  reduce declaration-list -> declaration-list declaration 
322 struct :  reduce declaration-list -> declaration-list declaration 
322 union :  reduce declaration-list -> declaration-list declaration 
322 identifier :  reduce declaration-list -> declaration-list declaration 
322 enum :  reduce declaration-list -> declaration-list declaration 
322 ( :  reduce declaration-list -> declaration-list declaration 
322 [ :  reduce declaration-list -> declaration-list declaration 
322 * :  reduce declaration-list -> declaration-list declaration 
322 # :  reduce declaration-list -> declaration-list declaration 
454 ; :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 extern :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 static :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 register :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 void :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 char :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 short :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 int :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 long :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 float :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 double :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 signed :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 unsigned :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 const :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 restrict :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 volatile :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 , :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 = :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 { :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 struct :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 union :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 identifier :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 enum :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 ( :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 [ :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 * :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 # :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
454 epsilon :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
91 , :  reduce initializer-list -> initializer 
91 } :  reduce initializer-list -> initializer 
92 , :  shift 314
92 } :  shift 315
119 declarator :  goto 122
119 ; :  shift 123
119 type-specifier :  goto 124
119 type-qualifier :  goto 125
119 void :  shift 95
119 char :  shift 96
119 short :  shift 97
119 int :  shift 98
119 long :  shift 99
119 float :  shift 100
119 double :  shift 101
119 signed :  shift 102
119 unsigned :  shift 103
119 struct-or-union-specifier :  goto 104
119 enum-specifier :  goto 105
119 const :  shift 106
119 restrict :  shift 107
119 volatile :  shift 108
119 struct-or-union :  goto 27
119 struct :  shift 28
119 union :  shift 29
119 identifier :  shift 36
119 struct-declarator-list :  goto 126
119 struct-declarator :  goto 127
119 enum :  shift 30
119 direct-declarator :  goto 128
119 pointer :  goto 129
119 ( :  shift 39
119 * :  shift 40
120 # :  reduce struct-or-union-specifier -> struct-or-union { struct-declaration-list } 
121 ; :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 void :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 char :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 short :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 int :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 long :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 float :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 double :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 signed :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 unsigned :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 const :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 restrict :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 volatile :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 , :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 { :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 } :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 struct :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 union :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 identifier :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 : :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 enum :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 ( :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 [ :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 * :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
121 # :  reduce struct-declaration-list -> struct-declaration-list struct-declaration 
150 identifier :  shift 55
150 assignment-expression :  goto 152
150 enumeration-constant :  goto 57
150 ( :  shift 58
150 constant :  goto 59
150 * :  shift 60
150 primary-expression :  goto 61
150 string-literal :  shift 62
150 integer-constant :  shift 63
150 floating-constant :  shift 64
150 character-constant :  shift 65
150 postfix-expression :  goto 66
150 ++ :  shift 67
150 -- :  shift 68
150 function-call :  goto 69
150 array-access :  goto 70
150 unary-expression :  goto 71
150 unary-operator :  goto 72
150 cast-expression :  goto 73
150 sizeof :  shift 74
150 & :  shift 75
150 + :  shift 76
150 - :  shift 77
150 ~ :  shift 78
150 ! :  shift 79
150 multiplicative-expression :  goto 80
150 additive-expression :  goto 81
150 shift-expression :  goto 82
150 relational-expression :  goto 83
150 equality-expression :  goto 84
150 AND-expression :  goto 85
150 exclusive-OR-expression :  goto 86
150 inclusive-OR-expression :  goto 87
150 logical-AND-expression :  goto 88
150 logical-OR-expression :  goto 89
150 conditional-expression :  goto 90
129 identifier :  shift 36
129 direct-declarator :  goto 308
129 ( :  shift 39
139 identifier :  shift 55
139 assignment-expression :  goto 145
139 enumeration-constant :  goto 57
139 ( :  shift 58
139 ) :  shift 146
139 constant :  goto 59
139 * :  shift 60
139 primary-expression :  goto 61
139 string-literal :  shift 62
139 integer-constant :  shift 63
139 floating-constant :  shift 64
139 character-constant :  shift 65
139 postfix-expression :  goto 66
139 ++ :  shift 67
139 -- :  shift 68
139 function-call :  goto 69
139 array-access :  goto 70
139 argument-expression-list :  goto 147
139 unary-expression :  goto 71
139 unary-operator :  goto 72
139 cast-expression :  goto 73
139 sizeof :  shift 74
139 & :  shift 75
139 + :  shift 76
139 - :  shift 77
139 ~ :  shift 78
139 ! :  shift 79
139 multiplicative-expression :  goto 80
139 additive-expression :  goto 81
139 shift-expression :  goto 82
139 relational-expression :  goto 83
139 equality-expression :  goto 84
139 AND-expression :  goto 85
139 exclusive-OR-expression :  goto 86
139 inclusive-OR-expression :  goto 87
139 logical-AND-expression :  goto 88
139 logical-OR-expression :  goto 89
139 conditional-expression :  goto 90
151 # :  reduce array-access -> postfix-expression [ expression ] 
147 , :  shift 248
147 ) :  shift 249
253 ; :  reduce struct-declarator-list -> struct-declarator-list , struct-declarator 
253 , :  reduce struct-declarator-list -> struct-declarator-list , struct-declarator 
132 ( :  shift 139
132 [ :  shift 140
132 ++ :  shift 141
132 . :  shift 142
132 -> :  shift 143
132 -- :  shift 144
132 # :  reduce unary-expression -> postfix-expression 
133 identifier :  shift 55
133 enumeration-constant :  goto 57
133 ( :  shift 153
133 constant :  goto 59
133 * :  shift 60
133 primary-expression :  goto 61
133 string-literal :  shift 62
133 integer-constant :  shift 63
133 floating-constant :  shift 64
133 character-constant :  shift 65
133 postfix-expression :  goto 132
133 ++ :  shift 133
133 -- :  shift 134
133 function-call :  goto 69
133 array-access :  goto 70
133 unary-expression :  goto 159
133 unary-operator :  goto 136
133 sizeof :  shift 137
133 & :  shift 75
133 + :  shift 76
133 - :  shift 77
133 ~ :  shift 78
133 ! :  shift 79
254 declaration-specifiers :  goto 256
254 storage-class-specifier :  goto 257
254 type-specifier :  goto 258
254 type-qualifier :  goto 259
254 extern :  shift 10
254 static :  shift 11
254 register :  shift 12
254 void :  shift 13
254 char :  shift 14
254 short :  shift 15
254 int :  shift 16
254 long :  shift 17
254 float :  shift 18
254 double :  shift 19
254 signed :  shift 20
254 unsigned :  shift 21
254 struct-or-union-specifier :  goto 22
254 enum-specifier :  goto 23
254 const :  shift 24
254 restrict :  shift 25
254 volatile :  shift 26
254 struct-or-union :  goto 27
254 struct :  shift 28
254 union :  shift 29
254 identifier :  shift 260
254 enum :  shift 30
254 ) :  shift 261
254 parameter-type-list :  goto 262
254 identifier-list :  goto 263
254 parameter-list :  goto 264
254 parameter-declaration :  goto 265
282 ( :  shift 254
282 ) :  reduce declarator -> pointer direct-declarator 
282 [ :  shift 255
255 identifier :  shift 269
255 enumeration-constant :  goto 270
255 ] :  shift 271
255 constant :  goto 272
255 integer-constant :  shift 273
255 floating-constant :  shift 274
255 character-constant :  shift 275
256 declarator :  goto 266
256 identifier :  shift 36
256 direct-declarator :  goto 267
256 pointer :  goto 268
256 ( :  shift 39
256 * :  shift 40
281 ( :  reduce direct-declarator -> ( declarator ) 
281 [ :  reduce direct-declarator -> ( declarator ) 
281 # :  reduce direct-declarator -> ( declarator ) 
152 , :  reduce expression -> expression , assignment-expression 
152 ] :  reduce expression -> expression , assignment-expression 
157 , :  reduce expression -> expression , assignment-expression 
157 ) :  reduce expression -> expression , assignment-expression 
247 ( :  reduce postfix-expression -> postfix-expression -> identifier 
247 [ :  reduce postfix-expression -> postfix-expression -> identifier 
247 ++ :  reduce postfix-expression -> postfix-expression -> identifier 
247 . :  reduce postfix-expression -> postfix-expression -> identifier 
247 -> :  reduce postfix-expression -> postfix-expression -> identifier 
247 -- :  reduce postfix-expression -> postfix-expression -> identifier 
247 # :  reduce postfix-expression -> postfix-expression -> identifier 
161 # :  reduce unary-expression -> unary-operator cast-expression 
162 type-specifier :  goto 93
162 type-qualifier :  goto 94
162 void :  shift 95
162 char :  shift 96
162 short :  shift 97
162 int :  shift 98
162 long :  shift 99
162 float :  shift 100
162 double :  shift 101
162 signed :  shift 102
162 unsigned :  shift 103
162 struct-or-union-specifier :  goto 104
162 enum-specifier :  goto 105
162 const :  shift 106
162 restrict :  shift 107
162 volatile :  shift 108
162 struct-or-union :  goto 27
162 struct :  shift 28
162 union :  shift 29
162 identifier :  shift 55
162 specifier-qualifier-list :  goto 109
162 assignment-expression :  goto 110
162 enum :  shift 30
162 enumeration-constant :  goto 57
162 ( :  shift 58
162 constant :  goto 59
162 * :  shift 60
162 type-name :  goto 164
162 expression :  goto 112
162 primary-expression :  goto 61
162 string-literal :  shift 62
162 integer-constant :  shift 63
162 floating-constant :  shift 64
162 character-constant :  shift 65
162 postfix-expression :  goto 66
162 ++ :  shift 67
162 -- :  shift 68
162 function-call :  goto 69
162 array-access :  goto 70
162 unary-expression :  goto 71
162 unary-operator :  goto 72
162 cast-expression :  goto 73
162 sizeof :  shift 74
162 & :  shift 75
162 + :  shift 76
162 - :  shift 77
162 ~ :  shift 78
162 ! :  shift 79
162 multiplicative-expression :  goto 80
162 additive-expression :  goto 81
162 shift-expression :  goto 82
162 relational-expression :  goto 83
162 equality-expression :  goto 84
162 AND-expression :  goto 85
162 exclusive-OR-expression :  goto 86
162 inclusive-OR-expression :  goto 87
162 logical-AND-expression :  goto 88
162 logical-OR-expression :  goto 89
162 conditional-expression :  goto 90
164 ) :  shift 245
245 # :  reduce unary-expression -> sizeof ( type-name ) 
242 } :  shift 244
242 identifier :  shift 169
242 enumerator :  goto 176
242 enumeration-constant :  goto 172
243 # :  reduce enum-specifier -> enum identifier { enumerator-list } 
244 # :  reduce enum-specifier -> enum identifier { enumerator-list , } 
177 identifier :  shift 55
177 constant-expression :  goto 178
177 enumeration-constant :  goto 57
177 ( :  shift 58
177 constant :  goto 59
177 * :  shift 60
177 primary-expression :  goto 61
177 string-literal :  shift 62
177 integer-constant :  shift 63
177 floating-constant :  shift 64
177 character-constant :  shift 65
177 postfix-expression :  goto 132
177 ++ :  shift 133
177 -- :  shift 134
177 function-call :  goto 69
177 array-access :  goto 70
177 unary-expression :  goto 135
177 unary-operator :  goto 136
177 cast-expression :  goto 73
177 sizeof :  shift 137
177 & :  shift 75
177 + :  shift 76
177 - :  shift 77
177 ~ :  shift 78
177 ! :  shift 79
177 multiplicative-expression :  goto 80
177 additive-expression :  goto 81
177 shift-expression :  goto 82
177 relational-expression :  goto 83
177 equality-expression :  goto 84
177 AND-expression :  goto 85
177 exclusive-OR-expression :  goto 86
177 inclusive-OR-expression :  goto 87
177 logical-AND-expression :  goto 88
177 logical-OR-expression :  goto 89
177 conditional-expression :  goto 138
44 declaration :  goto 322
44 declaration-specifiers :  goto 42
44 compound-statement :  goto 323
44 storage-class-specifier :  goto 45
44 type-specifier :  goto 46
44 type-qualifier :  goto 47
44 extern :  shift 10
44 static :  shift 11
44 register :  shift 12
44 void :  shift 13
44 char :  shift 14
44 short :  shift 15
44 int :  shift 16
44 long :  shift 17
44 float :  shift 18
44 double :  shift 19
44 signed :  shift 20
44 unsigned :  shift 21
44 struct-or-union-specifier :  goto 22
44 enum-specifier :  goto 23
44 const :  shift 24
44 restrict :  shift 25
44 volatile :  shift 26
44 struct-or-union :  goto 27
44 { :  shift 49
44 struct :  shift 28
44 union :  shift 29
44 enum :  shift 30
46 declaration-specifiers :  goto 325
46 ; :  reduce declaration-specifiers -> type-specifier 
46 storage-class-specifier :  goto 293
46 type-specifier :  goto 294
46 type-qualifier :  goto 295
46 extern :  shift 10
46 static :  shift 11
46 register :  shift 12
46 void :  shift 13
46 char :  shift 14
46 short :  shift 15
46 int :  shift 16
46 long :  shift 17
46 float :  shift 18
46 double :  shift 19
46 signed :  shift 20
46 unsigned :  shift 21
46 struct-or-union-specifier :  goto 22
46 enum-specifier :  goto 23
46 const :  shift 24
46 restrict :  shift 25
46 volatile :  shift 26
46 , :  reduce declaration-specifiers -> type-specifier 
46 = :  reduce declaration-specifiers -> type-specifier 
46 struct-or-union :  goto 27
46 struct :  shift 28
46 union :  shift 29
46 identifier :  reduce declaration-specifiers -> type-specifier 
46 enum :  shift 30
46 ( :  reduce declaration-specifiers -> type-specifier 
46 [ :  reduce declaration-specifiers -> type-specifier 
46 * :  reduce declaration-specifiers -> type-specifier 
46 epsilon :  reduce declaration-specifiers -> type-specifier 
48 initializer :  goto 53
48 { :  shift 54
48 identifier :  shift 55
48 assignment-expression :  goto 56
48 enumeration-constant :  goto 57
48 ( :  shift 58
48 constant :  goto 59
48 * :  shift 60
48 primary-expression :  goto 61
48 string-literal :  shift 62
48 integer-constant :  shift 63
48 floating-constant :  shift 64
48 character-constant :  shift 65
48 postfix-expression :  goto 66
48 ++ :  shift 67
48 -- :  shift 68
48 function-call :  goto 69
48 array-access :  goto 70
48 unary-expression :  goto 71
48 unary-operator :  goto 72
48 cast-expression :  goto 73
48 sizeof :  shift 74
48 & :  shift 75
48 + :  shift 76
48 - :  shift 77
48 ~ :  shift 78
48 ! :  shift 79
48 multiplicative-expression :  goto 80
48 additive-expression :  goto 81
48 shift-expression :  goto 82
48 relational-expression :  goto 83
48 equality-expression :  goto 84
48 AND-expression :  goto 85
48 exclusive-OR-expression :  goto 86
48 inclusive-OR-expression :  goto 87
48 logical-AND-expression :  goto 88
48 logical-OR-expression :  goto 89
48 conditional-expression :  goto 90
49 declaration :  goto 327
49 declaration-specifiers :  goto 42
49 compound-statement :  goto 328
49 ; :  shift 329
49 storage-class-specifier :  goto 45
49 type-specifier :  goto 46
49 type-qualifier :  goto 47
49 extern :  shift 10
49 static :  shift 11
49 register :  shift 12
49 void :  shift 13
49 char :  shift 14
49 short :  shift 15
49 int :  shift 16
49 long :  shift 17
49 float :  shift 18
49 double :  shift 19
49 signed :  shift 20
49 unsigned :  shift 21
49 struct-or-union-specifier :  goto 22
49 enum-specifier :  goto 23
49 const :  shift 24
49 restrict :  shift 25
49 volatile :  shift 26
49 struct-or-union :  goto 27
49 { :  shift 49
49 } :  shift 330
49 struct :  shift 28
49 union :  shift 29
49 identifier :  shift 331
49 assignment-expression :  goto 332
49 enum :  shift 30
49 enumeration-constant :  goto 57
49 ( :  shift 58
49 constant :  goto 59
49 * :  shift 60
49 statement :  goto 333
49 labeled-statement :  goto 334
49 expression-statement :  goto 335
49 selection-statement :  goto 336
49 iteration-statement :  goto 337
49 jump-statement :  goto 338
49 case :  shift 339
49 default :  shift 340
49 block-item-list :  goto 341
49 block-item :  goto 342
49 expression :  goto 343
49 if :  shift 344
49 switch :  shift 345
49 while :  shift 346
49 do :  shift 347
49 for :  shift 348
49 continue :  shift 349
49 break :  shift 350
49 goto :  shift 351
49 return :  shift 352
49 primary-expression :  goto 61
49 string-literal :  shift 62
49 integer-constant :  shift 63
49 floating-constant :  shift 64
49 character-constant :  shift 65
49 postfix-expression :  goto 66
49 ++ :  shift 67
49 -- :  shift 68
49 function-call :  goto 69
49 array-access :  goto 70
49 unary-expression :  goto 71
49 unary-operator :  goto 72
49 cast-expression :  goto 73
49 sizeof :  shift 74
49 & :  shift 75
49 + :  shift 76
49 - :  shift 77
49 ~ :  shift 78
49 ! :  shift 79
49 multiplicative-expression :  goto 80
49 additive-expression :  goto 81
49 shift-expression :  goto 82
49 relational-expression :  goto 83
49 equality-expression :  goto 84
49 AND-expression :  goto 85
49 exclusive-OR-expression :  goto 86
49 inclusive-OR-expression :  goto 87
49 logical-AND-expression :  goto 88
49 logical-OR-expression :  goto 89
49 conditional-expression :  goto 90
60 identifier :  reduce unary-operator -> * 
60 ( :  reduce unary-operator -> * 
60 [ :  reduce unary-operator -> * 
60 * :  reduce unary-operator -> * 
60 string-literal :  reduce unary-operator -> * 
60 integer-constant :  reduce unary-operator -> * 
60 floating-constant :  reduce unary-operator -> * 
60 character-constant :  reduce unary-operator -> * 
60 ++ :  reduce unary-operator -> * 
60 . :  reduce unary-operator -> * 
60 -> :  reduce unary-operator -> * 
60 -- :  reduce unary-operator -> * 
60 sizeof :  reduce unary-operator -> * 
60 & :  reduce unary-operator -> * 
60 + :  reduce unary-operator -> * 
60 - :  reduce unary-operator -> * 
60 ~ :  reduce unary-operator -> * 
60 ! :  reduce unary-operator -> * 
60 # :  reduce unary-operator -> * 
60 epsilon :  reduce unary-operator -> * 
61 ( :  reduce postfix-expression -> primary-expression 
61 [ :  reduce postfix-expression -> primary-expression 
61 ++ :  reduce postfix-expression -> primary-expression 
61 . :  reduce postfix-expression -> primary-expression 
61 -> :  reduce postfix-expression -> primary-expression 
61 -- :  reduce postfix-expression -> primary-expression 
61 # :  reduce postfix-expression -> primary-expression 
62 # :  reduce primary-expression -> string-literal 
63 # :  reduce constant -> integer-constant 
64 # :  reduce constant -> floating-constant 
65 # :  reduce constant -> character-constant 
66 = :  reduce unary-expression -> postfix-expression 
66 identifier :  reduce unary-expression -> postfix-expression 
66 ( :  shift 139
66 ( :  reduce unary-expression -> postfix-expression 
66 [ :  shift 140
66 [ :  reduce unary-expression -> postfix-expression 
66 * :  reduce unary-expression -> postfix-expression 
66 /= :  reduce unary-expression -> postfix-expression 
66 %= :  reduce unary-expression -> postfix-expression 
66 string-literal :  reduce unary-expression -> postfix-expression 
66 integer-constant :  reduce unary-expression -> postfix-expression 
66 floating-constant :  reduce unary-expression -> postfix-expression 
66 character-constant :  reduce unary-expression -> postfix-expression 
66 ++ :  shift 141
66 ++ :  reduce unary-expression -> postfix-expression 
66 . :  shift 142
66 . :  reduce unary-expression -> postfix-expression 
66 -> :  shift 143
66 -> :  reduce unary-expression -> postfix-expression 
66 -- :  shift 144
66 -- :  reduce unary-expression -> postfix-expression 
66 sizeof :  reduce unary-expression -> postfix-expression 
66 & :  reduce unary-expression -> postfix-expression 
66 + :  reduce unary-expression -> postfix-expression 
66 - :  reduce unary-expression -> postfix-expression 
66 ~ :  reduce unary-expression -> postfix-expression 
66 ! :  reduce unary-expression -> postfix-expression 
66 / :  reduce unary-expression -> postfix-expression 
66 % :  reduce unary-expression -> postfix-expression 
66 << :  reduce unary-expression -> postfix-expression 
66 >> :  reduce unary-expression -> postfix-expression 
66 < :  reduce unary-expression -> postfix-expression 
66 > :  reduce unary-expression -> postfix-expression 
66 <= :  reduce unary-expression -> postfix-expression 
66 >= :  reduce unary-expression -> postfix-expression 
66 == :  reduce unary-expression -> postfix-expression 
66 != :  reduce unary-expression -> postfix-expression 
66 ^ :  reduce unary-expression -> postfix-expression 
66 | :  reduce unary-expression -> postfix-expression 
66 && :  reduce unary-expression -> postfix-expression 
66 || :  reduce unary-expression -> postfix-expression 
66 *= :  reduce unary-expression -> postfix-expression 
66 ? :  reduce unary-expression -> postfix-expression 
66 += :  reduce unary-expression -> postfix-expression 
66 ^= :  reduce unary-expression -> postfix-expression 
66 -= :  reduce unary-expression -> postfix-expression 
66 <<= :  reduce unary-expression -> postfix-expression 
66 >>= :  reduce unary-expression -> postfix-expression 
66 &= :  reduce unary-expression -> postfix-expression 
66 |= :  reduce unary-expression -> postfix-expression 
66 # :  reduce unary-expression -> postfix-expression 
66 epsilon :  reduce unary-expression -> postfix-expression 
67 identifier :  shift 55
67 enumeration-constant :  goto 57
67 ( :  shift 153
67 constant :  goto 59
67 * :  shift 60
67 primary-expression :  goto 61
67 string-literal :  shift 62
67 integer-constant :  shift 63
67 floating-constant :  shift 64
67 character-constant :  shift 65
67 postfix-expression :  goto 132
67 ++ :  shift 133
67 -- :  shift 134
67 function-call :  goto 69
67 array-access :  goto 70
67 unary-expression :  goto 154
67 unary-operator :  goto 136
67 sizeof :  shift 137
67 & :  shift 75
67 + :  shift 76
67 - :  shift 77
67 ~ :  shift 78
67 ! :  shift 79
339 identifier :  shift 55
339 constant-expression :  goto 355
339 enumeration-constant :  goto 57
339 ( :  shift 58
339 constant :  goto 59
339 * :  shift 60
339 primary-expression :  goto 61
339 string-literal :  shift 62
339 integer-constant :  shift 63
339 floating-constant :  shift 64
339 character-constant :  shift 65
339 postfix-expression :  goto 132
339 ++ :  shift 133
339 -- :  shift 134
339 function-call :  goto 69
339 array-access :  goto 70
339 unary-expression :  goto 135
339 unary-operator :  goto 136
339 cast-expression :  goto 73
339 sizeof :  shift 137
339 & :  shift 75
339 + :  shift 76
339 - :  shift 77
339 ~ :  shift 78
339 ! :  shift 79
339 multiplicative-expression :  goto 80
339 additive-expression :  goto 81
339 shift-expression :  goto 82
339 relational-expression :  goto 83
339 equality-expression :  goto 84
339 AND-expression :  goto 85
339 exclusive-OR-expression :  goto 86
339 inclusive-OR-expression :  goto 87
339 logical-AND-expression :  goto 88
339 logical-OR-expression :  goto 89
339 conditional-expression :  goto 356
340 : :  shift 359
321 = :  reduce declarator -> pointer direct-declarator 
321 ( :  shift 254
321 [ :  shift 255
321 # :  reduce declarator -> pointer direct-declarator 
330 # :  reduce compound-statement -> { } 
343 ; :  shift 361
343 , :  shift 362
342 ; :  reduce block-item-list -> block-item 
342 extern :  reduce block-item-list -> block-item 
342 static :  reduce block-item-list -> block-item 
342 register :  reduce block-item-list -> block-item 
342 void :  reduce block-item-list -> block-item 
342 char :  reduce block-item-list -> block-item 
342 short :  reduce block-item-list -> block-item 
342 int :  reduce block-item-list -> block-item 
342 long :  reduce block-item-list -> block-item 
342 float :  reduce block-item-list -> block-item 
342 double :  reduce block-item-list -> block-item 
342 signed :  reduce block-item-list -> block-item 
342 unsigned :  reduce block-item-list -> block-item 
342 const :  reduce block-item-list -> block-item 
342 restrict :  reduce block-item-list -> block-item 
342 volatile :  reduce block-item-list -> block-item 
342 , :  reduce block-item-list -> block-item 
342 = :  reduce block-item-list -> block-item 
342 { :  reduce block-item-list -> block-item 
342 } :  reduce block-item-list -> block-item 
342 struct :  reduce block-item-list -> block-item 
342 union :  reduce block-item-list -> block-item 
342 identifier :  reduce block-item-list -> block-item 
342 enum :  reduce block-item-list -> block-item 
342 ( :  reduce block-item-list -> block-item 
342 [ :  reduce block-item-list -> block-item 
342 * :  reduce block-item-list -> block-item 
342 /= :  reduce block-item-list -> block-item 
342 %= :  reduce block-item-list -> block-item 
342 case :  reduce block-item-list -> block-item 
342 default :  reduce block-item-list -> block-item 
342 if :  reduce block-item-list -> block-item 
342 switch :  reduce block-item-list -> block-item 
342 while :  reduce block-item-list -> block-item 
342 do :  reduce block-item-list -> block-item 
342 for :  reduce block-item-list -> block-item 
342 continue :  reduce block-item-list -> block-item 
342 break :  reduce block-item-list -> block-item 
342 goto :  reduce block-item-list -> block-item 
342 return :  reduce block-item-list -> block-item 
342 string-literal :  reduce block-item-list -> block-item 
342 integer-constant :  reduce block-item-list -> block-item 
342 floating-constant :  reduce block-item-list -> block-item 
342 character-constant :  reduce block-item-list -> block-item 
342 ++ :  reduce block-item-list -> block-item 
342 . :  reduce block-item-list -> block-item 
342 -> :  reduce block-item-list -> block-item 
342 -- :  reduce block-item-list -> block-item 
342 sizeof :  reduce block-item-list -> block-item 
342 & :  reduce block-item-list -> block-item 
342 + :  reduce block-item-list -> block-item 
342 - :  reduce block-item-list -> block-item 
342 ~ :  reduce block-item-list -> block-item 
342 ! :  reduce block-item-list -> block-item 
342 / :  reduce block-item-list -> block-item 
342 % :  reduce block-item-list -> block-item 
342 << :  reduce block-item-list -> block-item 
342 >> :  reduce block-item-list -> block-item 
342 < :  reduce block-item-list -> block-item 
342 > :  reduce block-item-list -> block-item 
342 <= :  reduce block-item-list -> block-item 
342 >= :  reduce block-item-list -> block-item 
342 == :  reduce block-item-list -> block-item 
342 != :  reduce block-item-list -> block-item 
342 ^ :  reduce block-item-list -> block-item 
342 | :  reduce block-item-list -> block-item 
342 && :  reduce block-item-list -> block-item 
342 || :  reduce block-item-list -> block-item 
342 *= :  reduce block-item-list -> block-item 
342 ? :  reduce block-item-list -> block-item 
342 += :  reduce block-item-list -> block-item 
342 ^= :  reduce block-item-list -> block-item 
342 -= :  reduce block-item-list -> block-item 
342 <<= :  reduce block-item-list -> block-item 
342 >>= :  reduce block-item-list -> block-item 
342 &= :  reduce block-item-list -> block-item 
342 |= :  reduce block-item-list -> block-item 
342 # :  reduce block-item-list -> block-item 
342 epsilon :  reduce block-item-list -> block-item 
332 ; :  reduce expression -> assignment-expression 
332 , :  reduce expression -> assignment-expression 
97 # :  reduce type-specifier -> short 
94 void :  reduce specifier-qualifier-list -> type-qualifier 
94 char :  reduce specifier-qualifier-list -> type-qualifier 
94 short :  reduce specifier-qualifier-list -> type-qualifier 
94 int :  reduce specifier-qualifier-list -> type-qualifier 
94 long :  reduce specifier-qualifier-list -> type-qualifier 
94 float :  reduce specifier-qualifier-list -> type-qualifier 
94 double :  reduce specifier-qualifier-list -> type-qualifier 
94 signed :  reduce specifier-qualifier-list -> type-qualifier 
94 unsigned :  reduce specifier-qualifier-list -> type-qualifier 
94 const :  reduce specifier-qualifier-list -> type-qualifier 
94 restrict :  reduce specifier-qualifier-list -> type-qualifier 
94 volatile :  reduce specifier-qualifier-list -> type-qualifier 
94 { :  reduce specifier-qualifier-list -> type-qualifier 
94 struct :  reduce specifier-qualifier-list -> type-qualifier 
94 union :  reduce specifier-qualifier-list -> type-qualifier 
94 identifier :  reduce specifier-qualifier-list -> type-qualifier 
94 enum :  reduce specifier-qualifier-list -> type-qualifier 
94 # :  reduce specifier-qualifier-list -> type-qualifier 
94 epsilon :  reduce specifier-qualifier-list -> type-qualifier 
102 # :  reduce type-specifier -> signed 
103 # :  reduce type-specifier -> unsigned 
99 # :  reduce type-specifier -> long 
100 # :  reduce type-specifier -> float 
101 # :  reduce type-specifier -> double 
93 void :  reduce specifier-qualifier-list -> type-specifier 
93 char :  reduce specifier-qualifier-list -> type-specifier 
93 short :  reduce specifier-qualifier-list -> type-specifier 
93 int :  reduce specifier-qualifier-list -> type-specifier 
93 long :  reduce specifier-qualifier-list -> type-specifier 
93 float :  reduce specifier-qualifier-list -> type-specifier 
93 double :  reduce specifier-qualifier-list -> type-specifier 
93 signed :  reduce specifier-qualifier-list -> type-specifier 
93 unsigned :  reduce specifier-qualifier-list -> type-specifier 
93 const :  reduce specifier-qualifier-list -> type-specifier 
93 restrict :  reduce specifier-qualifier-list -> type-specifier 
93 volatile :  reduce specifier-qualifier-list -> type-specifier 
93 { :  reduce specifier-qualifier-list -> type-specifier 
93 struct :  reduce specifier-qualifier-list -> type-specifier 
93 union :  reduce specifier-qualifier-list -> type-specifier 
93 identifier :  reduce specifier-qualifier-list -> type-specifier 
93 enum :  reduce specifier-qualifier-list -> type-specifier 
93 # :  reduce specifier-qualifier-list -> type-specifier 
93 epsilon :  reduce specifier-qualifier-list -> type-specifier 
96 # :  reduce type-specifier -> char 
98 # :  reduce type-specifier -> int 
95 # :  reduce type-specifier -> void 
104 # :  reduce type-specifier -> struct-or-union-specifier 
105 # :  reduce type-specifier -> enum-specifier 
106 # :  reduce type-qualifier -> const 
107 # :  reduce type-qualifier -> restrict 
108 # :  reduce type-qualifier -> volatile 
117 type-specifier :  goto 115
117 type-qualifier :  goto 116
117 void :  shift 95
117 char :  shift 96
117 short :  shift 97
117 int :  shift 98
117 long :  shift 99
117 float :  shift 100
117 double :  shift 101
117 signed :  shift 102
117 unsigned :  shift 103
117 struct-or-union-specifier :  goto 104
117 enum-specifier :  goto 105
117 const :  shift 106
117 restrict :  shift 107
117 volatile :  shift 108
117 struct-or-union :  goto 27
117 } :  shift 120
117 struct :  shift 28
117 union :  shift 29
117 struct-declaration :  goto 121
117 specifier-qualifier-list :  goto 119
117 enum :  shift 30
344 ( :  shift 364
345 ( :  shift 376
309 type-specifier :  goto 115
309 type-qualifier :  goto 116
309 void :  shift 95
309 char :  shift 96
309 short :  shift 97
309 int :  shift 98
309 long :  shift 99
309 float :  shift 100
309 double :  shift 101
309 signed :  shift 102
309 unsigned :  shift 103
309 struct-or-union-specifier :  goto 104
309 enum-specifier :  goto 105
309 const :  shift 106
309 restrict :  shift 107
309 volatile :  shift 108
309 struct-or-union :  goto 27
309 struct-declaration-list :  goto 310
309 struct :  shift 28
309 union :  shift 29
309 struct-declaration :  goto 118
309 specifier-qualifier-list :  goto 119
309 enum :  shift 30
118 ; :  reduce struct-declaration-list -> struct-declaration 
118 void :  reduce struct-declaration-list -> struct-declaration 
118 char :  reduce struct-declaration-list -> struct-declaration 
118 short :  reduce struct-declaration-list -> struct-declaration 
118 int :  reduce struct-declaration-list -> struct-declaration 
118 long :  reduce struct-declaration-list -> struct-declaration 
118 float :  reduce struct-declaration-list -> struct-declaration 
118 double :  reduce struct-declaration-list -> struct-declaration 
118 signed :  reduce struct-declaration-list -> struct-declaration 
118 unsigned :  reduce struct-declaration-list -> struct-declaration 
118 const :  reduce struct-declaration-list -> struct-declaration 
118 restrict :  reduce struct-declaration-list -> struct-declaration 
118 volatile :  reduce struct-declaration-list -> struct-declaration 
118 , :  reduce struct-declaration-list -> struct-declaration 
118 { :  reduce struct-declaration-list -> struct-declaration 
118 } :  reduce struct-declaration-list -> struct-declaration 
118 struct :  reduce struct-declaration-list -> struct-declaration 
118 union :  reduce struct-declaration-list -> struct-declaration 
118 identifier :  reduce struct-declaration-list -> struct-declaration 
118 : :  reduce struct-declaration-list -> struct-declaration 
118 enum :  reduce struct-declaration-list -> struct-declaration 
118 ( :  reduce struct-declaration-list -> struct-declaration 
118 [ :  reduce struct-declaration-list -> struct-declaration 
118 * :  reduce struct-declaration-list -> struct-declaration 
118 # :  reduce struct-declaration-list -> struct-declaration 
283 const :  reduce type-qualifier-list -> type-qualifier 
283 restrict :  reduce type-qualifier-list -> type-qualifier 
283 volatile :  reduce type-qualifier-list -> type-qualifier 
283 * :  reduce type-qualifier-list -> type-qualifier 
283 # :  reduce type-qualifier-list -> type-qualifier 
289 const :  reduce type-qualifier-list -> type-qualifier-list type-qualifier 
289 restrict :  reduce type-qualifier-list -> type-qualifier-list type-qualifier 
289 volatile :  reduce type-qualifier-list -> type-qualifier-list type-qualifier 
289 * :  reduce type-qualifier-list -> type-qualifier-list type-qualifier 
289 # :  reduce type-qualifier-list -> type-qualifier-list type-qualifier 
134 identifier :  shift 55
134 enumeration-constant :  goto 57
134 ( :  shift 153
134 constant :  goto 59
134 * :  shift 60
134 primary-expression :  goto 61
134 string-literal :  shift 62
134 integer-constant :  shift 63
134 floating-constant :  shift 64
134 character-constant :  shift 65
134 postfix-expression :  goto 132
134 ++ :  shift 133
134 -- :  shift 134
134 function-call :  goto 69
134 array-access :  goto 70
134 unary-expression :  goto 160
134 unary-operator :  goto 136
134 sizeof :  shift 137
134 & :  shift 75
134 + :  shift 76
134 - :  shift 77
134 ~ :  shift 78
134 ! :  shift 79
135 # :  reduce cast-expression -> unary-expression 
136 identifier :  shift 55
136 enumeration-constant :  goto 57
136 ( :  shift 58
136 constant :  goto 59
136 * :  shift 60
136 primary-expression :  goto 61
136 string-literal :  shift 62
136 integer-constant :  shift 63
136 floating-constant :  shift 64
136 character-constant :  shift 65
136 postfix-expression :  goto 132
136 ++ :  shift 133
136 -- :  shift 134
136 function-call :  goto 69
136 array-access :  goto 70
136 unary-expression :  goto 135
136 unary-operator :  goto 136
136 cast-expression :  goto 161
136 sizeof :  shift 137
136 & :  shift 75
136 + :  shift 76
136 - :  shift 77
136 ~ :  shift 78
136 ! :  shift 79
304 , :  reduce identifier-list -> identifier-list , identifier 
304 ) :  reduce identifier-list -> identifier-list , identifier 
153 identifier :  shift 55
153 assignment-expression :  goto 110
153 enumeration-constant :  goto 57
153 ( :  shift 58
153 constant :  goto 59
153 * :  shift 60
153 expression :  goto 112
153 primary-expression :  goto 61
153 string-literal :  shift 62
153 integer-constant :  shift 63
153 floating-constant :  shift 64
153 character-constant :  shift 65
153 postfix-expression :  goto 66
153 ++ :  shift 67
153 -- :  shift 68
153 function-call :  goto 69
153 array-access :  goto 70
153 unary-expression :  goto 71
153 unary-operator :  goto 72
153 cast-expression :  goto 73
153 sizeof :  shift 74
153 & :  shift 75
153 + :  shift 76
153 - :  shift 77
153 ~ :  shift 78
153 ! :  shift 79
153 multiplicative-expression :  goto 80
153 additive-expression :  goto 81
153 shift-expression :  goto 82
153 relational-expression :  goto 83
153 equality-expression :  goto 84
153 AND-expression :  goto 85
153 exclusive-OR-expression :  goto 86
153 inclusive-OR-expression :  goto 87
153 logical-AND-expression :  goto 88
153 logical-OR-expression :  goto 89
153 conditional-expression :  goto 90
268 identifier :  shift 36
268 direct-declarator :  goto 277
268 ( :  shift 39
291 identifier :  reduce pointer -> * type-qualifier-list pointer 
291 ( :  reduce pointer -> * type-qualifier-list pointer 
291 [ :  reduce pointer -> * type-qualifier-list pointer 
291 # :  reduce pointer -> * type-qualifier-list pointer 
293 declaration-specifiers :  goto 296
293 storage-class-specifier :  goto 293
293 type-specifier :  goto 294
293 type-qualifier :  goto 295
293 extern :  shift 10
293 static :  shift 11
293 register :  shift 12
293 void :  shift 13
293 char :  shift 14
293 short :  shift 15
293 int :  shift 16
293 long :  shift 17
293 float :  shift 18
293 double :  shift 19
293 signed :  shift 20
293 unsigned :  shift 21
293 struct-or-union-specifier :  goto 22
293 enum-specifier :  goto 23
293 const :  shift 24
293 restrict :  shift 25
293 volatile :  shift 26
293 struct-or-union :  goto 27
293 struct :  shift 28
293 union :  shift 29
293 enum :  shift 30
293 # :  reduce declaration-specifiers -> storage-class-specifier 
302 identifier :  shift 304
303 ( :  reduce direct-declarator -> direct-declarator ( identifier-list ) 
303 [ :  reduce direct-declarator -> direct-declarator ( identifier-list ) 
303 # :  reduce direct-declarator -> direct-declarator ( identifier-list ) 
346 ( :  shift 380
300 identifier :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
300 ( :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
300 [ :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
300 * :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
300 # :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
300 epsilon :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
180 identifier :  shift 55
180 enumeration-constant :  goto 57
180 ( :  shift 58
180 constant :  goto 59
180 * :  shift 60
180 primary-expression :  goto 61
180 string-literal :  shift 62
180 integer-constant :  shift 63
180 floating-constant :  shift 64
180 character-constant :  shift 65
180 postfix-expression :  goto 132
180 ++ :  shift 133
180 -- :  shift 134
180 function-call :  goto 69
180 array-access :  goto 70
180 unary-expression :  goto 135
180 unary-operator :  goto 136
180 cast-expression :  goto 183
180 sizeof :  shift 137
180 & :  shift 75
180 + :  shift 76
180 - :  shift 77
180 ~ :  shift 78
180 ! :  shift 79
203 < :  shift 193
203 > :  shift 194
203 <= :  shift 195
203 >= :  shift 196
203 == :  reduce equality-expression -> equality-expression == relational-expression 
203 != :  reduce equality-expression -> equality-expression == relational-expression 
203 # :  reduce equality-expression -> equality-expression == relational-expression 
193 identifier :  shift 55
193 enumeration-constant :  goto 57
193 ( :  shift 58
193 constant :  goto 59
193 * :  shift 60
193 primary-expression :  goto 61
193 string-literal :  shift 62
193 integer-constant :  shift 63
193 floating-constant :  shift 64
193 character-constant :  shift 65
193 postfix-expression :  goto 132
193 ++ :  shift 133
193 -- :  shift 134
193 function-call :  goto 69
193 array-access :  goto 70
193 unary-expression :  goto 135
193 unary-operator :  goto 136
193 cast-expression :  goto 73
193 sizeof :  shift 137
193 & :  shift 75
193 + :  shift 76
193 - :  shift 77
193 ~ :  shift 78
193 ! :  shift 79
193 multiplicative-expression :  goto 80
193 additive-expression :  goto 81
193 shift-expression :  goto 197
200 << :  shift 189
200 >> :  shift 190
200 < :  reduce relational-expression -> relational-expression >= shift-expression 
200 > :  reduce relational-expression -> relational-expression >= shift-expression 
200 <= :  reduce relational-expression -> relational-expression >= shift-expression 
200 >= :  reduce relational-expression -> relational-expression >= shift-expression 
200 # :  reduce relational-expression -> relational-expression >= shift-expression 
210 ^ :  shift 207
210 | :  reduce inclusive-OR-expression -> inclusive-OR-expression | exclusive-OR-expression 
210 # :  reduce inclusive-OR-expression -> inclusive-OR-expression | exclusive-OR-expression 
114 { :  shift 309
114 # :  reduce struct-or-union-specifier -> struct-or-union identifier 
111 ) :  shift 312
112 , :  shift 155
112 ) :  shift 156
113 type-specifier :  goto 115
113 type-qualifier :  goto 116
113 void :  shift 95
113 char :  shift 96
113 short :  shift 97
113 int :  shift 98
113 long :  shift 99
113 float :  shift 100
113 double :  shift 101
113 signed :  shift 102
113 unsigned :  shift 103
113 struct-or-union-specifier :  goto 104
113 enum-specifier :  goto 105
113 const :  shift 106
113 restrict :  shift 107
113 volatile :  shift 108
113 struct-or-union :  goto 27
113 struct-declaration-list :  goto 117
113 struct :  shift 28
113 union :  shift 29
113 struct-declaration :  goto 118
113 specifier-qualifier-list :  goto 119
113 enum :  shift 30
68 identifier :  shift 55
68 enumeration-constant :  goto 57
68 ( :  shift 153
68 constant :  goto 59
68 * :  shift 60
68 primary-expression :  goto 61
68 string-literal :  shift 62
68 integer-constant :  shift 63
68 floating-constant :  shift 64
68 character-constant :  shift 65
68 postfix-expression :  goto 132
68 ++ :  shift 133
68 -- :  shift 134
68 function-call :  goto 69
68 array-access :  goto 70
68 unary-expression :  goto 158
68 unary-operator :  goto 136
68 sizeof :  shift 137
68 & :  shift 75
68 + :  shift 76
68 - :  shift 77
68 ~ :  shift 78
68 ! :  shift 79
70 ( :  reduce postfix-expression -> array-access 
70 [ :  reduce postfix-expression -> array-access 
70 ++ :  reduce postfix-expression -> array-access 
70 . :  reduce postfix-expression -> array-access 
70 -> :  reduce postfix-expression -> array-access 
70 -- :  reduce postfix-expression -> array-access 
70 # :  reduce postfix-expression -> array-access 
73 * :  reduce multiplicative-expression -> cast-expression 
73 / :  reduce multiplicative-expression -> cast-expression 
73 % :  reduce multiplicative-expression -> cast-expression 
73 # :  reduce multiplicative-expression -> cast-expression 
45 declaration-specifiers :  goto 324
45 ; :  reduce declaration-specifiers -> storage-class-specifier 
45 storage-class-specifier :  goto 293
45 type-specifier :  goto 294
45 type-qualifier :  goto 295
45 extern :  shift 10
45 static :  shift 11
45 register :  shift 12
45 void :  shift 13
45 char :  shift 14
45 short :  shift 15
45 int :  shift 16
45 long :  shift 17
45 float :  shift 18
45 double :  shift 19
45 signed :  shift 20
45 unsigned :  shift 21
45 struct-or-union-specifier :  goto 22
45 enum-specifier :  goto 23
45 const :  shift 24
45 restrict :  shift 25
45 volatile :  shift 26
45 , :  reduce declaration-specifiers -> storage-class-specifier 
45 = :  reduce declaration-specifiers -> storage-class-specifier 
45 struct-or-union :  goto 27
45 struct :  shift 28
45 union :  shift 29
45 identifier :  reduce declaration-specifiers -> storage-class-specifier 
45 enum :  shift 30
45 ( :  reduce declaration-specifiers -> storage-class-specifier 
45 [ :  reduce declaration-specifiers -> storage-class-specifier 
45 * :  reduce declaration-specifiers -> storage-class-specifier 
45 epsilon :  reduce declaration-specifiers -> storage-class-specifier 
69 ( :  reduce postfix-expression -> function-call 
69 [ :  reduce postfix-expression -> function-call 
69 ++ :  reduce postfix-expression -> function-call 
69 . :  reduce postfix-expression -> function-call 
69 -> :  reduce postfix-expression -> function-call 
69 -- :  reduce postfix-expression -> function-call 
69 # :  reduce postfix-expression -> function-call 
72 identifier :  shift 55
72 enumeration-constant :  goto 57
72 ( :  shift 58
72 constant :  goto 59
72 * :  shift 60
72 primary-expression :  goto 61
72 string-literal :  shift 62
72 integer-constant :  shift 63
72 floating-constant :  shift 64
72 character-constant :  shift 65
72 postfix-expression :  goto 132
72 ++ :  shift 133
72 -- :  shift 134
72 function-call :  goto 69
72 array-access :  goto 70
72 unary-expression :  goto 135
72 unary-operator :  goto 136
72 cast-expression :  goto 234
72 sizeof :  shift 137
72 & :  shift 75
72 + :  shift 76
72 - :  shift 77
72 ~ :  shift 78
72 ! :  shift 79
315 # :  reduce initializer -> { initializer-list } 
115 ; :  reduce specifier-qualifier-list -> type-specifier 
115 void :  reduce specifier-qualifier-list -> type-specifier 
115 char :  reduce specifier-qualifier-list -> type-specifier 
115 short :  reduce specifier-qualifier-list -> type-specifier 
115 int :  reduce specifier-qualifier-list -> type-specifier 
115 long :  reduce specifier-qualifier-list -> type-specifier 
115 float :  reduce specifier-qualifier-list -> type-specifier 
115 double :  reduce specifier-qualifier-list -> type-specifier 
115 signed :  reduce specifier-qualifier-list -> type-specifier 
115 unsigned :  reduce specifier-qualifier-list -> type-specifier 
115 const :  reduce specifier-qualifier-list -> type-specifier 
115 restrict :  reduce specifier-qualifier-list -> type-specifier 
115 volatile :  reduce specifier-qualifier-list -> type-specifier 
115 , :  reduce specifier-qualifier-list -> type-specifier 
115 { :  reduce specifier-qualifier-list -> type-specifier 
115 struct :  reduce specifier-qualifier-list -> type-specifier 
115 union :  reduce specifier-qualifier-list -> type-specifier 
115 identifier :  reduce specifier-qualifier-list -> type-specifier 
115 : :  reduce specifier-qualifier-list -> type-specifier 
115 enum :  reduce specifier-qualifier-list -> type-specifier 
115 ( :  reduce specifier-qualifier-list -> type-specifier 
115 [ :  reduce specifier-qualifier-list -> type-specifier 
115 * :  reduce specifier-qualifier-list -> type-specifier 
115 # :  reduce specifier-qualifier-list -> type-specifier 
115 epsilon :  reduce specifier-qualifier-list -> type-specifier 
116 ; :  reduce specifier-qualifier-list -> type-qualifier 
116 void :  reduce specifier-qualifier-list -> type-qualifier 
116 char :  reduce specifier-qualifier-list -> type-qualifier 
116 short :  reduce specifier-qualifier-list -> type-qualifier 
116 int :  reduce specifier-qualifier-list -> type-qualifier 
116 long :  reduce specifier-qualifier-list -> type-qualifier 
116 float :  reduce specifier-qualifier-list -> type-qualifier 
116 double :  reduce specifier-qualifier-list -> type-qualifier 
116 signed :  reduce specifier-qualifier-list -> type-qualifier 
116 unsigned :  reduce specifier-qualifier-list -> type-qualifier 
116 const :  reduce specifier-qualifier-list -> type-qualifier 
116 restrict :  reduce specifier-qualifier-list -> type-qualifier 
116 volatile :  reduce specifier-qualifier-list -> type-qualifier 
116 , :  reduce specifier-qualifier-list -> type-qualifier 
116 { :  reduce specifier-qualifier-list -> type-qualifier 
116 struct :  reduce specifier-qualifier-list -> type-qualifier 
116 union :  reduce specifier-qualifier-list -> type-qualifier 
116 identifier :  reduce specifier-qualifier-list -> type-qualifier 
116 : :  reduce specifier-qualifier-list -> type-qualifier 
116 enum :  reduce specifier-qualifier-list -> type-qualifier 
116 ( :  reduce specifier-qualifier-list -> type-qualifier 
116 [ :  reduce specifier-qualifier-list -> type-qualifier 
116 * :  reduce specifier-qualifier-list -> type-qualifier 
116 # :  reduce specifier-qualifier-list -> type-qualifier 
116 epsilon :  reduce specifier-qualifier-list -> type-qualifier 
142 identifier :  shift 246
143 identifier :  shift 247
141 ( :  reduce postfix-expression -> postfix-expression ++ 
141 [ :  reduce postfix-expression -> postfix-expression ++ 
141 ++ :  reduce postfix-expression -> postfix-expression ++ 
141 . :  reduce postfix-expression -> postfix-expression ++ 
141 -> :  reduce postfix-expression -> postfix-expression ++ 
141 -- :  reduce postfix-expression -> postfix-expression ++ 
141 # :  reduce postfix-expression -> postfix-expression ++ 
248 identifier :  shift 55
248 assignment-expression :  goto 250
248 enumeration-constant :  goto 57
248 ( :  shift 58
248 constant :  goto 59
248 * :  shift 60
248 primary-expression :  goto 61
248 string-literal :  shift 62
248 integer-constant :  shift 63
248 floating-constant :  shift 64
248 character-constant :  shift 65
248 postfix-expression :  goto 66
248 ++ :  shift 67
248 -- :  shift 68
248 function-call :  goto 69
248 array-access :  goto 70
248 unary-expression :  goto 71
248 unary-operator :  goto 72
248 cast-expression :  goto 73
248 sizeof :  shift 74
248 & :  shift 75
248 + :  shift 76
248 - :  shift 77
248 ~ :  shift 78
248 ! :  shift 79
248 multiplicative-expression :  goto 80
248 additive-expression :  goto 81
248 shift-expression :  goto 82
248 relational-expression :  goto 83
248 equality-expression :  goto 84
248 AND-expression :  goto 85
248 exclusive-OR-expression :  goto 86
248 inclusive-OR-expression :  goto 87
248 logical-AND-expression :  goto 88
248 logical-OR-expression :  goto 89
248 conditional-expression :  goto 90
144 ( :  reduce postfix-expression -> postfix-expression -- 
144 [ :  reduce postfix-expression -> postfix-expression -- 
144 ++ :  reduce postfix-expression -> postfix-expression -- 
144 . :  reduce postfix-expression -> postfix-expression -- 
144 -> :  reduce postfix-expression -> postfix-expression -- 
144 -- :  reduce postfix-expression -> postfix-expression -- 
144 # :  reduce postfix-expression -> postfix-expression -- 
272 ] :  shift 276
270 ] :  reduce constant -> enumeration-constant 
130 identifier :  shift 55
130 constant-expression :  goto 131
130 enumeration-constant :  goto 57
130 ( :  shift 58
130 constant :  goto 59
130 * :  shift 60
130 primary-expression :  goto 61
130 string-literal :  shift 62
130 integer-constant :  shift 63
130 floating-constant :  shift 64
130 character-constant :  shift 65
130 postfix-expression :  goto 132
130 ++ :  shift 133
130 -- :  shift 134
130 function-call :  goto 69
130 array-access :  goto 70
130 unary-expression :  goto 135
130 unary-operator :  goto 136
130 cast-expression :  goto 73
130 sizeof :  shift 137
130 & :  shift 75
130 + :  shift 76
130 - :  shift 77
130 ~ :  shift 78
130 ! :  shift 79
130 multiplicative-expression :  goto 80
130 additive-expression :  goto 81
130 shift-expression :  goto 82
130 relational-expression :  goto 83
130 equality-expression :  goto 84
130 AND-expression :  goto 85
130 exclusive-OR-expression :  goto 86
130 inclusive-OR-expression :  goto 87
130 logical-AND-expression :  goto 88
130 logical-OR-expression :  goto 89
130 conditional-expression :  goto 138
320 ; :  reduce init-declarator-list -> init-declarator-list , init-declarator 
320 , :  reduce init-declarator-list -> init-declarator-list , init-declarator 
140 identifier :  shift 55
140 assignment-expression :  goto 148
140 enumeration-constant :  goto 57
140 ( :  shift 58
140 constant :  goto 59
140 * :  shift 60
140 expression :  goto 149
140 primary-expression :  goto 61
140 string-literal :  shift 62
140 integer-constant :  shift 63
140 floating-constant :  shift 64
140 character-constant :  shift 65
140 postfix-expression :  goto 66
140 ++ :  shift 67
140 -- :  shift 68
140 function-call :  goto 69
140 array-access :  goto 70
140 unary-expression :  goto 71
140 unary-operator :  goto 72
140 cast-expression :  goto 73
140 sizeof :  shift 74
140 & :  shift 75
140 + :  shift 76
140 - :  shift 77
140 ~ :  shift 78
140 ! :  shift 79
140 multiplicative-expression :  goto 80
140 additive-expression :  goto 81
140 shift-expression :  goto 82
140 relational-expression :  goto 83
140 equality-expression :  goto 84
140 AND-expression :  goto 85
140 exclusive-OR-expression :  goto 86
140 inclusive-OR-expression :  goto 87
140 logical-AND-expression :  goto 88
140 logical-OR-expression :  goto 89
140 conditional-expression :  goto 90
287 # :  reduce pointer -> * pointer 
292 identifier :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
292 ( :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
292 [ :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
292 * :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
292 # :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
292 epsilon :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
319 declarator :  goto 50
319 init-declarator :  goto 320
319 identifier :  shift 36
319 direct-declarator :  goto 51
319 pointer :  goto 52
319 ( :  shift 39
319 * :  shift 40
360 # :  reduce labeled-statement -> default : statement 
379 # :  reduce selection-statement -> switch ( expression ) statement 
148 , :  reduce expression -> assignment-expression 
148 ] :  reduce expression -> assignment-expression 
258 declaration-specifiers :  goto 299
258 storage-class-specifier :  goto 293
258 type-specifier :  goto 294
258 type-qualifier :  goto 295
258 extern :  shift 10
258 static :  shift 11
258 register :  shift 12
258 void :  shift 13
258 char :  shift 14
258 short :  shift 15
258 int :  shift 16
258 long :  shift 17
258 float :  shift 18
258 double :  shift 19
258 signed :  shift 20
258 unsigned :  shift 21
258 struct-or-union-specifier :  goto 22
258 enum-specifier :  goto 23
258 const :  shift 24
258 restrict :  shift 25
258 volatile :  shift 26
258 struct-or-union :  goto 27
258 struct :  shift 28
258 union :  shift 29
258 identifier :  reduce declaration-specifiers -> type-specifier 
258 enum :  shift 30
258 ( :  reduce declaration-specifiers -> type-specifier 
258 [ :  reduce declaration-specifiers -> type-specifier 
258 * :  reduce declaration-specifiers -> type-specifier 
258 # :  reduce declaration-specifiers -> type-specifier 
258 epsilon :  reduce declaration-specifiers -> type-specifier 
168 { :  shift 240
168 # :  reduce enum-specifier -> enum identifier 
167 identifier :  shift 169
167 enumerator :  goto 170
167 enumerator-list :  goto 171
167 enumeration-constant :  goto 172
314 initializer :  goto 316
314 { :  shift 54
314 } :  shift 317
314 identifier :  shift 55
314 assignment-expression :  goto 56
314 enumeration-constant :  goto 57
314 ( :  shift 58
314 constant :  goto 59
314 * :  shift 60
314 primary-expression :  goto 61
314 string-literal :  shift 62
314 integer-constant :  shift 63
314 floating-constant :  shift 64
314 character-constant :  shift 65
314 postfix-expression :  goto 66
314 ++ :  shift 67
314 -- :  shift 68
314 function-call :  goto 69
314 array-access :  goto 70
314 unary-expression :  goto 71
314 unary-operator :  goto 72
314 cast-expression :  goto 73
314 sizeof :  shift 74
314 & :  shift 75
314 + :  shift 76
314 - :  shift 77
314 ~ :  shift 78
314 ! :  shift 79
314 multiplicative-expression :  goto 80
314 additive-expression :  goto 81
314 shift-expression :  goto 82
314 relational-expression :  goto 83
314 equality-expression :  goto 84
314 AND-expression :  goto 85
314 exclusive-OR-expression :  goto 86
314 inclusive-OR-expression :  goto 87
314 logical-AND-expression :  goto 88
314 logical-OR-expression :  goto 89
314 conditional-expression :  goto 90
286 type-qualifier :  goto 289
286 const :  shift 106
286 restrict :  shift 107
286 volatile :  shift 108
286 identifier :  reduce pointer -> * type-qualifier-list 
286 pointer :  goto 291
286 ( :  reduce pointer -> * type-qualifier-list 
286 [ :  reduce pointer -> * type-qualifier-list 
286 * :  shift 285
286 # :  reduce pointer -> * type-qualifier-list 
280 identifier :  shift 36
280 direct-declarator :  goto 282
280 ( :  shift 39
218 identifier :  shift 55
218 assignment-expression :  goto 220
218 enumeration-constant :  goto 57
218 ( :  shift 58
218 constant :  goto 59
218 * :  shift 60
218 primary-expression :  goto 61
218 string-literal :  shift 62
218 integer-constant :  shift 63
218 floating-constant :  shift 64
218 character-constant :  shift 65
218 postfix-expression :  goto 66
218 ++ :  shift 67
218 -- :  shift 68
218 function-call :  goto 69
218 array-access :  goto 70
218 unary-expression :  goto 71
218 unary-operator :  goto 72
218 cast-expression :  goto 73
218 sizeof :  shift 74
218 & :  shift 75
218 + :  shift 76
218 - :  shift 77
218 ~ :  shift 78
218 ! :  shift 79
218 multiplicative-expression :  goto 80
218 additive-expression :  goto 81
218 shift-expression :  goto 82
218 relational-expression :  goto 83
218 equality-expression :  goto 84
218 AND-expression :  goto 85
218 exclusive-OR-expression :  goto 86
218 inclusive-OR-expression :  goto 87
218 logical-AND-expression :  goto 88
218 logical-OR-expression :  goto 89
218 conditional-expression :  goto 90
249 # :  reduce function-call -> postfix-expression ( argument-expression-list ) 
228 = :  reduce assignment-operator -> -= 
228 identifier :  reduce assignment-operator -> -= 
228 ( :  reduce assignment-operator -> -= 
228 [ :  reduce assignment-operator -> -= 
228 * :  reduce assignment-operator -> -= 
228 /= :  reduce assignment-operator -> -= 
228 %= :  reduce assignment-operator -> -= 
228 string-literal :  reduce assignment-operator -> -= 
228 integer-constant :  reduce assignment-operator -> -= 
228 floating-constant :  reduce assignment-operator -> -= 
228 character-constant :  reduce assignment-operator -> -= 
228 ++ :  reduce assignment-operator -> -= 
228 . :  reduce assignment-operator -> -= 
228 -> :  reduce assignment-operator -> -= 
228 -- :  reduce assignment-operator -> -= 
228 sizeof :  reduce assignment-operator -> -= 
228 & :  reduce assignment-operator -> -= 
228 + :  reduce assignment-operator -> -= 
228 - :  reduce assignment-operator -> -= 
228 ~ :  reduce assignment-operator -> -= 
228 ! :  reduce assignment-operator -> -= 
228 / :  reduce assignment-operator -> -= 
228 % :  reduce assignment-operator -> -= 
228 << :  reduce assignment-operator -> -= 
228 >> :  reduce assignment-operator -> -= 
228 < :  reduce assignment-operator -> -= 
228 > :  reduce assignment-operator -> -= 
228 <= :  reduce assignment-operator -> -= 
228 >= :  reduce assignment-operator -> -= 
228 == :  reduce assignment-operator -> -= 
228 != :  reduce assignment-operator -> -= 
228 ^ :  reduce assignment-operator -> -= 
228 | :  reduce assignment-operator -> -= 
228 && :  reduce assignment-operator -> -= 
228 || :  reduce assignment-operator -> -= 
228 *= :  reduce assignment-operator -> -= 
228 ? :  reduce assignment-operator -> -= 
228 += :  reduce assignment-operator -> -= 
228 ^= :  reduce assignment-operator -> -= 
228 -= :  reduce assignment-operator -> -= 
228 <<= :  reduce assignment-operator -> -= 
228 >>= :  reduce assignment-operator -> -= 
228 &= :  reduce assignment-operator -> -= 
228 |= :  reduce assignment-operator -> -= 
228 # :  reduce assignment-operator -> -= 
228 epsilon :  reduce assignment-operator -> -= 
230 = :  reduce assignment-operator -> >>= 
230 identifier :  reduce assignment-operator -> >>= 
230 ( :  reduce assignment-operator -> >>= 
230 [ :  reduce assignment-operator -> >>= 
230 * :  reduce assignment-operator -> >>= 
230 /= :  reduce assignment-operator -> >>= 
230 %= :  reduce assignment-operator -> >>= 
230 string-literal :  reduce assignment-operator -> >>= 
230 integer-constant :  reduce assignment-operator -> >>= 
230 floating-constant :  reduce assignment-operator -> >>= 
230 character-constant :  reduce assignment-operator -> >>= 
230 ++ :  reduce assignment-operator -> >>= 
230 . :  reduce assignment-operator -> >>= 
230 -> :  reduce assignment-operator -> >>= 
230 -- :  reduce assignment-operator -> >>= 
230 sizeof :  reduce assignment-operator -> >>= 
230 & :  reduce assignment-operator -> >>= 
230 + :  reduce assignment-operator -> >>= 
230 - :  reduce assignment-operator -> >>= 
230 ~ :  reduce assignment-operator -> >>= 
230 ! :  reduce assignment-operator -> >>= 
230 / :  reduce assignment-operator -> >>= 
230 % :  reduce assignment-operator -> >>= 
230 << :  reduce assignment-operator -> >>= 
230 >> :  reduce assignment-operator -> >>= 
230 < :  reduce assignment-operator -> >>= 
230 > :  reduce assignment-operator -> >>= 
230 <= :  reduce assignment-operator -> >>= 
230 >= :  reduce assignment-operator -> >>= 
230 == :  reduce assignment-operator -> >>= 
230 != :  reduce assignment-operator -> >>= 
230 ^ :  reduce assignment-operator -> >>= 
230 | :  reduce assignment-operator -> >>= 
230 && :  reduce assignment-operator -> >>= 
230 || :  reduce assignment-operator -> >>= 
230 *= :  reduce assignment-operator -> >>= 
230 ? :  reduce assignment-operator -> >>= 
230 += :  reduce assignment-operator -> >>= 
230 ^= :  reduce assignment-operator -> >>= 
230 -= :  reduce assignment-operator -> >>= 
230 <<= :  reduce assignment-operator -> >>= 
230 >>= :  reduce assignment-operator -> >>= 
230 &= :  reduce assignment-operator -> >>= 
230 |= :  reduce assignment-operator -> >>= 
230 # :  reduce assignment-operator -> >>= 
230 epsilon :  reduce assignment-operator -> >>= 
232 = :  reduce assignment-operator -> |= 
232 identifier :  reduce assignment-operator -> |= 
232 ( :  reduce assignment-operator -> |= 
232 [ :  reduce assignment-operator -> |= 
232 * :  reduce assignment-operator -> |= 
232 /= :  reduce assignment-operator -> |= 
232 %= :  reduce assignment-operator -> |= 
232 string-literal :  reduce assignment-operator -> |= 
232 integer-constant :  reduce assignment-operator -> |= 
232 floating-constant :  reduce assignment-operator -> |= 
232 character-constant :  reduce assignment-operator -> |= 
232 ++ :  reduce assignment-operator -> |= 
232 . :  reduce assignment-operator -> |= 
232 -> :  reduce assignment-operator -> |= 
232 -- :  reduce assignment-operator -> |= 
232 sizeof :  reduce assignment-operator -> |= 
232 & :  reduce assignment-operator -> |= 
232 + :  reduce assignment-operator -> |= 
232 - :  reduce assignment-operator -> |= 
232 ~ :  reduce assignment-operator -> |= 
232 ! :  reduce assignment-operator -> |= 
232 / :  reduce assignment-operator -> |= 
232 % :  reduce assignment-operator -> |= 
232 << :  reduce assignment-operator -> |= 
232 >> :  reduce assignment-operator -> |= 
232 < :  reduce assignment-operator -> |= 
232 > :  reduce assignment-operator -> |= 
232 <= :  reduce assignment-operator -> |= 
232 >= :  reduce assignment-operator -> |= 
232 == :  reduce assignment-operator -> |= 
232 != :  reduce assignment-operator -> |= 
232 ^ :  reduce assignment-operator -> |= 
232 | :  reduce assignment-operator -> |= 
232 && :  reduce assignment-operator -> |= 
232 || :  reduce assignment-operator -> |= 
232 *= :  reduce assignment-operator -> |= 
232 ? :  reduce assignment-operator -> |= 
232 += :  reduce assignment-operator -> |= 
232 ^= :  reduce assignment-operator -> |= 
232 -= :  reduce assignment-operator -> |= 
232 <<= :  reduce assignment-operator -> |= 
232 >>= :  reduce assignment-operator -> |= 
232 &= :  reduce assignment-operator -> |= 
232 |= :  reduce assignment-operator -> |= 
232 # :  reduce assignment-operator -> |= 
232 epsilon :  reduce assignment-operator -> |= 
278 ) :  shift 281
271 ( :  reduce direct-declarator -> direct-declarator [ ] 
271 [ :  reduce direct-declarator -> direct-declarator [ ] 
271 # :  reduce direct-declarator -> direct-declarator [ ] 
274 ] :  reduce constant -> floating-constant 
173 } :  shift 175
173 identifier :  shift 169
173 enumerator :  goto 176
173 enumeration-constant :  goto 172
175 # :  reduce enum-specifier -> enum { enumerator-list , } 
176 , :  reduce enumerator-list -> enumerator-list , enumerator 
176 } :  reduce enumerator-list -> enumerator-list , enumerator 
169 = :  reduce enumeration-constant -> identifier 
169 # :  reduce enumeration-constant -> identifier 
170 , :  reduce enumerator-list -> enumerator 
170 } :  reduce enumerator-list -> enumerator 
172 = :  shift 177
172 # :  reduce enumerator -> enumeration-constant 
171 , :  shift 173
171 } :  shift 174
174 # :  reduce enum-specifier -> enum { enumerator-list } 
276 ( :  reduce direct-declarator -> direct-declarator [ constant ] 
276 [ :  reduce direct-declarator -> direct-declarator [ constant ] 
276 # :  reduce direct-declarator -> direct-declarator [ constant ] 
163 # :  reduce unary-expression -> sizeof unary-expression 
206 & :  reduce AND-expression -> AND-expression & equality-expression 
206 == :  shift 201
206 != :  shift 202
206 # :  reduce AND-expression -> AND-expression & equality-expression 
207 identifier :  shift 55
207 enumeration-constant :  goto 57
207 ( :  shift 58
207 constant :  goto 59
207 * :  shift 60
207 primary-expression :  goto 61
207 string-literal :  shift 62
207 integer-constant :  shift 63
207 floating-constant :  shift 64
207 character-constant :  shift 65
207 postfix-expression :  goto 132
207 ++ :  shift 133
207 -- :  shift 134
207 function-call :  goto 69
207 array-access :  goto 70
207 unary-expression :  goto 135
207 unary-operator :  goto 136
207 cast-expression :  goto 73
207 sizeof :  shift 137
207 & :  shift 75
207 + :  shift 76
207 - :  shift 77
207 ~ :  shift 78
207 ! :  shift 79
207 multiplicative-expression :  goto 80
207 additive-expression :  goto 81
207 shift-expression :  goto 82
207 relational-expression :  goto 83
207 equality-expression :  goto 84
207 AND-expression :  goto 208
191 + :  shift 185
191 - :  shift 186
191 << :  reduce shift-expression -> shift-expression << additive-expression 
191 >> :  reduce shift-expression -> shift-expression << additive-expression 
191 # :  reduce shift-expression -> shift-expression << additive-expression 
273 ] :  reduce constant -> integer-constant 
275 ] :  reduce constant -> character-constant 
185 identifier :  shift 55
185 enumeration-constant :  goto 57
185 ( :  shift 58
185 constant :  goto 59
185 * :  shift 60
185 primary-expression :  goto 61
185 string-literal :  shift 62
185 integer-constant :  shift 63
185 floating-constant :  shift 64
185 character-constant :  shift 65
185 postfix-expression :  goto 132
185 ++ :  shift 133
185 -- :  shift 134
185 function-call :  goto 69
185 array-access :  goto 70
185 unary-expression :  goto 135
185 unary-operator :  goto 136
185 cast-expression :  goto 73
185 sizeof :  shift 137
185 & :  shift 75
185 + :  shift 76
185 - :  shift 77
185 ~ :  shift 78
185 ! :  shift 79
185 multiplicative-expression :  goto 187
269 # :  reduce enumeration-constant -> identifier 
229 = :  reduce assignment-operator -> <<= 
229 identifier :  reduce assignment-operator -> <<= 
229 ( :  reduce assignment-operator -> <<= 
229 [ :  reduce assignment-operator -> <<= 
229 * :  reduce assignment-operator -> <<= 
229 /= :  reduce assignment-operator -> <<= 
229 %= :  reduce assignment-operator -> <<= 
229 string-literal :  reduce assignment-operator -> <<= 
229 integer-constant :  reduce assignment-operator -> <<= 
229 floating-constant :  reduce assignment-operator -> <<= 
229 character-constant :  reduce assignment-operator -> <<= 
229 ++ :  reduce assignment-operator -> <<= 
229 . :  reduce assignment-operator -> <<= 
229 -> :  reduce assignment-operator -> <<= 
229 -- :  reduce assignment-operator -> <<= 
229 sizeof :  reduce assignment-operator -> <<= 
229 & :  reduce assignment-operator -> <<= 
229 + :  reduce assignment-operator -> <<= 
229 - :  reduce assignment-operator -> <<= 
229 ~ :  reduce assignment-operator -> <<= 
229 ! :  reduce assignment-operator -> <<= 
229 / :  reduce assignment-operator -> <<= 
229 % :  reduce assignment-operator -> <<= 
229 << :  reduce assignment-operator -> <<= 
229 >> :  reduce assignment-operator -> <<= 
229 < :  reduce assignment-operator -> <<= 
229 > :  reduce assignment-operator -> <<= 
229 <= :  reduce assignment-operator -> <<= 
229 >= :  reduce assignment-operator -> <<= 
229 == :  reduce assignment-operator -> <<= 
229 != :  reduce assignment-operator -> <<= 
229 ^ :  reduce assignment-operator -> <<= 
229 | :  reduce assignment-operator -> <<= 
229 && :  reduce assignment-operator -> <<= 
229 || :  reduce assignment-operator -> <<= 
229 *= :  reduce assignment-operator -> <<= 
229 ? :  reduce assignment-operator -> <<= 
229 += :  reduce assignment-operator -> <<= 
229 ^= :  reduce assignment-operator -> <<= 
229 -= :  reduce assignment-operator -> <<= 
229 <<= :  reduce assignment-operator -> <<= 
229 >>= :  reduce assignment-operator -> <<= 
229 &= :  reduce assignment-operator -> <<= 
229 |= :  reduce assignment-operator -> <<= 
229 # :  reduce assignment-operator -> <<= 
229 epsilon :  reduce assignment-operator -> <<= 
352 ; :  shift 410
352 identifier :  shift 55
352 assignment-expression :  goto 332
352 enumeration-constant :  goto 57
352 ( :  shift 58
352 constant :  goto 59
352 * :  shift 60
352 expression :  goto 411
352 primary-expression :  goto 61
352 string-literal :  shift 62
352 integer-constant :  shift 63
352 floating-constant :  shift 64
352 character-constant :  shift 65
352 postfix-expression :  goto 66
352 ++ :  shift 67
352 -- :  shift 68
352 function-call :  goto 69
352 array-access :  goto 70
352 unary-expression :  goto 71
352 unary-operator :  goto 72
352 cast-expression :  goto 73
352 sizeof :  shift 74
352 & :  shift 75
352 + :  shift 76
352 - :  shift 77
352 ~ :  shift 78
352 ! :  shift 79
352 multiplicative-expression :  goto 80
352 additive-expression :  goto 81
352 shift-expression :  goto 82
352 relational-expression :  goto 83
352 equality-expression :  goto 84
352 AND-expression :  goto 85
352 exclusive-OR-expression :  goto 86
352 inclusive-OR-expression :  goto 87
352 logical-AND-expression :  goto 88
352 logical-OR-expression :  goto 89
352 conditional-expression :  goto 90
214 identifier :  shift 55
214 assignment-expression :  goto 216
214 enumeration-constant :  goto 57
214 ( :  shift 58
214 constant :  goto 59
214 * :  shift 60
214 expression :  goto 217
214 primary-expression :  goto 61
214 string-literal :  shift 62
214 integer-constant :  shift 63
214 floating-constant :  shift 64
214 character-constant :  shift 65
214 postfix-expression :  goto 66
214 ++ :  shift 67
214 -- :  shift 68
214 function-call :  goto 69
214 array-access :  goto 70
214 unary-expression :  goto 71
214 unary-operator :  goto 72
214 cast-expression :  goto 73
214 sizeof :  shift 74
214 & :  shift 75
214 + :  shift 76
214 - :  shift 77
214 ~ :  shift 78
214 ! :  shift 79
214 multiplicative-expression :  goto 80
214 additive-expression :  goto 81
214 shift-expression :  goto 82
214 relational-expression :  goto 83
214 equality-expression :  goto 84
214 AND-expression :  goto 85
214 exclusive-OR-expression :  goto 86
214 inclusive-OR-expression :  goto 87
214 logical-AND-expression :  goto 88
214 logical-OR-expression :  goto 89
214 conditional-expression :  goto 90
231 = :  reduce assignment-operator -> &= 
231 identifier :  reduce assignment-operator -> &= 
231 ( :  reduce assignment-operator -> &= 
231 [ :  reduce assignment-operator -> &= 
231 * :  reduce assignment-operator -> &= 
231 /= :  reduce assignment-operator -> &= 
231 %= :  reduce assignment-operator -> &= 
231 string-literal :  reduce assignment-operator -> &= 
231 integer-constant :  reduce assignment-operator -> &= 
231 floating-constant :  reduce assignment-operator -> &= 
231 character-constant :  reduce assignment-operator -> &= 
231 ++ :  reduce assignment-operator -> &= 
231 . :  reduce assignment-operator -> &= 
231 -> :  reduce assignment-operator -> &= 
231 -- :  reduce assignment-operator -> &= 
231 sizeof :  reduce assignment-operator -> &= 
231 & :  reduce assignment-operator -> &= 
231 + :  reduce assignment-operator -> &= 
231 - :  reduce assignment-operator -> &= 
231 ~ :  reduce assignment-operator -> &= 
231 ! :  reduce assignment-operator -> &= 
231 / :  reduce assignment-operator -> &= 
231 % :  reduce assignment-operator -> &= 
231 << :  reduce assignment-operator -> &= 
231 >> :  reduce assignment-operator -> &= 
231 < :  reduce assignment-operator -> &= 
231 > :  reduce assignment-operator -> &= 
231 <= :  reduce assignment-operator -> &= 
231 >= :  reduce assignment-operator -> &= 
231 == :  reduce assignment-operator -> &= 
231 != :  reduce assignment-operator -> &= 
231 ^ :  reduce assignment-operator -> &= 
231 | :  reduce assignment-operator -> &= 
231 && :  reduce assignment-operator -> &= 
231 || :  reduce assignment-operator -> &= 
231 *= :  reduce assignment-operator -> &= 
231 ? :  reduce assignment-operator -> &= 
231 += :  reduce assignment-operator -> &= 
231 ^= :  reduce assignment-operator -> &= 
231 -= :  reduce assignment-operator -> &= 
231 <<= :  reduce assignment-operator -> &= 
231 >>= :  reduce assignment-operator -> &= 
231 &= :  reduce assignment-operator -> &= 
231 |= :  reduce assignment-operator -> &= 
231 # :  reduce assignment-operator -> &= 
231 epsilon :  reduce assignment-operator -> &= 
250 , :  reduce argument-expression-list -> argument-expression-list , assignment-expression 
250 ) :  reduce argument-expression-list -> argument-expression-list , assignment-expression 
233 # :  reduce assignment-expression -> unary-expression assignment-operator assignment-expression 
317 # :  reduce initializer -> { initializer-list , } 
236 = :  reduce unary-expression -> sizeof unary-expression 
236 identifier :  reduce unary-expression -> sizeof unary-expression 
236 ( :  reduce unary-expression -> sizeof unary-expression 
236 [ :  reduce unary-expression -> sizeof unary-expression 
236 * :  reduce unary-expression -> sizeof unary-expression 
236 /= :  reduce unary-expression -> sizeof unary-expression 
236 %= :  reduce unary-expression -> sizeof unary-expression 
236 string-literal :  reduce unary-expression -> sizeof unary-expression 
236 integer-constant :  reduce unary-expression -> sizeof unary-expression 
236 floating-constant :  reduce unary-expression -> sizeof unary-expression 
236 character-constant :  reduce unary-expression -> sizeof unary-expression 
236 ++ :  reduce unary-expression -> sizeof unary-expression 
236 . :  reduce unary-expression -> sizeof unary-expression 
236 -> :  reduce unary-expression -> sizeof unary-expression 
236 -- :  reduce unary-expression -> sizeof unary-expression 
236 sizeof :  reduce unary-expression -> sizeof unary-expression 
236 & :  reduce unary-expression -> sizeof unary-expression 
236 + :  reduce unary-expression -> sizeof unary-expression 
236 - :  reduce unary-expression -> sizeof unary-expression 
236 ~ :  reduce unary-expression -> sizeof unary-expression 
236 ! :  reduce unary-expression -> sizeof unary-expression 
236 / :  reduce unary-expression -> sizeof unary-expression 
236 % :  reduce unary-expression -> sizeof unary-expression 
236 << :  reduce unary-expression -> sizeof unary-expression 
236 >> :  reduce unary-expression -> sizeof unary-expression 
236 < :  reduce unary-expression -> sizeof unary-expression 
236 > :  reduce unary-expression -> sizeof unary-expression 
236 <= :  reduce unary-expression -> sizeof unary-expression 
236 >= :  reduce unary-expression -> sizeof unary-expression 
236 == :  reduce unary-expression -> sizeof unary-expression 
236 != :  reduce unary-expression -> sizeof unary-expression 
236 ^ :  reduce unary-expression -> sizeof unary-expression 
236 | :  reduce unary-expression -> sizeof unary-expression 
236 && :  reduce unary-expression -> sizeof unary-expression 
236 || :  reduce unary-expression -> sizeof unary-expression 
236 *= :  reduce unary-expression -> sizeof unary-expression 
236 ? :  reduce unary-expression -> sizeof unary-expression 
236 += :  reduce unary-expression -> sizeof unary-expression 
236 ^= :  reduce unary-expression -> sizeof unary-expression 
236 -= :  reduce unary-expression -> sizeof unary-expression 
236 <<= :  reduce unary-expression -> sizeof unary-expression 
236 >>= :  reduce unary-expression -> sizeof unary-expression 
236 &= :  reduce unary-expression -> sizeof unary-expression 
236 |= :  reduce unary-expression -> sizeof unary-expression 
236 # :  reduce unary-expression -> sizeof unary-expression 
236 epsilon :  reduce unary-expression -> sizeof unary-expression 
279 ( :  shift 254
279 ) :  reduce declarator -> direct-declarator 
279 [ :  shift 255
235 type-specifier :  goto 93
235 type-qualifier :  goto 94
235 void :  shift 95
235 char :  shift 96
235 short :  shift 97
235 int :  shift 98
235 long :  shift 99
235 float :  shift 100
235 double :  shift 101
235 signed :  shift 102
235 unsigned :  shift 103
235 struct-or-union-specifier :  goto 104
235 enum-specifier :  goto 105
235 const :  shift 106
235 restrict :  shift 107
235 volatile :  shift 108
235 struct-or-union :  goto 27
235 struct :  shift 28
235 union :  shift 29
235 identifier :  shift 55
235 specifier-qualifier-list :  goto 109
235 assignment-expression :  goto 110
235 enum :  shift 30
235 enumeration-constant :  goto 57
235 ( :  shift 58
235 constant :  goto 59
235 * :  shift 60
235 type-name :  goto 237
235 expression :  goto 112
235 primary-expression :  goto 61
235 string-literal :  shift 62
235 integer-constant :  shift 63
235 floating-constant :  shift 64
235 character-constant :  shift 65
235 postfix-expression :  goto 66
235 ++ :  shift 67
235 -- :  shift 68
235 function-call :  goto 69
235 array-access :  goto 70
235 unary-expression :  goto 71
235 unary-operator :  goto 72
235 cast-expression :  goto 73
235 sizeof :  shift 74
235 & :  shift 75
235 + :  shift 76
235 - :  shift 77
235 ~ :  shift 78
235 ! :  shift 79
235 multiplicative-expression :  goto 80
235 additive-expression :  goto 81
235 shift-expression :  goto 82
235 relational-expression :  goto 83
235 equality-expression :  goto 84
235 AND-expression :  goto 85
235 exclusive-OR-expression :  goto 86
235 inclusive-OR-expression :  goto 87
235 logical-AND-expression :  goto 88
235 logical-OR-expression :  goto 89
235 conditional-expression :  goto 90
277 ( :  shift 254
277 [ :  shift 255
277 # :  reduce declarator -> pointer direct-declarator 
294 declaration-specifiers :  goto 297
294 storage-class-specifier :  goto 293
294 type-specifier :  goto 294
294 type-qualifier :  goto 295
294 extern :  shift 10
294 static :  shift 11
294 register :  shift 12
294 void :  shift 13
294 char :  shift 14
294 short :  shift 15
294 int :  shift 16
294 long :  shift 17
294 float :  shift 18
294 double :  shift 19
294 signed :  shift 20
294 unsigned :  shift 21
294 struct-or-union-specifier :  goto 22
294 enum-specifier :  goto 23
294 const :  shift 24
294 restrict :  shift 25
294 volatile :  shift 26
294 struct-or-union :  goto 27
294 struct :  shift 28
294 union :  shift 29
294 enum :  shift 30
294 # :  reduce declaration-specifiers -> type-specifier 
429 compound-statement :  goto 328
429 ; :  shift 329
429 { :  shift 49
429 identifier :  shift 331
429 assignment-expression :  goto 332
429 enumeration-constant :  goto 57
429 ( :  shift 58
429 constant :  goto 59
429 * :  shift 60
429 statement :  goto 430
429 labeled-statement :  goto 334
429 expression-statement :  goto 335
429 selection-statement :  goto 336
429 iteration-statement :  goto 337
429 jump-statement :  goto 338
429 case :  shift 339
429 default :  shift 340
429 expression :  goto 343
429 if :  shift 344
429 switch :  shift 345
429 while :  shift 346
429 do :  shift 347
429 for :  shift 348
429 continue :  shift 349
429 break :  shift 350
429 goto :  shift 351
429 return :  shift 352
429 primary-expression :  goto 61
429 string-literal :  shift 62
429 integer-constant :  shift 63
429 floating-constant :  shift 64
429 character-constant :  shift 65
429 postfix-expression :  goto 66
429 ++ :  shift 67
429 -- :  shift 68
429 function-call :  goto 69
429 array-access :  goto 70
429 unary-expression :  goto 71
429 unary-operator :  goto 72
429 cast-expression :  goto 73
429 sizeof :  shift 74
429 & :  shift 75
429 + :  shift 76
429 - :  shift 77
429 ~ :  shift 78
429 ! :  shift 79
429 multiplicative-expression :  goto 80
429 additive-expression :  goto 81
429 shift-expression :  goto 82
429 relational-expression :  goto 83
429 equality-expression :  goto 84
429 AND-expression :  goto 85
429 exclusive-OR-expression :  goto 86
429 inclusive-OR-expression :  goto 87
429 logical-AND-expression :  goto 88
429 logical-OR-expression :  goto 89
429 conditional-expression :  goto 90
310 type-specifier :  goto 115
310 type-qualifier :  goto 116
310 void :  shift 95
310 char :  shift 96
310 short :  shift 97
310 int :  shift 98
310 long :  shift 99
310 float :  shift 100
310 double :  shift 101
310 signed :  shift 102
310 unsigned :  shift 103
310 struct-or-union-specifier :  goto 104
310 enum-specifier :  goto 105
310 const :  shift 106
310 restrict :  shift 107
310 volatile :  shift 108
310 struct-or-union :  goto 27
310 } :  shift 311
310 struct :  shift 28
310 union :  shift 29
310 struct-declaration :  goto 121
310 specifier-qualifier-list :  goto 119
310 enum :  shift 30
212 | :  shift 209
212 && :  reduce logical-AND-expression -> logical-AND-expression && inclusive-OR-expression 
212 # :  reduce logical-AND-expression -> logical-AND-expression && inclusive-OR-expression 
306 , :  reduce parameter-list -> parameter-list , parameter-declaration 
306 # :  reduce parameter-list -> parameter-list , parameter-declaration 
455 ; :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 extern :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 static :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 register :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 void :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 char :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 short :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 int :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 long :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 float :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 double :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 signed :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 unsigned :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 const :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 restrict :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 volatile :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 , :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 = :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 { :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 struct :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 union :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 identifier :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 enum :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 ( :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 [ :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 * :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 # :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
455 epsilon :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
1 translation-unit :  goto 2
1 external-declaration :  goto 3
1 function-definition :  goto 4
1 declaration :  goto 5
1 declaration-specifiers :  goto 6
1 storage-class-specifier :  goto 7
1 type-specifier :  goto 8
1 type-qualifier :  goto 9
1 extern :  shift 10
1 static :  shift 11
1 register :  shift 12
1 void :  shift 13
1 char :  shift 14
1 short :  shift 15
1 int :  shift 16
1 long :  shift 17
1 float :  shift 18
1 double :  shift 19
1 signed :  shift 20
1 unsigned :  shift 21
1 struct-or-union-specifier :  goto 22
1 enum-specifier :  goto 23
1 const :  shift 24
1 restrict :  shift 25
1 volatile :  shift 26
1 struct-or-union :  goto 27
1 struct :  shift 28
1 union :  shift 29
1 enum :  shift 30
3 ; :  reduce translation-unit -> external-declaration 
3 extern :  reduce translation-unit -> external-declaration 
3 static :  reduce translation-unit -> external-declaration 
3 register :  reduce translation-unit -> external-declaration 
3 void :  reduce translation-unit -> external-declaration 
3 char :  reduce translation-unit -> external-declaration 
3 short :  reduce translation-unit -> external-declaration 
3 int :  reduce translation-unit -> external-declaration 
3 long :  reduce translation-unit -> external-declaration 
3 float :  reduce translation-unit -> external-declaration 
3 double :  reduce translation-unit -> external-declaration 
3 signed :  reduce translation-unit -> external-declaration 
3 unsigned :  reduce translation-unit -> external-declaration 
3 const :  reduce translation-unit -> external-declaration 
3 restrict :  reduce translation-unit -> external-declaration 
3 volatile :  reduce translation-unit -> external-declaration 
3 , :  reduce translation-unit -> external-declaration 
3 = :  reduce translation-unit -> external-declaration 
3 { :  reduce translation-unit -> external-declaration 
3 struct :  reduce translation-unit -> external-declaration 
3 union :  reduce translation-unit -> external-declaration 
3 identifier :  reduce translation-unit -> external-declaration 
3 enum :  reduce translation-unit -> external-declaration 
3 ( :  reduce translation-unit -> external-declaration 
3 [ :  reduce translation-unit -> external-declaration 
3 * :  reduce translation-unit -> external-declaration 
3 # :  reduce translation-unit -> external-declaration 
3 epsilon :  reduce translation-unit -> external-declaration 
4 # :  reduce external-declaration -> function-definition 
9 declaration-specifiers :  goto 456
9 ; :  reduce declaration-specifiers -> type-qualifier 
9 storage-class-specifier :  goto 293
9 type-specifier :  goto 294
9 type-qualifier :  goto 295
9 extern :  shift 10
9 extern :  reduce declaration-specifiers -> type-qualifier 
9 static :  shift 11
9 static :  reduce declaration-specifiers -> type-qualifier 
9 register :  shift 12
9 register :  reduce declaration-specifiers -> type-qualifier 
9 void :  shift 13
9 void :  reduce declaration-specifiers -> type-qualifier 
9 char :  shift 14
9 char :  reduce declaration-specifiers -> type-qualifier 
9 short :  shift 15
9 short :  reduce declaration-specifiers -> type-qualifier 
9 int :  shift 16
9 int :  reduce declaration-specifiers -> type-qualifier 
9 long :  shift 17
9 long :  reduce declaration-specifiers -> type-qualifier 
9 float :  shift 18
9 float :  reduce declaration-specifiers -> type-qualifier 
9 double :  shift 19
9 double :  reduce declaration-specifiers -> type-qualifier 
9 signed :  shift 20
9 signed :  reduce declaration-specifiers -> type-qualifier 
9 unsigned :  shift 21
9 unsigned :  reduce declaration-specifiers -> type-qualifier 
9 struct-or-union-specifier :  goto 22
9 enum-specifier :  goto 23
9 const :  shift 24
9 const :  reduce declaration-specifiers -> type-qualifier 
9 restrict :  shift 25
9 restrict :  reduce declaration-specifiers -> type-qualifier 
9 volatile :  shift 26
9 volatile :  reduce declaration-specifiers -> type-qualifier 
9 , :  reduce declaration-specifiers -> type-qualifier 
9 = :  reduce declaration-specifiers -> type-qualifier 
9 struct-or-union :  goto 27
9 { :  reduce declaration-specifiers -> type-qualifier 
9 struct :  shift 28
9 struct :  reduce declaration-specifiers -> type-qualifier 
9 union :  shift 29
9 union :  reduce declaration-specifiers -> type-qualifier 
9 identifier :  reduce declaration-specifiers -> type-qualifier 
9 enum :  shift 30
9 enum :  reduce declaration-specifiers -> type-qualifier 
9 ( :  reduce declaration-specifiers -> type-qualifier 
9 [ :  reduce declaration-specifiers -> type-qualifier 
9 * :  reduce declaration-specifiers -> type-qualifier 
9 # :  reduce declaration-specifiers -> type-qualifier 
9 epsilon :  reduce declaration-specifiers -> type-qualifier 
5 # :  reduce external-declaration -> declaration 
2 external-declaration :  goto 31
2 function-definition :  goto 4
2 declaration :  goto 5
2 declaration-specifiers :  goto 6
2 storage-class-specifier :  goto 7
2 type-specifier :  goto 8
2 type-qualifier :  goto 9
2 extern :  shift 10
2 static :  shift 11
2 register :  shift 12
2 void :  shift 13
2 char :  shift 14
2 short :  shift 15
2 int :  shift 16
2 long :  shift 17
2 float :  shift 18
2 double :  shift 19
2 signed :  shift 20
2 unsigned :  shift 21
2 struct-or-union-specifier :  goto 22
2 enum-specifier :  goto 23
2 const :  shift 24
2 restrict :  shift 25
2 volatile :  shift 26
2 struct-or-union :  goto 27
2 struct :  shift 28
2 union :  shift 29
2 enum :  shift 30
2 # :  acc
6 declarator :  goto 32
6 ; :  shift 33
6 init-declarator-list :  goto 34
6 init-declarator :  goto 35
6 identifier :  shift 36
6 direct-declarator :  goto 37
6 pointer :  goto 38
6 ( :  shift 39
6 * :  shift 40
10 extern :  reduce storage-class-specifier -> extern 
10 static :  reduce storage-class-specifier -> extern 
10 register :  reduce storage-class-specifier -> extern 
10 void :  reduce storage-class-specifier -> extern 
10 char :  reduce storage-class-specifier -> extern 
10 short :  reduce storage-class-specifier -> extern 
10 int :  reduce storage-class-specifier -> extern 
10 long :  reduce storage-class-specifier -> extern 
10 float :  reduce storage-class-specifier -> extern 
10 double :  reduce storage-class-specifier -> extern 
10 signed :  reduce storage-class-specifier -> extern 
10 unsigned :  reduce storage-class-specifier -> extern 
10 const :  reduce storage-class-specifier -> extern 
10 restrict :  reduce storage-class-specifier -> extern 
10 volatile :  reduce storage-class-specifier -> extern 
10 { :  reduce storage-class-specifier -> extern 
10 struct :  reduce storage-class-specifier -> extern 
10 union :  reduce storage-class-specifier -> extern 
10 identifier :  reduce storage-class-specifier -> extern 
10 enum :  reduce storage-class-specifier -> extern 
10 # :  reduce storage-class-specifier -> extern 
10 epsilon :  reduce storage-class-specifier -> extern 
11 extern :  reduce storage-class-specifier -> static 
11 static :  reduce storage-class-specifier -> static 
11 register :  reduce storage-class-specifier -> static 
11 void :  reduce storage-class-specifier -> static 
11 char :  reduce storage-class-specifier -> static 
11 short :  reduce storage-class-specifier -> static 
11 int :  reduce storage-class-specifier -> static 
11 long :  reduce storage-class-specifier -> static 
11 float :  reduce storage-class-specifier -> static 
11 double :  reduce storage-class-specifier -> static 
11 signed :  reduce storage-class-specifier -> static 
11 unsigned :  reduce storage-class-specifier -> static 
11 const :  reduce storage-class-specifier -> static 
11 restrict :  reduce storage-class-specifier -> static 
11 volatile :  reduce storage-class-specifier -> static 
11 { :  reduce storage-class-specifier -> static 
11 struct :  reduce storage-class-specifier -> static 
11 union :  reduce storage-class-specifier -> static 
11 identifier :  reduce storage-class-specifier -> static 
11 enum :  reduce storage-class-specifier -> static 
11 # :  reduce storage-class-specifier -> static 
11 epsilon :  reduce storage-class-specifier -> static 
12 extern :  reduce storage-class-specifier -> register 
12 static :  reduce storage-class-specifier -> register 
12 register :  reduce storage-class-specifier -> register 
12 void :  reduce storage-class-specifier -> register 
12 char :  reduce storage-class-specifier -> register 
12 short :  reduce storage-class-specifier -> register 
12 int :  reduce storage-class-specifier -> register 
12 long :  reduce storage-class-specifier -> register 
12 float :  reduce storage-class-specifier -> register 
12 double :  reduce storage-class-specifier -> register 
12 signed :  reduce storage-class-specifier -> register 
12 unsigned :  reduce storage-class-specifier -> register 
12 const :  reduce storage-class-specifier -> register 
12 restrict :  reduce storage-class-specifier -> register 
12 volatile :  reduce storage-class-specifier -> register 
12 { :  reduce storage-class-specifier -> register 
12 struct :  reduce storage-class-specifier -> register 
12 union :  reduce storage-class-specifier -> register 
12 identifier :  reduce storage-class-specifier -> register 
12 enum :  reduce storage-class-specifier -> register 
12 # :  reduce storage-class-specifier -> register 
12 epsilon :  reduce storage-class-specifier -> register 
13 extern :  reduce type-specifier -> void 
13 static :  reduce type-specifier -> void 
13 register :  reduce type-specifier -> void 
13 void :  reduce type-specifier -> void 
13 char :  reduce type-specifier -> void 
13 short :  reduce type-specifier -> void 
13 int :  reduce type-specifier -> void 
13 long :  reduce type-specifier -> void 
13 float :  reduce type-specifier -> void 
13 double :  reduce type-specifier -> void 
13 signed :  reduce type-specifier -> void 
13 unsigned :  reduce type-specifier -> void 
13 const :  reduce type-specifier -> void 
13 restrict :  reduce type-specifier -> void 
13 volatile :  reduce type-specifier -> void 
13 { :  reduce type-specifier -> void 
13 struct :  reduce type-specifier -> void 
13 union :  reduce type-specifier -> void 
13 identifier :  reduce type-specifier -> void 
13 enum :  reduce type-specifier -> void 
13 # :  reduce type-specifier -> void 
13 epsilon :  reduce type-specifier -> void 
14 extern :  reduce type-specifier -> char 
14 static :  reduce type-specifier -> char 
14 register :  reduce type-specifier -> char 
14 void :  reduce type-specifier -> char 
14 char :  reduce type-specifier -> char 
14 short :  reduce type-specifier -> char 
14 int :  reduce type-specifier -> char 
14 long :  reduce type-specifier -> char 
14 float :  reduce type-specifier -> char 
14 double :  reduce type-specifier -> char 
14 signed :  reduce type-specifier -> char 
14 unsigned :  reduce type-specifier -> char 
14 const :  reduce type-specifier -> char 
14 restrict :  reduce type-specifier -> char 
14 volatile :  reduce type-specifier -> char 
14 { :  reduce type-specifier -> char 
14 struct :  reduce type-specifier -> char 
14 union :  reduce type-specifier -> char 
14 identifier :  reduce type-specifier -> char 
14 enum :  reduce type-specifier -> char 
14 # :  reduce type-specifier -> char 
14 epsilon :  reduce type-specifier -> char 
15 extern :  reduce type-specifier -> short 
15 static :  reduce type-specifier -> short 
15 register :  reduce type-specifier -> short 
15 void :  reduce type-specifier -> short 
15 char :  reduce type-specifier -> short 
15 short :  reduce type-specifier -> short 
15 int :  reduce type-specifier -> short 
15 long :  reduce type-specifier -> short 
15 float :  reduce type-specifier -> short 
15 double :  reduce type-specifier -> short 
15 signed :  reduce type-specifier -> short 
15 unsigned :  reduce type-specifier -> short 
15 const :  reduce type-specifier -> short 
15 restrict :  reduce type-specifier -> short 
15 volatile :  reduce type-specifier -> short 
15 { :  reduce type-specifier -> short 
15 struct :  reduce type-specifier -> short 
15 union :  reduce type-specifier -> short 
15 identifier :  reduce type-specifier -> short 
15 enum :  reduce type-specifier -> short 
15 # :  reduce type-specifier -> short 
15 epsilon :  reduce type-specifier -> short 
16 extern :  reduce type-specifier -> int 
16 static :  reduce type-specifier -> int 
16 register :  reduce type-specifier -> int 
16 void :  reduce type-specifier -> int 
16 char :  reduce type-specifier -> int 
16 short :  reduce type-specifier -> int 
16 int :  reduce type-specifier -> int 
16 long :  reduce type-specifier -> int 
16 float :  reduce type-specifier -> int 
16 double :  reduce type-specifier -> int 
16 signed :  reduce type-specifier -> int 
16 unsigned :  reduce type-specifier -> int 
16 const :  reduce type-specifier -> int 
16 restrict :  reduce type-specifier -> int 
16 volatile :  reduce type-specifier -> int 
16 { :  reduce type-specifier -> int 
16 struct :  reduce type-specifier -> int 
16 union :  reduce type-specifier -> int 
16 identifier :  reduce type-specifier -> int 
16 enum :  reduce type-specifier -> int 
16 # :  reduce type-specifier -> int 
16 epsilon :  reduce type-specifier -> int 
17 extern :  reduce type-specifier -> long 
17 static :  reduce type-specifier -> long 
17 register :  reduce type-specifier -> long 
17 void :  reduce type-specifier -> long 
17 char :  reduce type-specifier -> long 
17 short :  reduce type-specifier -> long 
17 int :  reduce type-specifier -> long 
17 long :  reduce type-specifier -> long 
17 float :  reduce type-specifier -> long 
17 double :  reduce type-specifier -> long 
17 signed :  reduce type-specifier -> long 
17 unsigned :  reduce type-specifier -> long 
17 const :  reduce type-specifier -> long 
17 restrict :  reduce type-specifier -> long 
17 volatile :  reduce type-specifier -> long 
17 { :  reduce type-specifier -> long 
17 struct :  reduce type-specifier -> long 
17 union :  reduce type-specifier -> long 
17 identifier :  reduce type-specifier -> long 
17 enum :  reduce type-specifier -> long 
17 # :  reduce type-specifier -> long 
17 epsilon :  reduce type-specifier -> long 
7 declaration-specifiers :  goto 454
7 ; :  reduce declaration-specifiers -> storage-class-specifier 
7 storage-class-specifier :  goto 293
7 type-specifier :  goto 294
7 type-qualifier :  goto 295
7 extern :  shift 10
7 extern :  reduce declaration-specifiers -> storage-class-specifier 
7 static :  shift 11
7 static :  reduce declaration-specifiers -> storage-class-specifier 
7 register :  shift 12
7 register :  reduce declaration-specifiers -> storage-class-specifier 
7 void :  shift 13
7 void :  reduce declaration-specifiers -> storage-class-specifier 
7 char :  shift 14
7 char :  reduce declaration-specifiers -> storage-class-specifier 
7 short :  shift 15
7 short :  reduce declaration-specifiers -> storage-class-specifier 
7 int :  shift 16
7 int :  reduce declaration-specifiers -> storage-class-specifier 
7 long :  shift 17
7 long :  reduce declaration-specifiers -> storage-class-specifier 
7 float :  shift 18
7 float :  reduce declaration-specifiers -> storage-class-specifier 
7 double :  shift 19
7 double :  reduce declaration-specifiers -> storage-class-specifier 
7 signed :  shift 20
7 signed :  reduce declaration-specifiers -> storage-class-specifier 
7 unsigned :  shift 21
7 unsigned :  reduce declaration-specifiers -> storage-class-specifier 
7 struct-or-union-specifier :  goto 22
7 enum-specifier :  goto 23
7 const :  shift 24
7 const :  reduce declaration-specifiers -> storage-class-specifier 
7 restrict :  shift 25
7 restrict :  reduce declaration-specifiers -> storage-class-specifier 
7 volatile :  shift 26
7 volatile :  reduce declaration-specifiers -> storage-class-specifier 
7 , :  reduce declaration-specifiers -> storage-class-specifier 
7 = :  reduce declaration-specifiers -> storage-class-specifier 
7 struct-or-union :  goto 27
7 { :  reduce declaration-specifiers -> storage-class-specifier 
7 struct :  shift 28
7 struct :  reduce declaration-specifiers -> storage-class-specifier 
7 union :  shift 29
7 union :  reduce declaration-specifiers -> storage-class-specifier 
7 identifier :  reduce declaration-specifiers -> storage-class-specifier 
7 enum :  shift 30
7 enum :  reduce declaration-specifiers -> storage-class-specifier 
7 ( :  reduce declaration-specifiers -> storage-class-specifier 
7 [ :  reduce declaration-specifiers -> storage-class-specifier 
7 * :  reduce declaration-specifiers -> storage-class-specifier 
7 # :  reduce declaration-specifiers -> storage-class-specifier 
7 epsilon :  reduce declaration-specifiers -> storage-class-specifier 
18 extern :  reduce type-specifier -> float 
18 static :  reduce type-specifier -> float 
18 register :  reduce type-specifier -> float 
18 void :  reduce type-specifier -> float 
18 char :  reduce type-specifier -> float 
18 short :  reduce type-specifier -> float 
18 int :  reduce type-specifier -> float 
18 long :  reduce type-specifier -> float 
18 float :  reduce type-specifier -> float 
18 double :  reduce type-specifier -> float 
18 signed :  reduce type-specifier -> float 
18 unsigned :  reduce type-specifier -> float 
18 const :  reduce type-specifier -> float 
18 restrict :  reduce type-specifier -> float 
18 volatile :  reduce type-specifier -> float 
18 { :  reduce type-specifier -> float 
18 struct :  reduce type-specifier -> float 
18 union :  reduce type-specifier -> float 
18 identifier :  reduce type-specifier -> float 
18 enum :  reduce type-specifier -> float 
18 # :  reduce type-specifier -> float 
18 epsilon :  reduce type-specifier -> float 
19 extern :  reduce type-specifier -> double 
19 static :  reduce type-specifier -> double 
19 register :  reduce type-specifier -> double 
19 void :  reduce type-specifier -> double 
19 char :  reduce type-specifier -> double 
19 short :  reduce type-specifier -> double 
19 int :  reduce type-specifier -> double 
19 long :  reduce type-specifier -> double 
19 float :  reduce type-specifier -> double 
19 double :  reduce type-specifier -> double 
19 signed :  reduce type-specifier -> double 
19 unsigned :  reduce type-specifier -> double 
19 const :  reduce type-specifier -> double 
19 restrict :  reduce type-specifier -> double 
19 volatile :  reduce type-specifier -> double 
19 { :  reduce type-specifier -> double 
19 struct :  reduce type-specifier -> double 
19 union :  reduce type-specifier -> double 
19 identifier :  reduce type-specifier -> double 
19 enum :  reduce type-specifier -> double 
19 # :  reduce type-specifier -> double 
19 epsilon :  reduce type-specifier -> double 
20 extern :  reduce type-specifier -> signed 
20 static :  reduce type-specifier -> signed 
20 register :  reduce type-specifier -> signed 
20 void :  reduce type-specifier -> signed 
20 char :  reduce type-specifier -> signed 
20 short :  reduce type-specifier -> signed 
20 int :  reduce type-specifier -> signed 
20 long :  reduce type-specifier -> signed 
20 float :  reduce type-specifier -> signed 
20 double :  reduce type-specifier -> signed 
20 signed :  reduce type-specifier -> signed 
20 unsigned :  reduce type-specifier -> signed 
20 const :  reduce type-specifier -> signed 
20 restrict :  reduce type-specifier -> signed 
20 volatile :  reduce type-specifier -> signed 
20 { :  reduce type-specifier -> signed 
20 struct :  reduce type-specifier -> signed 
20 union :  reduce type-specifier -> signed 
20 identifier :  reduce type-specifier -> signed 
20 enum :  reduce type-specifier -> signed 
20 # :  reduce type-specifier -> signed 
20 epsilon :  reduce type-specifier -> signed 
21 extern :  reduce type-specifier -> unsigned 
21 static :  reduce type-specifier -> unsigned 
21 register :  reduce type-specifier -> unsigned 
21 void :  reduce type-specifier -> unsigned 
21 char :  reduce type-specifier -> unsigned 
21 short :  reduce type-specifier -> unsigned 
21 int :  reduce type-specifier -> unsigned 
21 long :  reduce type-specifier -> unsigned 
21 float :  reduce type-specifier -> unsigned 
21 double :  reduce type-specifier -> unsigned 
21 signed :  reduce type-specifier -> unsigned 
21 unsigned :  reduce type-specifier -> unsigned 
21 const :  reduce type-specifier -> unsigned 
21 restrict :  reduce type-specifier -> unsigned 
21 volatile :  reduce type-specifier -> unsigned 
21 { :  reduce type-specifier -> unsigned 
21 struct :  reduce type-specifier -> unsigned 
21 union :  reduce type-specifier -> unsigned 
21 identifier :  reduce type-specifier -> unsigned 
21 enum :  reduce type-specifier -> unsigned 
21 # :  reduce type-specifier -> unsigned 
21 epsilon :  reduce type-specifier -> unsigned 
22 extern :  reduce type-specifier -> struct-or-union-specifier 
22 static :  reduce type-specifier -> struct-or-union-specifier 
22 register :  reduce type-specifier -> struct-or-union-specifier 
22 void :  reduce type-specifier -> struct-or-union-specifier 
22 char :  reduce type-specifier -> struct-or-union-specifier 
22 short :  reduce type-specifier -> struct-or-union-specifier 
22 int :  reduce type-specifier -> struct-or-union-specifier 
22 long :  reduce type-specifier -> struct-or-union-specifier 
22 float :  reduce type-specifier -> struct-or-union-specifier 
22 double :  reduce type-specifier -> struct-or-union-specifier 
22 signed :  reduce type-specifier -> struct-or-union-specifier 
22 unsigned :  reduce type-specifier -> struct-or-union-specifier 
22 const :  reduce type-specifier -> struct-or-union-specifier 
22 restrict :  reduce type-specifier -> struct-or-union-specifier 
22 volatile :  reduce type-specifier -> struct-or-union-specifier 
22 { :  reduce type-specifier -> struct-or-union-specifier 
22 struct :  reduce type-specifier -> struct-or-union-specifier 
22 union :  reduce type-specifier -> struct-or-union-specifier 
22 identifier :  reduce type-specifier -> struct-or-union-specifier 
22 enum :  reduce type-specifier -> struct-or-union-specifier 
22 # :  reduce type-specifier -> struct-or-union-specifier 
22 epsilon :  reduce type-specifier -> struct-or-union-specifier 
23 extern :  reduce type-specifier -> enum-specifier 
23 static :  reduce type-specifier -> enum-specifier 
23 register :  reduce type-specifier -> enum-specifier 
23 void :  reduce type-specifier -> enum-specifier 
23 char :  reduce type-specifier -> enum-specifier 
23 short :  reduce type-specifier -> enum-specifier 
23 int :  reduce type-specifier -> enum-specifier 
23 long :  reduce type-specifier -> enum-specifier 
23 float :  reduce type-specifier -> enum-specifier 
23 double :  reduce type-specifier -> enum-specifier 
23 signed :  reduce type-specifier -> enum-specifier 
23 unsigned :  reduce type-specifier -> enum-specifier 
23 const :  reduce type-specifier -> enum-specifier 
23 restrict :  reduce type-specifier -> enum-specifier 
23 volatile :  reduce type-specifier -> enum-specifier 
23 { :  reduce type-specifier -> enum-specifier 
23 struct :  reduce type-specifier -> enum-specifier 
23 union :  reduce type-specifier -> enum-specifier 
23 identifier :  reduce type-specifier -> enum-specifier 
23 enum :  reduce type-specifier -> enum-specifier 
23 # :  reduce type-specifier -> enum-specifier 
23 epsilon :  reduce type-specifier -> enum-specifier 
24 extern :  reduce type-qualifier -> const 
24 static :  reduce type-qualifier -> const 
24 register :  reduce type-qualifier -> const 
24 void :  reduce type-qualifier -> const 
24 char :  reduce type-qualifier -> const 
24 short :  reduce type-qualifier -> const 
24 int :  reduce type-qualifier -> const 
24 long :  reduce type-qualifier -> const 
24 float :  reduce type-qualifier -> const 
24 double :  reduce type-qualifier -> const 
24 signed :  reduce type-qualifier -> const 
24 unsigned :  reduce type-qualifier -> const 
24 const :  reduce type-qualifier -> const 
24 restrict :  reduce type-qualifier -> const 
24 volatile :  reduce type-qualifier -> const 
24 { :  reduce type-qualifier -> const 
24 struct :  reduce type-qualifier -> const 
24 union :  reduce type-qualifier -> const 
24 identifier :  reduce type-qualifier -> const 
24 enum :  reduce type-qualifier -> const 
24 # :  reduce type-qualifier -> const 
24 epsilon :  reduce type-qualifier -> const 
25 extern :  reduce type-qualifier -> restrict 
25 static :  reduce type-qualifier -> restrict 
25 register :  reduce type-qualifier -> restrict 
25 void :  reduce type-qualifier -> restrict 
25 char :  reduce type-qualifier -> restrict 
25 short :  reduce type-qualifier -> restrict 
25 int :  reduce type-qualifier -> restrict 
25 long :  reduce type-qualifier -> restrict 
25 float :  reduce type-qualifier -> restrict 
25 double :  reduce type-qualifier -> restrict 
25 signed :  reduce type-qualifier -> restrict 
25 unsigned :  reduce type-qualifier -> restrict 
25 const :  reduce type-qualifier -> restrict 
25 restrict :  reduce type-qualifier -> restrict 
25 volatile :  reduce type-qualifier -> restrict 
25 { :  reduce type-qualifier -> restrict 
25 struct :  reduce type-qualifier -> restrict 
25 union :  reduce type-qualifier -> restrict 
25 identifier :  reduce type-qualifier -> restrict 
25 enum :  reduce type-qualifier -> restrict 
25 # :  reduce type-qualifier -> restrict 
25 epsilon :  reduce type-qualifier -> restrict 
26 extern :  reduce type-qualifier -> volatile 
26 static :  reduce type-qualifier -> volatile 
26 register :  reduce type-qualifier -> volatile 
26 void :  reduce type-qualifier -> volatile 
26 char :  reduce type-qualifier -> volatile 
26 short :  reduce type-qualifier -> volatile 
26 int :  reduce type-qualifier -> volatile 
26 long :  reduce type-qualifier -> volatile 
26 float :  reduce type-qualifier -> volatile 
26 double :  reduce type-qualifier -> volatile 
26 signed :  reduce type-qualifier -> volatile 
26 unsigned :  reduce type-qualifier -> volatile 
26 const :  reduce type-qualifier -> volatile 
26 restrict :  reduce type-qualifier -> volatile 
26 volatile :  reduce type-qualifier -> volatile 
26 { :  reduce type-qualifier -> volatile 
26 struct :  reduce type-qualifier -> volatile 
26 union :  reduce type-qualifier -> volatile 
26 identifier :  reduce type-qualifier -> volatile 
26 enum :  reduce type-qualifier -> volatile 
26 # :  reduce type-qualifier -> volatile 
26 epsilon :  reduce type-qualifier -> volatile 
27 { :  shift 113
27 identifier :  shift 114
28 { :  reduce struct-or-union -> struct 
28 identifier :  reduce struct-or-union -> struct 
29 { :  reduce struct-or-union -> union 
29 identifier :  reduce struct-or-union -> union 
30 { :  shift 167
30 identifier :  shift 168
323 # :  reduce function-definition -> declaration-specifiers declarator declaration-list compound-statement 
31 ; :  reduce translation-unit -> translation-unit external-declaration 
31 extern :  reduce translation-unit -> translation-unit external-declaration 
31 static :  reduce translation-unit -> translation-unit external-declaration 
31 register :  reduce translation-unit -> translation-unit external-declaration 
31 void :  reduce translation-unit -> translation-unit external-declaration 
31 char :  reduce translation-unit -> translation-unit external-declaration 
31 short :  reduce translation-unit -> translation-unit external-declaration 
31 int :  reduce translation-unit -> translation-unit external-declaration 
31 long :  reduce translation-unit -> translation-unit external-declaration 
31 float :  reduce translation-unit -> translation-unit external-declaration 
31 double :  reduce translation-unit -> translation-unit external-declaration 
31 signed :  reduce translation-unit -> translation-unit external-declaration 
31 unsigned :  reduce translation-unit -> translation-unit external-declaration 
31 const :  reduce translation-unit -> translation-unit external-declaration 
31 restrict :  reduce translation-unit -> translation-unit external-declaration 
31 volatile :  reduce translation-unit -> translation-unit external-declaration 
31 , :  reduce translation-unit -> translation-unit external-declaration 
31 = :  reduce translation-unit -> translation-unit external-declaration 
31 { :  reduce translation-unit -> translation-unit external-declaration 
31 struct :  reduce translation-unit -> translation-unit external-declaration 
31 union :  reduce translation-unit -> translation-unit external-declaration 
31 identifier :  reduce translation-unit -> translation-unit external-declaration 
31 enum :  reduce translation-unit -> translation-unit external-declaration 
31 ( :  reduce translation-unit -> translation-unit external-declaration 
31 [ :  reduce translation-unit -> translation-unit external-declaration 
31 * :  reduce translation-unit -> translation-unit external-declaration 
31 # :  reduce translation-unit -> translation-unit external-declaration 
31 epsilon :  reduce translation-unit -> translation-unit external-declaration 
50 = :  shift 48
50 # :  reduce init-declarator -> declarator 
51 = :  reduce declarator -> direct-declarator 
51 ( :  shift 254
51 [ :  shift 255
51 # :  reduce declarator -> direct-declarator 
324 ; :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
324 , :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
324 = :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
324 identifier :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
324 ( :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
324 [ :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
324 * :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
324 epsilon :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
53 # :  reduce init-declarator -> declarator = initializer 
54 initializer :  goto 91
54 { :  shift 54
54 identifier :  shift 55
54 assignment-expression :  goto 56
54 enumeration-constant :  goto 57
54 ( :  shift 58
54 constant :  goto 59
54 * :  shift 60
54 initializer-list :  goto 92
54 primary-expression :  goto 61
54 string-literal :  shift 62
54 integer-constant :  shift 63
54 floating-constant :  shift 64
54 character-constant :  shift 65
54 postfix-expression :  goto 66
54 ++ :  shift 67
54 -- :  shift 68
54 function-call :  goto 69
54 array-access :  goto 70
54 unary-expression :  goto 71
54 unary-operator :  goto 72
54 cast-expression :  goto 73
54 sizeof :  shift 74
54 & :  shift 75
54 + :  shift 76
54 - :  shift 77
54 ~ :  shift 78
54 ! :  shift 79
54 multiplicative-expression :  goto 80
54 additive-expression :  goto 81
54 shift-expression :  goto 82
54 relational-expression :  goto 83
54 equality-expression :  goto 84
54 AND-expression :  goto 85
54 exclusive-OR-expression :  goto 86
54 inclusive-OR-expression :  goto 87
54 logical-AND-expression :  goto 88
54 logical-OR-expression :  goto 89
54 conditional-expression :  goto 90
55 # :  reduce primary-expression -> identifier 
55 # :  reduce enumeration-constant -> identifier 
56 # :  reduce initializer -> assignment-expression 
57 # :  reduce constant -> enumeration-constant 
71 = :  shift 221
71 /= :  shift 222
71 %= :  shift 223
71 *= :  shift 224
71 assignment-operator :  goto 225
71 += :  shift 226
71 ^= :  shift 227
71 -= :  shift 228
71 <<= :  shift 229
71 >>= :  shift 230
71 &= :  shift 231
71 |= :  shift 232
71 # :  reduce cast-expression -> unary-expression 
59 # :  reduce primary-expression -> constant 
158 = :  reduce unary-expression -> -- unary-expression 
158 identifier :  reduce unary-expression -> -- unary-expression 
158 ( :  reduce unary-expression -> -- unary-expression 
158 [ :  reduce unary-expression -> -- unary-expression 
158 * :  reduce unary-expression -> -- unary-expression 
158 /= :  reduce unary-expression -> -- unary-expression 
158 %= :  reduce unary-expression -> -- unary-expression 
158 string-literal :  reduce unary-expression -> -- unary-expression 
158 integer-constant :  reduce unary-expression -> -- unary-expression 
158 floating-constant :  reduce unary-expression -> -- unary-expression 
158 character-constant :  reduce unary-expression -> -- unary-expression 
158 ++ :  reduce unary-expression -> -- unary-expression 
158 . :  reduce unary-expression -> -- unary-expression 
158 -> :  reduce unary-expression -> -- unary-expression 
158 -- :  reduce unary-expression -> -- unary-expression 
158 sizeof :  reduce unary-expression -> -- unary-expression 
158 & :  reduce unary-expression -> -- unary-expression 
158 + :  reduce unary-expression -> -- unary-expression 
158 - :  reduce unary-expression -> -- unary-expression 
158 ~ :  reduce unary-expression -> -- unary-expression 
158 ! :  reduce unary-expression -> -- unary-expression 
158 / :  reduce unary-expression -> -- unary-expression 
158 % :  reduce unary-expression -> -- unary-expression 
158 << :  reduce unary-expression -> -- unary-expression 
158 >> :  reduce unary-expression -> -- unary-expression 
158 < :  reduce unary-expression -> -- unary-expression 
158 > :  reduce unary-expression -> -- unary-expression 
158 <= :  reduce unary-expression -> -- unary-expression 
158 >= :  reduce unary-expression -> -- unary-expression 
158 == :  reduce unary-expression -> -- unary-expression 
158 != :  reduce unary-expression -> -- unary-expression 
158 ^ :  reduce unary-expression -> -- unary-expression 
158 | :  reduce unary-expression -> -- unary-expression 
158 && :  reduce unary-expression -> -- unary-expression 
158 || :  reduce unary-expression -> -- unary-expression 
158 *= :  reduce unary-expression -> -- unary-expression 
158 ? :  reduce unary-expression -> -- unary-expression 
158 += :  reduce unary-expression -> -- unary-expression 
158 ^= :  reduce unary-expression -> -- unary-expression 
158 -= :  reduce unary-expression -> -- unary-expression 
158 <<= :  reduce unary-expression -> -- unary-expression 
158 >>= :  reduce unary-expression -> -- unary-expression 
158 &= :  reduce unary-expression -> -- unary-expression 
158 |= :  reduce unary-expression -> -- unary-expression 
158 # :  reduce unary-expression -> -- unary-expression 
158 epsilon :  reduce unary-expression -> -- unary-expression 
145 , :  reduce argument-expression-list -> assignment-expression 
145 ) :  reduce argument-expression-list -> assignment-expression 
160 # :  reduce unary-expression -> -- unary-expression 
318 # :  reduce declaration -> declaration-specifiers init-declarator-list ; 
312 identifier :  shift 55
312 enumeration-constant :  goto 57
312 ( :  shift 58
312 constant :  goto 59
312 * :  shift 60
312 primary-expression :  goto 61
312 string-literal :  shift 62
312 integer-constant :  shift 63
312 floating-constant :  shift 64
312 character-constant :  shift 65
312 postfix-expression :  goto 132
312 ++ :  shift 133
312 -- :  shift 134
312 function-call :  goto 69
312 array-access :  goto 70
312 unary-expression :  goto 135
312 unary-operator :  goto 136
312 cast-expression :  goto 313
312 sizeof :  shift 137
312 & :  shift 75
312 + :  shift 76
312 - :  shift 77
312 ~ :  shift 78
312 ! :  shift 79
182 * :  reduce multiplicative-expression -> multiplicative-expression * cast-expression 
182 / :  reduce multiplicative-expression -> multiplicative-expression * cast-expression 
182 % :  reduce multiplicative-expression -> multiplicative-expression * cast-expression 
182 # :  reduce multiplicative-expression -> multiplicative-expression * cast-expression 
416 compound-statement :  goto 328
416 ; :  shift 329
416 { :  shift 49
416 identifier :  shift 331
416 assignment-expression :  goto 332
416 enumeration-constant :  goto 57
416 ( :  shift 58
416 constant :  goto 59
416 * :  shift 60
416 statement :  goto 418
416 labeled-statement :  goto 334
416 expression-statement :  goto 335
416 selection-statement :  goto 336
416 iteration-statement :  goto 337
416 jump-statement :  goto 338
416 case :  shift 339
416 default :  shift 340
416 expression :  goto 343
416 if :  shift 344
416 switch :  shift 345
416 while :  shift 346
416 do :  shift 347
416 for :  shift 348
416 continue :  shift 349
416 break :  shift 350
416 goto :  shift 351
416 return :  shift 352
416 primary-expression :  goto 61
416 string-literal :  shift 62
416 integer-constant :  shift 63
416 floating-constant :  shift 64
416 character-constant :  shift 65
416 postfix-expression :  goto 66
416 ++ :  shift 67
416 -- :  shift 68
416 function-call :  goto 69
416 array-access :  goto 70
416 unary-expression :  goto 71
416 unary-operator :  goto 72
416 cast-expression :  goto 73
416 sizeof :  shift 74
416 & :  shift 75
416 + :  shift 76
416 - :  shift 77
416 ~ :  shift 78
416 ! :  shift 79
416 multiplicative-expression :  goto 80
416 additive-expression :  goto 81
416 shift-expression :  goto 82
416 relational-expression :  goto 83
416 equality-expression :  goto 84
416 AND-expression :  goto 85
416 exclusive-OR-expression :  goto 86
416 inclusive-OR-expression :  goto 87
416 logical-AND-expression :  goto 88
416 logical-OR-expression :  goto 89
416 conditional-expression :  goto 90
358 # :  reduce labeled-statement -> case constant-expression : statement 
295 declaration-specifiers :  goto 298
295 storage-class-specifier :  goto 293
295 type-specifier :  goto 294
295 type-qualifier :  goto 295
295 extern :  shift 10
295 static :  shift 11
295 register :  shift 12
295 void :  shift 13
295 char :  shift 14
295 short :  shift 15
295 int :  shift 16
295 long :  shift 17
295 float :  shift 18
295 double :  shift 19
295 signed :  shift 20
295 unsigned :  shift 21
295 struct-or-union-specifier :  goto 22
295 enum-specifier :  goto 23
295 const :  shift 24
295 restrict :  shift 25
295 volatile :  shift 26
295 struct-or-union :  goto 27
295 struct :  shift 28
295 union :  shift 29
295 enum :  shift 30
295 # :  reduce declaration-specifiers -> type-qualifier 
43 # :  reduce function-definition -> declaration-specifiers declarator compound-statement 
42 declarator :  goto 50
42 ; :  shift 33
42 init-declarator-list :  goto 34
42 init-declarator :  goto 35
42 identifier :  shift 36
42 direct-declarator :  goto 51
42 pointer :  goto 52
42 ( :  shift 39
42 * :  shift 40
313 # :  reduce cast-expression -> ( type-name ) cast-expression 
359 compound-statement :  goto 328
359 ; :  shift 329
359 { :  shift 49
359 identifier :  shift 331
359 assignment-expression :  goto 332
359 enumeration-constant :  goto 57
359 ( :  shift 58
359 constant :  goto 59
359 * :  shift 60
359 statement :  goto 360
359 labeled-statement :  goto 334
359 expression-statement :  goto 335
359 selection-statement :  goto 336
359 iteration-statement :  goto 337
359 jump-statement :  goto 338
359 case :  shift 339
359 default :  shift 340
359 expression :  goto 343
359 if :  shift 344
359 switch :  shift 345
359 while :  shift 346
359 do :  shift 347
359 for :  shift 348
359 continue :  shift 349
359 break :  shift 350
359 goto :  shift 351
359 return :  shift 352
359 primary-expression :  goto 61
359 string-literal :  shift 62
359 integer-constant :  shift 63
359 floating-constant :  shift 64
359 character-constant :  shift 65
359 postfix-expression :  goto 66
359 ++ :  shift 67
359 -- :  shift 68
359 function-call :  goto 69
359 array-access :  goto 70
359 unary-expression :  goto 71
359 unary-operator :  goto 72
359 cast-expression :  goto 73
359 sizeof :  shift 74
359 & :  shift 75
359 + :  shift 76
359 - :  shift 77
359 ~ :  shift 78
359 ! :  shift 79
359 multiplicative-expression :  goto 80
359 additive-expression :  goto 81
359 shift-expression :  goto 82
359 relational-expression :  goto 83
359 equality-expression :  goto 84
359 AND-expression :  goto 85
359 exclusive-OR-expression :  goto 86
359 inclusive-OR-expression :  goto 87
359 logical-AND-expression :  goto 88
359 logical-OR-expression :  goto 89
359 conditional-expression :  goto 90
311 # :  reduce struct-or-union-specifier -> struct-or-union identifier { struct-declaration-list } 
123 # :  reduce struct-declaration -> specifier-qualifier-list ; 
122 : :  shift 130
122 # :  reduce struct-declarator -> declarator 
126 ; :  shift 251
126 , :  shift 252
127 ; :  reduce struct-declarator-list -> struct-declarator 
127 , :  reduce struct-declarator-list -> struct-declarator 
124 ; :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 void :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 char :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 short :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 int :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 long :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 float :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 double :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 signed :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 unsigned :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 const :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 restrict :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 volatile :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 , :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 { :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 struct :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 union :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 identifier :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 : :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 enum :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 ( :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 [ :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 * :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 # :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
124 epsilon :  reduce specifier-qualifier-list -> specifier-qualifier-list type-specifier 
125 ; :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 void :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 char :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 short :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 int :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 long :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 float :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 double :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 signed :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 unsigned :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 const :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 restrict :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 volatile :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 , :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 { :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 struct :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 union :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 identifier :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 : :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 enum :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 ( :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 [ :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 * :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 # :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
125 epsilon :  reduce specifier-qualifier-list -> specifier-qualifier-list type-qualifier 
128 : :  reduce declarator -> direct-declarator 
128 ( :  shift 254
128 [ :  shift 255
128 # :  reduce declarator -> direct-declarator 
417 , :  shift 155
417 ) :  shift 419
438 identifier :  shift 55
438 assignment-expression :  goto 110
438 enumeration-constant :  goto 57
438 ( :  shift 58
438 ) :  shift 440
438 constant :  goto 59
438 * :  shift 60
438 expression :  goto 441
438 primary-expression :  goto 61
438 string-literal :  shift 62
438 integer-constant :  shift 63
438 floating-constant :  shift 64
438 character-constant :  shift 65
438 postfix-expression :  goto 66
438 ++ :  shift 67
438 -- :  shift 68
438 function-call :  goto 69
438 array-access :  goto 70
438 unary-expression :  goto 71
438 unary-operator :  goto 72
438 cast-expression :  goto 73
438 sizeof :  shift 74
438 & :  shift 75
438 + :  shift 76
438 - :  shift 77
438 ~ :  shift 78
438 ! :  shift 79
438 multiplicative-expression :  goto 80
438 additive-expression :  goto 81
438 shift-expression :  goto 82
438 relational-expression :  goto 83
438 equality-expression :  goto 84
438 AND-expression :  goto 85
438 exclusive-OR-expression :  goto 86
438 inclusive-OR-expression :  goto 87
438 logical-AND-expression :  goto 88
438 logical-OR-expression :  goto 89
438 conditional-expression :  goto 90
441 , :  shift 155
441 ) :  shift 443
159 # :  reduce unary-expression -> ++ unary-expression 
365 , :  shift 155
365 ) :  shift 366
453 ; :  reduce declarator -> pointer direct-declarator 
453 extern :  reduce declarator -> pointer direct-declarator 
453 static :  reduce declarator -> pointer direct-declarator 
453 register :  reduce declarator -> pointer direct-declarator 
453 void :  reduce declarator -> pointer direct-declarator 
453 char :  reduce declarator -> pointer direct-declarator 
453 short :  reduce declarator -> pointer direct-declarator 
453 int :  reduce declarator -> pointer direct-declarator 
453 long :  reduce declarator -> pointer direct-declarator 
453 float :  reduce declarator -> pointer direct-declarator 
453 double :  reduce declarator -> pointer direct-declarator 
453 signed :  reduce declarator -> pointer direct-declarator 
453 unsigned :  reduce declarator -> pointer direct-declarator 
453 const :  reduce declarator -> pointer direct-declarator 
453 restrict :  reduce declarator -> pointer direct-declarator 
453 volatile :  reduce declarator -> pointer direct-declarator 
453 , :  reduce declarator -> pointer direct-declarator 
453 = :  reduce declarator -> pointer direct-declarator 
453 { :  reduce declarator -> pointer direct-declarator 
453 struct :  reduce declarator -> pointer direct-declarator 
453 union :  reduce declarator -> pointer direct-declarator 
453 identifier :  reduce declarator -> pointer direct-declarator 
453 enum :  reduce declarator -> pointer direct-declarator 
453 ( :  shift 254
453 ( :  reduce declarator -> pointer direct-declarator 
453 [ :  shift 255
453 [ :  reduce declarator -> pointer direct-declarator 
453 * :  reduce declarator -> pointer direct-declarator 
453 # :  reduce declarator -> pointer direct-declarator 
453 epsilon :  reduce declarator -> pointer direct-declarator 
456 ; :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 extern :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 static :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 register :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 void :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 char :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 short :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 int :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 long :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 float :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 double :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 signed :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 unsigned :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 const :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 restrict :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 volatile :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 , :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 = :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 { :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 struct :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 union :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 identifier :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 enum :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 ( :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 [ :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 * :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 # :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
456 epsilon :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
192 + :  shift 185
192 - :  shift 186
192 << :  reduce shift-expression -> shift-expression >> additive-expression 
192 >> :  reduce shift-expression -> shift-expression >> additive-expression 
192 # :  reduce shift-expression -> shift-expression >> additive-expression 
387 while :  reduce statement -> expression-statement 
388 while :  reduce statement -> selection-statement 
389 while :  reduce statement -> iteration-statement 
390 while :  reduce statement -> jump-statement 
386 while :  reduce statement -> labeled-statement 
362 identifier :  shift 55
362 assignment-expression :  goto 363
362 enumeration-constant :  goto 57
362 ( :  shift 58
362 constant :  goto 59
362 * :  shift 60
362 primary-expression :  goto 61
362 string-literal :  shift 62
362 integer-constant :  shift 63
362 floating-constant :  shift 64
362 character-constant :  shift 65
362 postfix-expression :  goto 66
362 ++ :  shift 67
362 -- :  shift 68
362 function-call :  goto 69
362 array-access :  goto 70
362 unary-expression :  goto 71
362 unary-operator :  goto 72
362 cast-expression :  goto 73
362 sizeof :  shift 74
362 & :  shift 75
362 + :  shift 76
362 - :  shift 77
362 ~ :  shift 78
362 ! :  shift 79
362 multiplicative-expression :  goto 80
362 additive-expression :  goto 81
362 shift-expression :  goto 82
362 relational-expression :  goto 83
362 equality-expression :  goto 84
362 AND-expression :  goto 85
362 exclusive-OR-expression :  goto 86
362 inclusive-OR-expression :  goto 87
362 logical-AND-expression :  goto 88
362 logical-OR-expression :  goto 89
362 conditional-expression :  goto 90
440 compound-statement :  goto 328
440 ; :  shift 329
440 { :  shift 49
440 identifier :  shift 331
440 assignment-expression :  goto 332
440 enumeration-constant :  goto 57
440 ( :  shift 58
440 constant :  goto 59
440 * :  shift 60
440 statement :  goto 442
440 labeled-statement :  goto 334
440 expression-statement :  goto 335
440 selection-statement :  goto 336
440 iteration-statement :  goto 337
440 jump-statement :  goto 338
440 case :  shift 339
440 default :  shift 340
440 expression :  goto 343
440 if :  shift 344
440 switch :  shift 345
440 while :  shift 346
440 do :  shift 347
440 for :  shift 348
440 continue :  shift 349
440 break :  shift 350
440 goto :  shift 351
440 return :  shift 352
440 primary-expression :  goto 61
440 string-literal :  shift 62
440 integer-constant :  shift 63
440 floating-constant :  shift 64
440 character-constant :  shift 65
440 postfix-expression :  goto 66
440 ++ :  shift 67
440 -- :  shift 68
440 function-call :  goto 69
440 array-access :  goto 70
440 unary-expression :  goto 71
440 unary-operator :  goto 72
440 cast-expression :  goto 73
440 sizeof :  shift 74
440 & :  shift 75
440 + :  shift 76
440 - :  shift 77
440 ~ :  shift 78
440 ! :  shift 79
440 multiplicative-expression :  goto 80
440 additive-expression :  goto 81
440 shift-expression :  goto 82
440 relational-expression :  goto 83
440 equality-expression :  goto 84
440 AND-expression :  goto 85
440 exclusive-OR-expression :  goto 86
440 inclusive-OR-expression :  goto 87
440 logical-AND-expression :  goto 88
440 logical-OR-expression :  goto 89
440 conditional-expression :  goto 90
179 identifier :  shift 55
179 enumeration-constant :  goto 57
179 ( :  shift 58
179 constant :  goto 59
179 * :  shift 60
179 primary-expression :  goto 61
179 string-literal :  shift 62
179 integer-constant :  shift 63
179 floating-constant :  shift 64
179 character-constant :  shift 65
179 postfix-expression :  goto 132
179 ++ :  shift 133
179 -- :  shift 134
179 function-call :  goto 69
179 array-access :  goto 70
179 unary-expression :  goto 135
179 unary-operator :  goto 136
179 cast-expression :  goto 182
179 sizeof :  shift 137
179 & :  shift 75
179 + :  shift 76
179 - :  shift 77
179 ~ :  shift 78
179 ! :  shift 79
285 type-qualifier :  goto 283
285 const :  shift 106
285 restrict :  shift 107
285 volatile :  shift 108
285 pointer :  goto 287
285 * :  shift 285
285 type-qualifier-list :  goto 288
285 # :  reduce pointer -> * 
307 ) :  reduce parameter-type-list -> parameter-list , ... 
298 # :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
391 ( :  shift 392
413 compound-statement :  goto 328
413 ; :  shift 329
413 { :  shift 49
413 identifier :  shift 331
413 assignment-expression :  goto 332
413 enumeration-constant :  goto 57
413 ( :  shift 58
413 constant :  goto 59
413 * :  shift 60
413 statement :  goto 414
413 labeled-statement :  goto 334
413 expression-statement :  goto 335
413 selection-statement :  goto 336
413 iteration-statement :  goto 337
413 jump-statement :  goto 338
413 case :  shift 339
413 default :  shift 340
413 expression :  goto 343
413 if :  shift 344
413 switch :  shift 345
413 while :  shift 346
413 do :  shift 347
413 for :  shift 348
413 continue :  shift 349
413 break :  shift 350
413 goto :  shift 351
413 return :  shift 352
413 primary-expression :  goto 61
413 string-literal :  shift 62
413 integer-constant :  shift 63
413 floating-constant :  shift 64
413 character-constant :  shift 65
413 postfix-expression :  goto 66
413 ++ :  shift 67
413 -- :  shift 68
413 function-call :  goto 69
413 array-access :  goto 70
413 unary-expression :  goto 71
413 unary-operator :  goto 72
413 cast-expression :  goto 73
413 sizeof :  shift 74
413 & :  shift 75
413 + :  shift 76
413 - :  shift 77
413 ~ :  shift 78
413 ! :  shift 79
413 multiplicative-expression :  goto 80
413 additive-expression :  goto 81
413 shift-expression :  goto 82
413 relational-expression :  goto 83
413 equality-expression :  goto 84
413 AND-expression :  goto 85
413 exclusive-OR-expression :  goto 86
413 inclusive-OR-expression :  goto 87
413 logical-AND-expression :  goto 88
413 logical-OR-expression :  goto 89
413 conditional-expression :  goto 90
109 type-specifier :  goto 165
109 type-qualifier :  goto 166
109 void :  shift 95
109 char :  shift 96
109 short :  shift 97
109 int :  shift 98
109 long :  shift 99
109 float :  shift 100
109 double :  shift 101
109 signed :  shift 102
109 unsigned :  shift 103
109 struct-or-union-specifier :  goto 104
109 enum-specifier :  goto 105
109 const :  shift 106
109 restrict :  shift 107
109 volatile :  shift 108
109 struct-or-union :  goto 27
109 struct :  shift 28
109 union :  shift 29
109 enum :  shift 30
109 ) :  reduce type-name -> specifier-qualifier-list 
110 , :  reduce expression -> assignment-expression 
110 ) :  reduce expression -> assignment-expression 
316 , :  reduce initializer-list -> initializer-list , initializer 
316 } :  reduce initializer-list -> initializer-list , initializer 
58 type-specifier :  goto 93
58 type-qualifier :  goto 94
58 void :  shift 95
58 char :  shift 96
58 short :  shift 97
58 int :  shift 98
58 long :  shift 99
58 float :  shift 100
58 double :  shift 101
58 signed :  shift 102
58 unsigned :  shift 103
58 struct-or-union-specifier :  goto 104
58 enum-specifier :  goto 105
58 const :  shift 106
58 restrict :  shift 107
58 volatile :  shift 108
58 struct-or-union :  goto 27
58 struct :  shift 28
58 union :  shift 29
58 identifier :  shift 55
58 specifier-qualifier-list :  goto 109
58 assignment-expression :  goto 110
58 enum :  shift 30
58 enumeration-constant :  goto 57
58 ( :  shift 58
58 constant :  goto 59
58 * :  shift 60
58 type-name :  goto 111
58 expression :  goto 112
58 primary-expression :  goto 61
58 string-literal :  shift 62
58 integer-constant :  shift 63
58 floating-constant :  shift 64
58 character-constant :  shift 65
58 postfix-expression :  goto 66
58 ++ :  shift 67
58 -- :  shift 68
58 function-call :  goto 69
58 array-access :  goto 70
58 unary-expression :  goto 71
58 unary-operator :  goto 72
58 cast-expression :  goto 73
58 sizeof :  shift 74
58 & :  shift 75
58 + :  shift 76
58 - :  shift 77
58 ~ :  shift 78
58 ! :  shift 79
58 multiplicative-expression :  goto 80
58 additive-expression :  goto 81
58 shift-expression :  goto 82
58 relational-expression :  goto 83
58 equality-expression :  goto 84
58 AND-expression :  goto 85
58 exclusive-OR-expression :  goto 86
58 inclusive-OR-expression :  goto 87
58 logical-AND-expression :  goto 88
58 logical-OR-expression :  goto 89
58 conditional-expression :  goto 90
252 declarator :  goto 122
252 identifier :  shift 36
252 struct-declarator :  goto 253
252 direct-declarator :  goto 128
252 pointer :  goto 129
252 ( :  shift 39
252 * :  shift 40
131 # :  reduce struct-declarator -> declarator : constant-expression 
137 identifier :  shift 55
137 enumeration-constant :  goto 57
137 ( :  shift 162
137 constant :  goto 59
137 * :  shift 60
137 primary-expression :  goto 61
137 string-literal :  shift 62
137 integer-constant :  shift 63
137 floating-constant :  shift 64
137 character-constant :  shift 65
137 postfix-expression :  goto 132
137 ++ :  shift 133
137 -- :  shift 134
137 function-call :  goto 69
137 array-access :  goto 70
137 unary-expression :  goto 163
137 unary-operator :  goto 136
137 sizeof :  shift 137
137 & :  shift 75
137 + :  shift 76
137 - :  shift 77
137 ~ :  shift 78
137 ! :  shift 79
138 # :  reduce constant-expression -> conditional-expression 
146 # :  reduce function-call -> postfix-expression ( ) 
149 , :  shift 150
149 ] :  shift 151
155 identifier :  shift 55
155 assignment-expression :  goto 157
155 enumeration-constant :  goto 57
155 ( :  shift 58
155 constant :  goto 59
155 * :  shift 60
155 primary-expression :  goto 61
155 string-literal :  shift 62
155 integer-constant :  shift 63
155 floating-constant :  shift 64
155 character-constant :  shift 65
155 postfix-expression :  goto 66
155 ++ :  shift 67
155 -- :  shift 68
155 function-call :  goto 69
155 array-access :  goto 70
155 unary-expression :  goto 71
155 unary-operator :  goto 72
155 cast-expression :  goto 73
155 sizeof :  shift 74
155 & :  shift 75
155 + :  shift 76
155 - :  shift 77
155 ~ :  shift 78
155 ! :  shift 79
155 multiplicative-expression :  goto 80
155 additive-expression :  goto 81
155 shift-expression :  goto 82
155 relational-expression :  goto 83
155 equality-expression :  goto 84
155 AND-expression :  goto 85
155 exclusive-OR-expression :  goto 86
155 inclusive-OR-expression :  goto 87
155 logical-AND-expression :  goto 88
155 logical-OR-expression :  goto 89
155 conditional-expression :  goto 90
156 # :  reduce primary-expression -> ( expression ) 
154 = :  reduce unary-expression -> ++ unary-expression 
154 identifier :  reduce unary-expression -> ++ unary-expression 
154 ( :  reduce unary-expression -> ++ unary-expression 
154 [ :  reduce unary-expression -> ++ unary-expression 
154 * :  reduce unary-expression -> ++ unary-expression 
154 /= :  reduce unary-expression -> ++ unary-expression 
154 %= :  reduce unary-expression -> ++ unary-expression 
154 string-literal :  reduce unary-expression -> ++ unary-expression 
154 integer-constant :  reduce unary-expression -> ++ unary-expression 
154 floating-constant :  reduce unary-expression -> ++ unary-expression 
154 character-constant :  reduce unary-expression -> ++ unary-expression 
154 ++ :  reduce unary-expression -> ++ unary-expression 
154 . :  reduce unary-expression -> ++ unary-expression 
154 -> :  reduce unary-expression -> ++ unary-expression 
154 -- :  reduce unary-expression -> ++ unary-expression 
154 sizeof :  reduce unary-expression -> ++ unary-expression 
154 & :  reduce unary-expression -> ++ unary-expression 
154 + :  reduce unary-expression -> ++ unary-expression 
154 - :  reduce unary-expression -> ++ unary-expression 
154 ~ :  reduce unary-expression -> ++ unary-expression 
154 ! :  reduce unary-expression -> ++ unary-expression 
154 / :  reduce unary-expression -> ++ unary-expression 
154 % :  reduce unary-expression -> ++ unary-expression 
154 << :  reduce unary-expression -> ++ unary-expression 
154 >> :  reduce unary-expression -> ++ unary-expression 
154 < :  reduce unary-expression -> ++ unary-expression 
154 > :  reduce unary-expression -> ++ unary-expression 
154 <= :  reduce unary-expression -> ++ unary-expression 
154 >= :  reduce unary-expression -> ++ unary-expression 
154 == :  reduce unary-expression -> ++ unary-expression 
154 != :  reduce unary-expression -> ++ unary-expression 
154 ^ :  reduce unary-expression -> ++ unary-expression 
154 | :  reduce unary-expression -> ++ unary-expression 
154 && :  reduce unary-expression -> ++ unary-expression 
154 || :  reduce unary-expression -> ++ unary-expression 
154 *= :  reduce unary-expression -> ++ unary-expression 
154 ? :  reduce unary-expression -> ++ unary-expression 
154 += :  reduce unary-expression -> ++ unary-expression 
154 ^= :  reduce unary-expression -> ++ unary-expression 
154 -= :  reduce unary-expression -> ++ unary-expression 
154 <<= :  reduce unary-expression -> ++ unary-expression 
154 >>= :  reduce unary-expression -> ++ unary-expression 
154 &= :  reduce unary-expression -> ++ unary-expression 
154 |= :  reduce unary-expression -> ++ unary-expression 
154 # :  reduce unary-expression -> ++ unary-expression 
154 epsilon :  reduce unary-expression -> ++ unary-expression 
260 , :  reduce identifier-list -> identifier 
260 ) :  reduce identifier-list -> identifier 
261 ( :  reduce direct-declarator -> direct-declarator ( ) 
261 [ :  reduce direct-declarator -> direct-declarator ( ) 
261 # :  reduce direct-declarator -> direct-declarator ( ) 
262 ) :  shift 301
263 , :  shift 302
263 ) :  shift 303
264 , :  shift 305
264 ) :  reduce parameter-type-list -> parameter-list 
265 , :  reduce parameter-list -> parameter-declaration 
265 # :  reduce parameter-list -> parameter-declaration 
347 compound-statement :  goto 384
347 ; :  shift 329
347 { :  shift 49
347 identifier :  shift 331
347 assignment-expression :  goto 332
347 enumeration-constant :  goto 57
347 ( :  shift 58
347 constant :  goto 59
347 * :  shift 60
347 statement :  goto 385
347 labeled-statement :  goto 386
347 expression-statement :  goto 387
347 selection-statement :  goto 388
347 iteration-statement :  goto 389
347 jump-statement :  goto 390
347 case :  shift 339
347 default :  shift 340
347 expression :  goto 343
347 if :  shift 344
347 switch :  shift 345
347 while :  shift 346
347 do :  shift 347
347 for :  shift 348
347 continue :  shift 349
347 break :  shift 350
347 goto :  shift 351
347 return :  shift 352
347 primary-expression :  goto 61
347 string-literal :  shift 62
347 integer-constant :  shift 63
347 floating-constant :  shift 64
347 character-constant :  shift 65
347 postfix-expression :  goto 66
347 ++ :  shift 67
347 -- :  shift 68
347 function-call :  goto 69
347 array-access :  goto 70
347 unary-expression :  goto 71
347 unary-operator :  goto 72
347 cast-expression :  goto 73
347 sizeof :  shift 74
347 & :  shift 75
347 + :  shift 76
347 - :  shift 77
347 ~ :  shift 78
347 ! :  shift 79
347 multiplicative-expression :  goto 80
347 additive-expression :  goto 81
347 shift-expression :  goto 82
347 relational-expression :  goto 83
347 equality-expression :  goto 84
347 AND-expression :  goto 85
347 exclusive-OR-expression :  goto 86
347 inclusive-OR-expression :  goto 87
347 logical-AND-expression :  goto 88
347 logical-OR-expression :  goto 89
347 conditional-expression :  goto 90
266 # :  reduce parameter-declaration -> declaration-specifiers declarator 
267 ( :  shift 254
267 [ :  shift 255
267 # :  reduce declarator -> direct-declarator 
354 # :  reduce labeled-statement -> identifier : statement 
374 compound-statement :  goto 328
374 ; :  shift 329
374 { :  shift 49
374 identifier :  shift 331
374 assignment-expression :  goto 332
374 enumeration-constant :  goto 57
374 ( :  shift 58
374 constant :  goto 59
374 * :  shift 60
374 statement :  goto 375
374 labeled-statement :  goto 334
374 expression-statement :  goto 335
374 selection-statement :  goto 336
374 iteration-statement :  goto 337
374 jump-statement :  goto 338
374 case :  shift 339
374 default :  shift 340
374 expression :  goto 343
374 if :  shift 344
374 switch :  shift 345
374 while :  shift 346
374 do :  shift 347
374 for :  shift 348
374 continue :  shift 349
374 break :  shift 350
374 goto :  shift 351
374 return :  shift 352
374 primary-expression :  goto 61
374 string-literal :  shift 62
374 integer-constant :  shift 63
374 floating-constant :  shift 64
374 character-constant :  shift 65
374 postfix-expression :  goto 66
374 ++ :  shift 67
374 -- :  shift 68
374 function-call :  goto 69
374 array-access :  goto 70
374 unary-expression :  goto 71
374 unary-operator :  goto 72
374 cast-expression :  goto 73
374 sizeof :  shift 74
374 & :  shift 75
374 + :  shift 76
374 - :  shift 77
374 ~ :  shift 78
374 ! :  shift 79
374 multiplicative-expression :  goto 80
374 additive-expression :  goto 81
374 shift-expression :  goto 82
374 relational-expression :  goto 83
374 equality-expression :  goto 84
374 AND-expression :  goto 85
374 exclusive-OR-expression :  goto 86
374 inclusive-OR-expression :  goto 87
374 logical-AND-expression :  goto 88
374 logical-OR-expression :  goto 89
374 conditional-expression :  goto 90
297 # :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
259 declaration-specifiers :  goto 300
259 storage-class-specifier :  goto 293
259 type-specifier :  goto 294
259 type-qualifier :  goto 295
259 extern :  shift 10
259 static :  shift 11
259 register :  shift 12
259 void :  shift 13
259 char :  shift 14
259 short :  shift 15
259 int :  shift 16
259 long :  shift 17
259 float :  shift 18
259 double :  shift 19
259 signed :  shift 20
259 unsigned :  shift 21
259 struct-or-union-specifier :  goto 22
259 enum-specifier :  goto 23
259 const :  shift 24
259 restrict :  shift 25
259 volatile :  shift 26
259 struct-or-union :  goto 27
259 struct :  shift 28
259 union :  shift 29
259 identifier :  reduce declaration-specifiers -> type-qualifier 
259 enum :  shift 30
259 ( :  reduce declaration-specifiers -> type-qualifier 
259 [ :  reduce declaration-specifiers -> type-qualifier 
259 * :  reduce declaration-specifiers -> type-qualifier 
259 # :  reduce declaration-specifiers -> type-qualifier 
259 epsilon :  reduce declaration-specifiers -> type-qualifier 
219 identifier :  shift 55
219 enumeration-constant :  goto 57
219 ( :  shift 58
219 constant :  goto 59
219 * :  shift 60
219 primary-expression :  goto 61
219 string-literal :  shift 62
219 integer-constant :  shift 63
219 floating-constant :  shift 64
219 character-constant :  shift 65
219 postfix-expression :  goto 132
219 ++ :  shift 133
219 -- :  shift 134
219 function-call :  goto 69
219 array-access :  goto 70
219 unary-expression :  goto 135
219 unary-operator :  goto 136
219 cast-expression :  goto 73
219 sizeof :  shift 137
219 & :  shift 75
219 + :  shift 76
219 - :  shift 77
219 ~ :  shift 78
219 ! :  shift 79
219 multiplicative-expression :  goto 80
219 additive-expression :  goto 81
219 shift-expression :  goto 82
219 relational-expression :  goto 83
219 equality-expression :  goto 84
219 AND-expression :  goto 85
219 exclusive-OR-expression :  goto 86
219 inclusive-OR-expression :  goto 87
219 logical-AND-expression :  goto 88
219 logical-OR-expression :  goto 89
219 conditional-expression :  goto 239
183 * :  reduce multiplicative-expression -> multiplicative-expression / cast-expression 
183 / :  reduce multiplicative-expression -> multiplicative-expression / cast-expression 
183 % :  reduce multiplicative-expression -> multiplicative-expression / cast-expression 
183 # :  reduce multiplicative-expression -> multiplicative-expression / cast-expression 
195 identifier :  shift 55
195 enumeration-constant :  goto 57
195 ( :  shift 58
195 constant :  goto 59
195 * :  shift 60
195 primary-expression :  goto 61
195 string-literal :  shift 62
195 integer-constant :  shift 63
195 floating-constant :  shift 64
195 character-constant :  shift 65
195 postfix-expression :  goto 132
195 ++ :  shift 133
195 -- :  shift 134
195 function-call :  goto 69
195 array-access :  goto 70
195 unary-expression :  goto 135
195 unary-operator :  goto 136
195 cast-expression :  goto 73
195 sizeof :  shift 137
195 & :  shift 75
195 + :  shift 76
195 - :  shift 77
195 ~ :  shift 78
195 ! :  shift 79
195 multiplicative-expression :  goto 80
195 additive-expression :  goto 81
195 shift-expression :  goto 199
196 identifier :  shift 55
196 enumeration-constant :  goto 57
196 ( :  shift 58
196 constant :  goto 59
196 * :  shift 60
196 primary-expression :  goto 61
196 string-literal :  shift 62
196 integer-constant :  shift 63
196 floating-constant :  shift 64
196 character-constant :  shift 65
196 postfix-expression :  goto 132
196 ++ :  shift 133
196 -- :  shift 134
196 function-call :  goto 69
196 array-access :  goto 70
196 unary-expression :  goto 135
196 unary-operator :  goto 136
196 cast-expression :  goto 73
196 sizeof :  shift 137
196 & :  shift 75
196 + :  shift 76
196 - :  shift 77
196 ~ :  shift 78
196 ! :  shift 79
196 multiplicative-expression :  goto 80
196 additive-expression :  goto 81
196 shift-expression :  goto 200
209 identifier :  shift 55
209 enumeration-constant :  goto 57
209 ( :  shift 58
209 constant :  goto 59
209 * :  shift 60
209 primary-expression :  goto 61
209 string-literal :  shift 62
209 integer-constant :  shift 63
209 floating-constant :  shift 64
209 character-constant :  shift 65
209 postfix-expression :  goto 132
209 ++ :  shift 133
209 -- :  shift 134
209 function-call :  goto 69
209 array-access :  goto 70
209 unary-expression :  goto 135
209 unary-operator :  goto 136
209 cast-expression :  goto 73
209 sizeof :  shift 137
209 & :  shift 75
209 + :  shift 76
209 - :  shift 77
209 ~ :  shift 78
209 ! :  shift 79
209 multiplicative-expression :  goto 80
209 additive-expression :  goto 81
209 shift-expression :  goto 82
209 relational-expression :  goto 83
209 equality-expression :  goto 84
209 AND-expression :  goto 85
209 exclusive-OR-expression :  goto 210
190 identifier :  shift 55
190 enumeration-constant :  goto 57
190 ( :  shift 58
190 constant :  goto 59
190 * :  shift 60
190 primary-expression :  goto 61
190 string-literal :  shift 62
190 integer-constant :  shift 63
190 floating-constant :  shift 64
190 character-constant :  shift 65
190 postfix-expression :  goto 132
190 ++ :  shift 133
190 -- :  shift 134
190 function-call :  goto 69
190 array-access :  goto 70
190 unary-expression :  goto 135
190 unary-operator :  goto 136
190 cast-expression :  goto 73
190 sizeof :  shift 137
190 & :  shift 75
190 + :  shift 76
190 - :  shift 77
190 ~ :  shift 78
190 ! :  shift 79
190 multiplicative-expression :  goto 80
190 additive-expression :  goto 192
202 identifier :  shift 55
202 enumeration-constant :  goto 57
202 ( :  shift 58
202 constant :  goto 59
202 * :  shift 60
202 primary-expression :  goto 61
202 string-literal :  shift 62
202 integer-constant :  shift 63
202 floating-constant :  shift 64
202 character-constant :  shift 65
202 postfix-expression :  goto 132
202 ++ :  shift 133
202 -- :  shift 134
202 function-call :  goto 69
202 array-access :  goto 70
202 unary-expression :  goto 135
202 unary-operator :  goto 136
202 cast-expression :  goto 73
202 sizeof :  shift 137
202 & :  shift 75
202 + :  shift 76
202 - :  shift 77
202 ~ :  shift 78
202 ! :  shift 79
202 multiplicative-expression :  goto 80
202 additive-expression :  goto 81
202 shift-expression :  goto 82
202 relational-expression :  goto 204
204 < :  shift 193
204 > :  shift 194
204 <= :  shift 195
204 >= :  shift 196
204 == :  reduce equality-expression -> equality-expression != relational-expression 
204 != :  reduce equality-expression -> equality-expression != relational-expression 
204 # :  reduce equality-expression -> equality-expression != relational-expression 
348 ( :  shift 396
349 ; :  shift 406
350 ; :  shift 407
351 identifier :  shift 408
368 else :  shift 374
368 # :  reduce selection-statement -> if ( expression ) statement 
369 else :  reduce statement -> labeled-statement 
369 # :  reduce statement -> labeled-statement 
370 else :  reduce statement -> expression-statement 
370 # :  reduce statement -> expression-statement 
371 else :  reduce statement -> selection-statement 
371 # :  reduce statement -> selection-statement 
372 else :  reduce statement -> iteration-statement 
372 # :  reduce statement -> iteration-statement 
373 else :  reduce statement -> jump-statement 
373 # :  reduce statement -> jump-statement 
363 ; :  reduce expression -> expression , assignment-expression 
363 , :  reduce expression -> expression , assignment-expression 
375 # :  reduce selection-statement -> if ( expression ) statement else statement 
378 compound-statement :  goto 328
378 ; :  shift 329
378 { :  shift 49
378 identifier :  shift 331
378 assignment-expression :  goto 332
378 enumeration-constant :  goto 57
378 ( :  shift 58
378 constant :  goto 59
378 * :  shift 60
378 statement :  goto 379
378 labeled-statement :  goto 334
378 expression-statement :  goto 335
378 selection-statement :  goto 336
378 iteration-statement :  goto 337
378 jump-statement :  goto 338
378 case :  shift 339
378 default :  shift 340
378 expression :  goto 343
378 if :  shift 344
378 switch :  shift 345
378 while :  shift 346
378 do :  shift 347
378 for :  shift 348
378 continue :  shift 349
378 break :  shift 350
378 goto :  shift 351
378 return :  shift 352
378 primary-expression :  goto 61
378 string-literal :  shift 62
378 integer-constant :  shift 63
378 floating-constant :  shift 64
378 character-constant :  shift 65
378 postfix-expression :  goto 66
378 ++ :  shift 67
378 -- :  shift 68
378 function-call :  goto 69
378 array-access :  goto 70
378 unary-expression :  goto 71
378 unary-operator :  goto 72
378 cast-expression :  goto 73
378 sizeof :  shift 74
378 & :  shift 75
378 + :  shift 76
378 - :  shift 77
378 ~ :  shift 78
378 ! :  shift 79
378 multiplicative-expression :  goto 80
378 additive-expression :  goto 81
378 shift-expression :  goto 82
378 relational-expression :  goto 83
378 equality-expression :  goto 84
378 AND-expression :  goto 85
378 exclusive-OR-expression :  goto 86
378 inclusive-OR-expression :  goto 87
378 logical-AND-expression :  goto 88
378 logical-OR-expression :  goto 89
378 conditional-expression :  goto 90
220 , :  reduce expression -> expression , assignment-expression 
220 : :  reduce expression -> expression , assignment-expression 
224 = :  reduce assignment-operator -> *= 
224 identifier :  reduce assignment-operator -> *= 
224 ( :  reduce assignment-operator -> *= 
224 [ :  reduce assignment-operator -> *= 
224 * :  reduce assignment-operator -> *= 
224 /= :  reduce assignment-operator -> *= 
224 %= :  reduce assignment-operator -> *= 
224 string-literal :  reduce assignment-operator -> *= 
224 integer-constant :  reduce assignment-operator -> *= 
224 floating-constant :  reduce assignment-operator -> *= 
224 character-constant :  reduce assignment-operator -> *= 
224 ++ :  reduce assignment-operator -> *= 
224 . :  reduce assignment-operator -> *= 
224 -> :  reduce assignment-operator -> *= 
224 -- :  reduce assignment-operator -> *= 
224 sizeof :  reduce assignment-operator -> *= 
224 & :  reduce assignment-operator -> *= 
224 + :  reduce assignment-operator -> *= 
224 - :  reduce assignment-operator -> *= 
224 ~ :  reduce assignment-operator -> *= 
224 ! :  reduce assignment-operator -> *= 
224 / :  reduce assignment-operator -> *= 
224 % :  reduce assignment-operator -> *= 
224 << :  reduce assignment-operator -> *= 
224 >> :  reduce assignment-operator -> *= 
224 < :  reduce assignment-operator -> *= 
224 > :  reduce assignment-operator -> *= 
224 <= :  reduce assignment-operator -> *= 
224 >= :  reduce assignment-operator -> *= 
224 == :  reduce assignment-operator -> *= 
224 != :  reduce assignment-operator -> *= 
224 ^ :  reduce assignment-operator -> *= 
224 | :  reduce assignment-operator -> *= 
224 && :  reduce assignment-operator -> *= 
224 || :  reduce assignment-operator -> *= 
224 *= :  reduce assignment-operator -> *= 
224 ? :  reduce assignment-operator -> *= 
224 += :  reduce assignment-operator -> *= 
224 ^= :  reduce assignment-operator -> *= 
224 -= :  reduce assignment-operator -> *= 
224 <<= :  reduce assignment-operator -> *= 
224 >>= :  reduce assignment-operator -> *= 
224 &= :  reduce assignment-operator -> *= 
224 |= :  reduce assignment-operator -> *= 
224 # :  reduce assignment-operator -> *= 
224 epsilon :  reduce assignment-operator -> *= 
223 = :  reduce assignment-operator -> %= 
223 identifier :  reduce assignment-operator -> %= 
223 ( :  reduce assignment-operator -> %= 
223 [ :  reduce assignment-operator -> %= 
223 * :  reduce assignment-operator -> %= 
223 /= :  reduce assignment-operator -> %= 
223 %= :  reduce assignment-operator -> %= 
223 string-literal :  reduce assignment-operator -> %= 
223 integer-constant :  reduce assignment-operator -> %= 
223 floating-constant :  reduce assignment-operator -> %= 
223 character-constant :  reduce assignment-operator -> %= 
223 ++ :  reduce assignment-operator -> %= 
223 . :  reduce assignment-operator -> %= 
223 -> :  reduce assignment-operator -> %= 
223 -- :  reduce assignment-operator -> %= 
223 sizeof :  reduce assignment-operator -> %= 
223 & :  reduce assignment-operator -> %= 
223 + :  reduce assignment-operator -> %= 
223 - :  reduce assignment-operator -> %= 
223 ~ :  reduce assignment-operator -> %= 
223 ! :  reduce assignment-operator -> %= 
223 / :  reduce assignment-operator -> %= 
223 % :  reduce assignment-operator -> %= 
223 << :  reduce assignment-operator -> %= 
223 >> :  reduce assignment-operator -> %= 
223 < :  reduce assignment-operator -> %= 
223 > :  reduce assignment-operator -> %= 
223 <= :  reduce assignment-operator -> %= 
223 >= :  reduce assignment-operator -> %= 
223 == :  reduce assignment-operator -> %= 
223 != :  reduce assignment-operator -> %= 
223 ^ :  reduce assignment-operator -> %= 
223 | :  reduce assignment-operator -> %= 
223 && :  reduce assignment-operator -> %= 
223 || :  reduce assignment-operator -> %= 
223 *= :  reduce assignment-operator -> %= 
223 ? :  reduce assignment-operator -> %= 
223 += :  reduce assignment-operator -> %= 
223 ^= :  reduce assignment-operator -> %= 
223 -= :  reduce assignment-operator -> %= 
223 <<= :  reduce assignment-operator -> %= 
223 >>= :  reduce assignment-operator -> %= 
223 &= :  reduce assignment-operator -> %= 
223 |= :  reduce assignment-operator -> %= 
223 # :  reduce assignment-operator -> %= 
223 epsilon :  reduce assignment-operator -> %= 
221 = :  reduce assignment-operator -> = 
221 identifier :  reduce assignment-operator -> = 
221 ( :  reduce assignment-operator -> = 
221 [ :  reduce assignment-operator -> = 
221 * :  reduce assignment-operator -> = 
221 /= :  reduce assignment-operator -> = 
221 %= :  reduce assignment-operator -> = 
221 string-literal :  reduce assignment-operator -> = 
221 integer-constant :  reduce assignment-operator -> = 
221 floating-constant :  reduce assignment-operator -> = 
221 character-constant :  reduce assignment-operator -> = 
221 ++ :  reduce assignment-operator -> = 
221 . :  reduce assignment-operator -> = 
221 -> :  reduce assignment-operator -> = 
221 -- :  reduce assignment-operator -> = 
221 sizeof :  reduce assignment-operator -> = 
221 & :  reduce assignment-operator -> = 
221 + :  reduce assignment-operator -> = 
221 - :  reduce assignment-operator -> = 
221 ~ :  reduce assignment-operator -> = 
221 ! :  reduce assignment-operator -> = 
221 / :  reduce assignment-operator -> = 
221 % :  reduce assignment-operator -> = 
221 << :  reduce assignment-operator -> = 
221 >> :  reduce assignment-operator -> = 
221 < :  reduce assignment-operator -> = 
221 > :  reduce assignment-operator -> = 
221 <= :  reduce assignment-operator -> = 
221 >= :  reduce assignment-operator -> = 
221 == :  reduce assignment-operator -> = 
221 != :  reduce assignment-operator -> = 
221 ^ :  reduce assignment-operator -> = 
221 | :  reduce assignment-operator -> = 
221 && :  reduce assignment-operator -> = 
221 || :  reduce assignment-operator -> = 
221 *= :  reduce assignment-operator -> = 
221 ? :  reduce assignment-operator -> = 
221 += :  reduce assignment-operator -> = 
221 ^= :  reduce assignment-operator -> = 
221 -= :  reduce assignment-operator -> = 
221 <<= :  reduce assignment-operator -> = 
221 >>= :  reduce assignment-operator -> = 
221 &= :  reduce assignment-operator -> = 
221 |= :  reduce assignment-operator -> = 
221 # :  reduce assignment-operator -> = 
221 epsilon :  reduce assignment-operator -> = 
222 = :  reduce assignment-operator -> /= 
222 identifier :  reduce assignment-operator -> /= 
222 ( :  reduce assignment-operator -> /= 
222 [ :  reduce assignment-operator -> /= 
222 * :  reduce assignment-operator -> /= 
222 /= :  reduce assignment-operator -> /= 
222 %= :  reduce assignment-operator -> /= 
222 string-literal :  reduce assignment-operator -> /= 
222 integer-constant :  reduce assignment-operator -> /= 
222 floating-constant :  reduce assignment-operator -> /= 
222 character-constant :  reduce assignment-operator -> /= 
222 ++ :  reduce assignment-operator -> /= 
222 . :  reduce assignment-operator -> /= 
222 -> :  reduce assignment-operator -> /= 
222 -- :  reduce assignment-operator -> /= 
222 sizeof :  reduce assignment-operator -> /= 
222 & :  reduce assignment-operator -> /= 
222 + :  reduce assignment-operator -> /= 
222 - :  reduce assignment-operator -> /= 
222 ~ :  reduce assignment-operator -> /= 
222 ! :  reduce assignment-operator -> /= 
222 / :  reduce assignment-operator -> /= 
222 % :  reduce assignment-operator -> /= 
222 << :  reduce assignment-operator -> /= 
222 >> :  reduce assignment-operator -> /= 
222 < :  reduce assignment-operator -> /= 
222 > :  reduce assignment-operator -> /= 
222 <= :  reduce assignment-operator -> /= 
222 >= :  reduce assignment-operator -> /= 
222 == :  reduce assignment-operator -> /= 
222 != :  reduce assignment-operator -> /= 
222 ^ :  reduce assignment-operator -> /= 
222 | :  reduce assignment-operator -> /= 
222 && :  reduce assignment-operator -> /= 
222 || :  reduce assignment-operator -> /= 
222 *= :  reduce assignment-operator -> /= 
222 ? :  reduce assignment-operator -> /= 
222 += :  reduce assignment-operator -> /= 
222 ^= :  reduce assignment-operator -> /= 
222 -= :  reduce assignment-operator -> /= 
222 <<= :  reduce assignment-operator -> /= 
222 >>= :  reduce assignment-operator -> /= 
222 &= :  reduce assignment-operator -> /= 
222 |= :  reduce assignment-operator -> /= 
222 # :  reduce assignment-operator -> /= 
222 epsilon :  reduce assignment-operator -> /= 
238 = :  reduce unary-expression -> sizeof ( type-name ) 
238 identifier :  reduce unary-expression -> sizeof ( type-name ) 
238 ( :  reduce unary-expression -> sizeof ( type-name ) 
238 [ :  reduce unary-expression -> sizeof ( type-name ) 
238 * :  reduce unary-expression -> sizeof ( type-name ) 
238 /= :  reduce unary-expression -> sizeof ( type-name ) 
238 %= :  reduce unary-expression -> sizeof ( type-name ) 
238 string-literal :  reduce unary-expression -> sizeof ( type-name ) 
238 integer-constant :  reduce unary-expression -> sizeof ( type-name ) 
238 floating-constant :  reduce unary-expression -> sizeof ( type-name ) 
238 character-constant :  reduce unary-expression -> sizeof ( type-name ) 
238 ++ :  reduce unary-expression -> sizeof ( type-name ) 
238 . :  reduce unary-expression -> sizeof ( type-name ) 
238 -> :  reduce unary-expression -> sizeof ( type-name ) 
238 -- :  reduce unary-expression -> sizeof ( type-name ) 
238 sizeof :  reduce unary-expression -> sizeof ( type-name ) 
238 & :  reduce unary-expression -> sizeof ( type-name ) 
238 + :  reduce unary-expression -> sizeof ( type-name ) 
238 - :  reduce unary-expression -> sizeof ( type-name ) 
238 ~ :  reduce unary-expression -> sizeof ( type-name ) 
238 ! :  reduce unary-expression -> sizeof ( type-name ) 
238 / :  reduce unary-expression -> sizeof ( type-name ) 
238 % :  reduce unary-expression -> sizeof ( type-name ) 
238 << :  reduce unary-expression -> sizeof ( type-name ) 
238 >> :  reduce unary-expression -> sizeof ( type-name ) 
238 < :  reduce unary-expression -> sizeof ( type-name ) 
238 > :  reduce unary-expression -> sizeof ( type-name ) 
238 <= :  reduce unary-expression -> sizeof ( type-name ) 
238 >= :  reduce unary-expression -> sizeof ( type-name ) 
238 == :  reduce unary-expression -> sizeof ( type-name ) 
238 != :  reduce unary-expression -> sizeof ( type-name ) 
238 ^ :  reduce unary-expression -> sizeof ( type-name ) 
238 | :  reduce unary-expression -> sizeof ( type-name ) 
238 && :  reduce unary-expression -> sizeof ( type-name ) 
238 || :  reduce unary-expression -> sizeof ( type-name ) 
238 *= :  reduce unary-expression -> sizeof ( type-name ) 
238 ? :  reduce unary-expression -> sizeof ( type-name ) 
238 += :  reduce unary-expression -> sizeof ( type-name ) 
238 ^= :  reduce unary-expression -> sizeof ( type-name ) 
238 -= :  reduce unary-expression -> sizeof ( type-name ) 
238 <<= :  reduce unary-expression -> sizeof ( type-name ) 
238 >>= :  reduce unary-expression -> sizeof ( type-name ) 
238 &= :  reduce unary-expression -> sizeof ( type-name ) 
238 |= :  reduce unary-expression -> sizeof ( type-name ) 
238 # :  reduce unary-expression -> sizeof ( type-name ) 
238 epsilon :  reduce unary-expression -> sizeof ( type-name ) 
381 , :  shift 155
381 ) :  shift 382
178 # :  reduce enumerator -> enumeration-constant = constant-expression 
181 identifier :  shift 55
181 enumeration-constant :  goto 57
181 ( :  shift 58
181 constant :  goto 59
181 * :  shift 60
181 primary-expression :  goto 61
181 string-literal :  shift 62
181 integer-constant :  shift 63
181 floating-constant :  shift 64
181 character-constant :  shift 65
181 postfix-expression :  goto 132
181 ++ :  shift 133
181 -- :  shift 134
181 function-call :  goto 69
181 array-access :  goto 70
181 unary-expression :  goto 135
181 unary-operator :  goto 136
181 cast-expression :  goto 184
181 sizeof :  shift 137
181 & :  shift 75
181 + :  shift 76
181 - :  shift 77
181 ~ :  shift 78
181 ! :  shift 79
241 , :  shift 242
241 } :  shift 243
237 ) :  shift 238
188 * :  shift 179
188 + :  reduce additive-expression -> additive-expression - multiplicative-expression 
188 - :  reduce additive-expression -> additive-expression - multiplicative-expression 
188 / :  shift 180
188 % :  shift 181
188 # :  reduce additive-expression -> additive-expression - multiplicative-expression 
234 = :  reduce unary-expression -> unary-operator cast-expression 
234 identifier :  reduce unary-expression -> unary-operator cast-expression 
234 ( :  reduce unary-expression -> unary-operator cast-expression 
234 [ :  reduce unary-expression -> unary-operator cast-expression 
234 * :  reduce unary-expression -> unary-operator cast-expression 
234 /= :  reduce unary-expression -> unary-operator cast-expression 
234 %= :  reduce unary-expression -> unary-operator cast-expression 
234 string-literal :  reduce unary-expression -> unary-operator cast-expression 
234 integer-constant :  reduce unary-expression -> unary-operator cast-expression 
234 floating-constant :  reduce unary-expression -> unary-operator cast-expression 
234 character-constant :  reduce unary-expression -> unary-operator cast-expression 
234 ++ :  reduce unary-expression -> unary-operator cast-expression 
234 . :  reduce unary-expression -> unary-operator cast-expression 
234 -> :  reduce unary-expression -> unary-operator cast-expression 
234 -- :  reduce unary-expression -> unary-operator cast-expression 
234 sizeof :  reduce unary-expression -> unary-operator cast-expression 
234 & :  reduce unary-expression -> unary-operator cast-expression 
234 + :  reduce unary-expression -> unary-operator cast-expression 
234 - :  reduce unary-expression -> unary-operator cast-expression 
234 ~ :  reduce unary-expression -> unary-operator cast-expression 
234 ! :  reduce unary-expression -> unary-operator cast-expression 
234 / :  reduce unary-expression -> unary-operator cast-expression 
234 % :  reduce unary-expression -> unary-operator cast-expression 
234 << :  reduce unary-expression -> unary-operator cast-expression 
234 >> :  reduce unary-expression -> unary-operator cast-expression 
234 < :  reduce unary-expression -> unary-operator cast-expression 
234 > :  reduce unary-expression -> unary-operator cast-expression 
234 <= :  reduce unary-expression -> unary-operator cast-expression 
234 >= :  reduce unary-expression -> unary-operator cast-expression 
234 == :  reduce unary-expression -> unary-operator cast-expression 
234 != :  reduce unary-expression -> unary-operator cast-expression 
234 ^ :  reduce unary-expression -> unary-operator cast-expression 
234 | :  reduce unary-expression -> unary-operator cast-expression 
234 && :  reduce unary-expression -> unary-operator cast-expression 
234 || :  reduce unary-expression -> unary-operator cast-expression 
234 *= :  reduce unary-expression -> unary-operator cast-expression 
234 ? :  reduce unary-expression -> unary-operator cast-expression 
234 += :  reduce unary-expression -> unary-operator cast-expression 
234 ^= :  reduce unary-expression -> unary-operator cast-expression 
234 -= :  reduce unary-expression -> unary-operator cast-expression 
234 <<= :  reduce unary-expression -> unary-operator cast-expression 
234 >>= :  reduce unary-expression -> unary-operator cast-expression 
234 &= :  reduce unary-expression -> unary-operator cast-expression 
234 |= :  reduce unary-expression -> unary-operator cast-expression 
234 # :  reduce unary-expression -> unary-operator cast-expression 
234 epsilon :  reduce unary-expression -> unary-operator cast-expression 
240 identifier :  shift 169
240 enumerator :  goto 170
240 enumerator-list :  goto 241
240 enumeration-constant :  goto 172
194 identifier :  shift 55
194 enumeration-constant :  goto 57
194 ( :  shift 58
194 constant :  goto 59
194 * :  shift 60
194 primary-expression :  goto 61
194 string-literal :  shift 62
194 integer-constant :  shift 63
194 floating-constant :  shift 64
194 character-constant :  shift 65
194 postfix-expression :  goto 132
194 ++ :  shift 133
194 -- :  shift 134
194 function-call :  goto 69
194 array-access :  goto 70
194 unary-expression :  goto 135
194 unary-operator :  goto 136
194 cast-expression :  goto 73
194 sizeof :  shift 137
194 & :  shift 75
194 + :  shift 76
194 - :  shift 77
194 ~ :  shift 78
194 ! :  shift 79
194 multiplicative-expression :  goto 80
194 additive-expression :  goto 81
194 shift-expression :  goto 198
215 && :  shift 211
215 || :  reduce logical-OR-expression -> logical-OR-expression || logical-AND-expression 
215 ? :  reduce logical-OR-expression -> logical-OR-expression || logical-AND-expression 
215 # :  reduce logical-OR-expression -> logical-OR-expression || logical-AND-expression 
217 , :  shift 218
217 : :  shift 219
205 identifier :  shift 55
205 enumeration-constant :  goto 57
205 ( :  shift 58
205 constant :  goto 59
205 * :  shift 60
205 primary-expression :  goto 61
205 string-literal :  shift 62
205 integer-constant :  shift 63
205 floating-constant :  shift 64
205 character-constant :  shift 65
205 postfix-expression :  goto 132
205 ++ :  shift 133
205 -- :  shift 134
205 function-call :  goto 69
205 array-access :  goto 70
205 unary-expression :  goto 135
205 unary-operator :  goto 136
205 cast-expression :  goto 73
205 sizeof :  shift 137
205 & :  shift 75
205 + :  shift 76
205 - :  shift 77
205 ~ :  shift 78
205 ! :  shift 79
205 multiplicative-expression :  goto 80
205 additive-expression :  goto 81
205 shift-expression :  goto 82
205 relational-expression :  goto 83
205 equality-expression :  goto 206
213 identifier :  shift 55
213 enumeration-constant :  goto 57
213 ( :  shift 58
213 constant :  goto 59
213 * :  shift 60
213 primary-expression :  goto 61
213 string-literal :  shift 62
213 integer-constant :  shift 63
213 floating-constant :  shift 64
213 character-constant :  shift 65
213 postfix-expression :  goto 132
213 ++ :  shift 133
213 -- :  shift 134
213 function-call :  goto 69
213 array-access :  goto 70
213 unary-expression :  goto 135
213 unary-operator :  goto 136
213 cast-expression :  goto 73
213 sizeof :  shift 137
213 & :  shift 75
213 + :  shift 76
213 - :  shift 77
213 ~ :  shift 78
213 ! :  shift 79
213 multiplicative-expression :  goto 80
213 additive-expression :  goto 81
213 shift-expression :  goto 82
213 relational-expression :  goto 83
213 equality-expression :  goto 84
213 AND-expression :  goto 85
213 exclusive-OR-expression :  goto 86
213 inclusive-OR-expression :  goto 87
213 logical-AND-expression :  goto 215
225 identifier :  shift 55
225 assignment-expression :  goto 233
225 enumeration-constant :  goto 57
225 ( :  shift 58
225 constant :  goto 59
225 * :  shift 60
225 primary-expression :  goto 61
225 string-literal :  shift 62
225 integer-constant :  shift 63
225 floating-constant :  shift 64
225 character-constant :  shift 65
225 postfix-expression :  goto 66
225 ++ :  shift 67
225 -- :  shift 68
225 function-call :  goto 69
225 array-access :  goto 70
225 unary-expression :  goto 71
225 unary-operator :  goto 72
225 cast-expression :  goto 73
225 sizeof :  shift 74
225 & :  shift 75
225 + :  shift 76
225 - :  shift 77
225 ~ :  shift 78
225 ! :  shift 79
225 multiplicative-expression :  goto 80
225 additive-expression :  goto 81
225 shift-expression :  goto 82
225 relational-expression :  goto 83
225 equality-expression :  goto 84
225 AND-expression :  goto 85
225 exclusive-OR-expression :  goto 86
225 inclusive-OR-expression :  goto 87
225 logical-AND-expression :  goto 88
225 logical-OR-expression :  goto 89
225 conditional-expression :  goto 90
197 << :  shift 189
197 >> :  shift 190
197 < :  reduce relational-expression -> relational-expression < shift-expression 
197 > :  reduce relational-expression -> relational-expression < shift-expression 
197 <= :  reduce relational-expression -> relational-expression < shift-expression 
197 >= :  reduce relational-expression -> relational-expression < shift-expression 
197 # :  reduce relational-expression -> relational-expression < shift-expression 
251 # :  reduce struct-declaration -> specifier-qualifier-list struct-declarator-list ; 
198 << :  shift 189
198 >> :  shift 190
198 < :  reduce relational-expression -> relational-expression > shift-expression 
198 > :  reduce relational-expression -> relational-expression > shift-expression 
198 <= :  reduce relational-expression -> relational-expression > shift-expression 
198 >= :  reduce relational-expression -> relational-expression > shift-expression 
198 # :  reduce relational-expression -> relational-expression > shift-expression 
226 = :  reduce assignment-operator -> += 
226 identifier :  reduce assignment-operator -> += 
226 ( :  reduce assignment-operator -> += 
226 [ :  reduce assignment-operator -> += 
226 * :  reduce assignment-operator -> += 
226 /= :  reduce assignment-operator -> += 
226 %= :  reduce assignment-operator -> += 
226 string-literal :  reduce assignment-operator -> += 
226 integer-constant :  reduce assignment-operator -> += 
226 floating-constant :  reduce assignment-operator -> += 
226 character-constant :  reduce assignment-operator -> += 
226 ++ :  reduce assignment-operator -> += 
226 . :  reduce assignment-operator -> += 
226 -> :  reduce assignment-operator -> += 
226 -- :  reduce assignment-operator -> += 
226 sizeof :  reduce assignment-operator -> += 
226 & :  reduce assignment-operator -> += 
226 + :  reduce assignment-operator -> += 
226 - :  reduce assignment-operator -> += 
226 ~ :  reduce assignment-operator -> += 
226 ! :  reduce assignment-operator -> += 
226 / :  reduce assignment-operator -> += 
226 % :  reduce assignment-operator -> += 
226 << :  reduce assignment-operator -> += 
226 >> :  reduce assignment-operator -> += 
226 < :  reduce assignment-operator -> += 
226 > :  reduce assignment-operator -> += 
226 <= :  reduce assignment-operator -> += 
226 >= :  reduce assignment-operator -> += 
226 == :  reduce assignment-operator -> += 
226 != :  reduce assignment-operator -> += 
226 ^ :  reduce assignment-operator -> += 
226 | :  reduce assignment-operator -> += 
226 && :  reduce assignment-operator -> += 
226 || :  reduce assignment-operator -> += 
226 *= :  reduce assignment-operator -> += 
226 ? :  reduce assignment-operator -> += 
226 += :  reduce assignment-operator -> += 
226 ^= :  reduce assignment-operator -> += 
226 -= :  reduce assignment-operator -> += 
226 <<= :  reduce assignment-operator -> += 
226 >>= :  reduce assignment-operator -> += 
226 &= :  reduce assignment-operator -> += 
226 |= :  reduce assignment-operator -> += 
226 # :  reduce assignment-operator -> += 
226 epsilon :  reduce assignment-operator -> += 
227 = :  reduce assignment-operator -> ^= 
227 identifier :  reduce assignment-operator -> ^= 
227 ( :  reduce assignment-operator -> ^= 
227 [ :  reduce assignment-operator -> ^= 
227 * :  reduce assignment-operator -> ^= 
227 /= :  reduce assignment-operator -> ^= 
227 %= :  reduce assignment-operator -> ^= 
227 string-literal :  reduce assignment-operator -> ^= 
227 integer-constant :  reduce assignment-operator -> ^= 
227 floating-constant :  reduce assignment-operator -> ^= 
227 character-constant :  reduce assignment-operator -> ^= 
227 ++ :  reduce assignment-operator -> ^= 
227 . :  reduce assignment-operator -> ^= 
227 -> :  reduce assignment-operator -> ^= 
227 -- :  reduce assignment-operator -> ^= 
227 sizeof :  reduce assignment-operator -> ^= 
227 & :  reduce assignment-operator -> ^= 
227 + :  reduce assignment-operator -> ^= 
227 - :  reduce assignment-operator -> ^= 
227 ~ :  reduce assignment-operator -> ^= 
227 ! :  reduce assignment-operator -> ^= 
227 / :  reduce assignment-operator -> ^= 
227 % :  reduce assignment-operator -> ^= 
227 << :  reduce assignment-operator -> ^= 
227 >> :  reduce assignment-operator -> ^= 
227 < :  reduce assignment-operator -> ^= 
227 > :  reduce assignment-operator -> ^= 
227 <= :  reduce assignment-operator -> ^= 
227 >= :  reduce assignment-operator -> ^= 
227 == :  reduce assignment-operator -> ^= 
227 != :  reduce assignment-operator -> ^= 
227 ^ :  reduce assignment-operator -> ^= 
227 | :  reduce assignment-operator -> ^= 
227 && :  reduce assignment-operator -> ^= 
227 || :  reduce assignment-operator -> ^= 
227 *= :  reduce assignment-operator -> ^= 
227 ? :  reduce assignment-operator -> ^= 
227 += :  reduce assignment-operator -> ^= 
227 ^= :  reduce assignment-operator -> ^= 
227 -= :  reduce assignment-operator -> ^= 
227 <<= :  reduce assignment-operator -> ^= 
227 >>= :  reduce assignment-operator -> ^= 
227 &= :  reduce assignment-operator -> ^= 
227 |= :  reduce assignment-operator -> ^= 
227 # :  reduce assignment-operator -> ^= 
227 epsilon :  reduce assignment-operator -> ^= 
239 # :  reduce conditional-expression -> logical-OR-expression ? expression : conditional-expression 
257 declaration-specifiers :  goto 292
257 storage-class-specifier :  goto 293
257 type-specifier :  goto 294
257 type-qualifier :  goto 295
257 extern :  shift 10
257 static :  shift 11
257 register :  shift 12
257 void :  shift 13
257 char :  shift 14
257 short :  shift 15
257 int :  shift 16
257 long :  shift 17
257 float :  shift 18
257 double :  shift 19
257 signed :  shift 20
257 unsigned :  shift 21
257 struct-or-union-specifier :  goto 22
257 enum-specifier :  goto 23
257 const :  shift 24
257 restrict :  shift 25
257 volatile :  shift 26
257 struct-or-union :  goto 27
257 struct :  shift 28
257 union :  shift 29
257 identifier :  reduce declaration-specifiers -> storage-class-specifier 
257 enum :  shift 30
257 ( :  reduce declaration-specifiers -> storage-class-specifier 
257 [ :  reduce declaration-specifiers -> storage-class-specifier 
257 * :  reduce declaration-specifiers -> storage-class-specifier 
257 # :  reduce declaration-specifiers -> storage-class-specifier 
257 epsilon :  reduce declaration-specifiers -> storage-class-specifier 
296 # :  reduce declaration-specifiers -> storage-class-specifier declaration-specifiers 
299 identifier :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
299 ( :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
299 [ :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
299 * :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
299 # :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
299 epsilon :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
308 : :  reduce declarator -> pointer direct-declarator 
308 ( :  shift 254
308 [ :  shift 255
308 # :  reduce declarator -> pointer direct-declarator 
305 declaration-specifiers :  goto 256
305 storage-class-specifier :  goto 257
305 type-specifier :  goto 258
305 type-qualifier :  goto 259
305 extern :  shift 10
305 static :  shift 11
305 register :  shift 12
305 void :  shift 13
305 char :  shift 14
305 short :  shift 15
305 int :  shift 16
305 long :  shift 17
305 float :  shift 18
305 double :  shift 19
305 signed :  shift 20
305 unsigned :  shift 21
305 struct-or-union-specifier :  goto 22
305 enum-specifier :  goto 23
305 const :  shift 24
305 restrict :  shift 25
305 volatile :  shift 26
305 struct-or-union :  goto 27
305 struct :  shift 28
305 union :  shift 29
305 enum :  shift 30
305 parameter-declaration :  goto 306
305 ... :  shift 307
327 # :  reduce block-item -> declaration 
328 # :  reduce statement -> compound-statement 
329 # :  reduce expression-statement -> ; 
334 # :  reduce statement -> labeled-statement 
335 # :  reduce statement -> expression-statement 
336 # :  reduce statement -> selection-statement 
337 # :  reduce statement -> iteration-statement 
338 # :  reduce statement -> jump-statement 
353 compound-statement :  goto 328
353 ; :  shift 329
353 { :  shift 49
353 identifier :  shift 331
353 assignment-expression :  goto 332
353 enumeration-constant :  goto 57
353 ( :  shift 58
353 constant :  goto 59
353 * :  shift 60
353 statement :  goto 354
353 labeled-statement :  goto 334
353 expression-statement :  goto 335
353 selection-statement :  goto 336
353 iteration-statement :  goto 337
353 jump-statement :  goto 338
353 case :  shift 339
353 default :  shift 340
353 expression :  goto 343
353 if :  shift 344
353 switch :  shift 345
353 while :  shift 346
353 do :  shift 347
353 for :  shift 348
353 continue :  shift 349
353 break :  shift 350
353 goto :  shift 351
353 return :  shift 352
353 primary-expression :  goto 61
353 string-literal :  shift 62
353 integer-constant :  shift 63
353 floating-constant :  shift 64
353 character-constant :  shift 65
353 postfix-expression :  goto 66
353 ++ :  shift 67
353 -- :  shift 68
353 function-call :  goto 69
353 array-access :  goto 70
353 unary-expression :  goto 71
353 unary-operator :  goto 72
353 cast-expression :  goto 73
353 sizeof :  shift 74
353 & :  shift 75
353 + :  shift 76
353 - :  shift 77
353 ~ :  shift 78
353 ! :  shift 79
353 multiplicative-expression :  goto 80
353 additive-expression :  goto 81
353 shift-expression :  goto 82
353 relational-expression :  goto 83
353 equality-expression :  goto 84
353 AND-expression :  goto 85
353 exclusive-OR-expression :  goto 86
353 inclusive-OR-expression :  goto 87
353 logical-AND-expression :  goto 88
353 logical-OR-expression :  goto 89
353 conditional-expression :  goto 90
333 # :  reduce block-item -> statement 
355 : :  shift 357
356 : :  reduce constant-expression -> conditional-expression 
361 # :  reduce expression-statement -> expression ; 
364 identifier :  shift 55
364 assignment-expression :  goto 110
364 enumeration-constant :  goto 57
364 ( :  shift 58
364 constant :  goto 59
364 * :  shift 60
364 expression :  goto 365
364 primary-expression :  goto 61
364 string-literal :  shift 62
364 integer-constant :  shift 63
364 floating-constant :  shift 64
364 character-constant :  shift 65
364 postfix-expression :  goto 66
364 ++ :  shift 67
364 -- :  shift 68
364 function-call :  goto 69
364 array-access :  goto 70
364 unary-expression :  goto 71
364 unary-operator :  goto 72
364 cast-expression :  goto 73
364 sizeof :  shift 74
364 & :  shift 75
364 + :  shift 76
364 - :  shift 77
364 ~ :  shift 78
364 ! :  shift 79
364 multiplicative-expression :  goto 80
364 additive-expression :  goto 81
364 shift-expression :  goto 82
364 relational-expression :  goto 83
364 equality-expression :  goto 84
364 AND-expression :  goto 85
364 exclusive-OR-expression :  goto 86
364 inclusive-OR-expression :  goto 87
364 logical-AND-expression :  goto 88
364 logical-OR-expression :  goto 89
364 conditional-expression :  goto 90
189 identifier :  shift 55
189 enumeration-constant :  goto 57
189 ( :  shift 58
189 constant :  goto 59
189 * :  shift 60
189 primary-expression :  goto 61
189 string-literal :  shift 62
189 integer-constant :  shift 63
189 floating-constant :  shift 64
189 character-constant :  shift 65
189 postfix-expression :  goto 132
189 ++ :  shift 133
189 -- :  shift 134
189 function-call :  goto 69
189 array-access :  goto 70
189 unary-expression :  goto 135
189 unary-operator :  goto 136
189 cast-expression :  goto 73
189 sizeof :  shift 137
189 & :  shift 75
189 + :  shift 76
189 - :  shift 77
189 ~ :  shift 78
189 ! :  shift 79
189 multiplicative-expression :  goto 80
189 additive-expression :  goto 191
208 & :  shift 205
208 ^ :  reduce exclusive-OR-expression -> exclusive-OR-expression ^ AND-expression 
208 # :  reduce exclusive-OR-expression -> exclusive-OR-expression ^ AND-expression 
184 * :  reduce multiplicative-expression -> multiplicative-expression % cast-expression 
184 / :  reduce multiplicative-expression -> multiplicative-expression % cast-expression 
184 % :  reduce multiplicative-expression -> multiplicative-expression % cast-expression 
184 # :  reduce multiplicative-expression -> multiplicative-expression % cast-expression 
186 identifier :  shift 55
186 enumeration-constant :  goto 57
186 ( :  shift 58
186 constant :  goto 59
186 * :  shift 60
186 primary-expression :  goto 61
186 string-literal :  shift 62
186 integer-constant :  shift 63
186 floating-constant :  shift 64
186 character-constant :  shift 65
186 postfix-expression :  goto 132
186 ++ :  shift 133
186 -- :  shift 134
186 function-call :  goto 69
186 array-access :  goto 70
186 unary-expression :  goto 135
186 unary-operator :  goto 136
186 cast-expression :  goto 73
186 sizeof :  shift 137
186 & :  shift 75
186 + :  shift 76
186 - :  shift 77
186 ~ :  shift 78
186 ! :  shift 79
186 multiplicative-expression :  goto 188
187 * :  shift 179
187 + :  reduce additive-expression -> additive-expression + multiplicative-expression 
187 - :  reduce additive-expression -> additive-expression + multiplicative-expression 
187 / :  shift 180
187 % :  shift 181
187 # :  reduce additive-expression -> additive-expression + multiplicative-expression 
211 identifier :  shift 55
211 enumeration-constant :  goto 57
211 ( :  shift 58
211 constant :  goto 59
211 * :  shift 60
211 primary-expression :  goto 61
211 string-literal :  shift 62
211 integer-constant :  shift 63
211 floating-constant :  shift 64
211 character-constant :  shift 65
211 postfix-expression :  goto 132
211 ++ :  shift 133
211 -- :  shift 134
211 function-call :  goto 69
211 array-access :  goto 70
211 unary-expression :  goto 135
211 unary-operator :  goto 136
211 cast-expression :  goto 73
211 sizeof :  shift 137
211 & :  shift 75
211 + :  shift 76
211 - :  shift 77
211 ~ :  shift 78
211 ! :  shift 79
211 multiplicative-expression :  goto 80
211 additive-expression :  goto 81
211 shift-expression :  goto 82
211 relational-expression :  goto 83
211 equality-expression :  goto 84
211 AND-expression :  goto 85
211 exclusive-OR-expression :  goto 86
211 inclusive-OR-expression :  goto 212
199 << :  shift 189
199 >> :  shift 190
199 < :  reduce relational-expression -> relational-expression <= shift-expression 
199 > :  reduce relational-expression -> relational-expression <= shift-expression 
199 <= :  reduce relational-expression -> relational-expression <= shift-expression 
199 >= :  reduce relational-expression -> relational-expression <= shift-expression 
199 # :  reduce relational-expression -> relational-expression <= shift-expression 
201 identifier :  shift 55
201 enumeration-constant :  goto 57
201 ( :  shift 58
201 constant :  goto 59
201 * :  shift 60
201 primary-expression :  goto 61
201 string-literal :  shift 62
201 integer-constant :  shift 63
201 floating-constant :  shift 64
201 character-constant :  shift 65
201 postfix-expression :  goto 132
201 ++ :  shift 133
201 -- :  shift 134
201 function-call :  goto 69
201 array-access :  goto 70
201 unary-expression :  goto 135
201 unary-operator :  goto 136
201 cast-expression :  goto 73
201 sizeof :  shift 137
201 & :  shift 75
201 + :  shift 76
201 - :  shift 77
201 ~ :  shift 78
201 ! :  shift 79
201 multiplicative-expression :  goto 80
201 additive-expression :  goto 81
201 shift-expression :  goto 82
201 relational-expression :  goto 203
301 ( :  reduce direct-declarator -> direct-declarator ( parameter-type-list ) 
301 [ :  reduce direct-declarator -> direct-declarator ( parameter-type-list ) 
301 # :  reduce direct-declarator -> direct-declarator ( parameter-type-list ) 
331 : :  shift 353
331 # :  reduce primary-expression -> identifier 
331 # :  reduce enumeration-constant -> identifier 
216 , :  reduce expression -> assignment-expression 
216 : :  reduce expression -> assignment-expression 
290 # :  reduce pointer -> * type-qualifier-list pointer 
288 type-qualifier :  goto 289
288 const :  shift 106
288 restrict :  shift 107
288 volatile :  shift 108
288 pointer :  goto 290
288 * :  shift 285
288 # :  reduce pointer -> * type-qualifier-list 
284 identifier :  reduce pointer -> * pointer 
284 ( :  reduce pointer -> * pointer 
284 [ :  reduce pointer -> * pointer 
284 # :  reduce pointer -> * pointer 
341 declaration :  goto 327
341 declaration-specifiers :  goto 42
341 compound-statement :  goto 328
341 ; :  shift 329
341 storage-class-specifier :  goto 45
341 type-specifier :  goto 46
341 type-qualifier :  goto 47
341 extern :  shift 10
341 static :  shift 11
341 register :  shift 12
341 void :  shift 13
341 char :  shift 14
341 short :  shift 15
341 int :  shift 16
341 long :  shift 17
341 float :  shift 18
341 double :  shift 19
341 signed :  shift 20
341 unsigned :  shift 21
341 struct-or-union-specifier :  goto 22
341 enum-specifier :  goto 23
341 const :  shift 24
341 restrict :  shift 25
341 volatile :  shift 26
341 struct-or-union :  goto 27
341 { :  shift 49
341 } :  shift 451
341 struct :  shift 28
341 union :  shift 29
341 identifier :  shift 331
341 assignment-expression :  goto 332
341 enum :  shift 30
341 enumeration-constant :  goto 57
341 ( :  shift 58
341 constant :  goto 59
341 * :  shift 60
341 statement :  goto 333
341 labeled-statement :  goto 334
341 expression-statement :  goto 335
341 selection-statement :  goto 336
341 iteration-statement :  goto 337
341 jump-statement :  goto 338
341 case :  shift 339
341 default :  shift 340
341 block-item :  goto 452
341 expression :  goto 343
341 if :  shift 344
341 switch :  shift 345
341 while :  shift 346
341 do :  shift 347
341 for :  shift 348
341 continue :  shift 349
341 break :  shift 350
341 goto :  shift 351
341 return :  shift 352
341 primary-expression :  goto 61
341 string-literal :  shift 62
341 integer-constant :  shift 63
341 floating-constant :  shift 64
341 character-constant :  shift 65
341 postfix-expression :  goto 66
341 ++ :  shift 67
341 -- :  shift 68
341 function-call :  goto 69
341 array-access :  goto 70
341 unary-expression :  goto 71
341 unary-operator :  goto 72
341 cast-expression :  goto 73
341 sizeof :  shift 74
341 & :  shift 75
341 + :  shift 76
341 - :  shift 77
341 ~ :  shift 78
341 ! :  shift 79
341 multiplicative-expression :  goto 80
341 additive-expression :  goto 81
341 shift-expression :  goto 82
341 relational-expression :  goto 83
341 equality-expression :  goto 84
341 AND-expression :  goto 85
341 exclusive-OR-expression :  goto 86
341 inclusive-OR-expression :  goto 87
341 logical-AND-expression :  goto 88
341 logical-OR-expression :  goto 89
341 conditional-expression :  goto 90
451 # :  reduce compound-statement -> { block-item-list } 
376 identifier :  shift 55
376 assignment-expression :  goto 110
376 enumeration-constant :  goto 57
376 ( :  shift 58
376 constant :  goto 59
376 * :  shift 60
376 expression :  goto 377
376 primary-expression :  goto 61
376 string-literal :  shift 62
376 integer-constant :  shift 63
376 floating-constant :  shift 64
376 character-constant :  shift 65
376 postfix-expression :  goto 66
376 ++ :  shift 67
376 -- :  shift 68
376 function-call :  goto 69
376 array-access :  goto 70
376 unary-expression :  goto 71
376 unary-operator :  goto 72
376 cast-expression :  goto 73
376 sizeof :  shift 74
376 & :  shift 75
376 + :  shift 76
376 - :  shift 77
376 ~ :  shift 78
376 ! :  shift 79
376 multiplicative-expression :  goto 80
376 additive-expression :  goto 81
376 shift-expression :  goto 82
376 relational-expression :  goto 83
376 equality-expression :  goto 84
376 AND-expression :  goto 85
376 exclusive-OR-expression :  goto 86
376 inclusive-OR-expression :  goto 87
376 logical-AND-expression :  goto 88
376 logical-OR-expression :  goto 89
376 conditional-expression :  goto 90
377 , :  shift 155
377 ) :  shift 378
401 identifier :  shift 55
401 assignment-expression :  goto 110
401 enumeration-constant :  goto 57
401 ( :  shift 58
401 ) :  shift 403
401 constant :  goto 59
401 * :  shift 60
401 expression :  goto 404
401 primary-expression :  goto 61
401 string-literal :  shift 62
401 integer-constant :  shift 63
401 floating-constant :  shift 64
401 character-constant :  shift 65
401 postfix-expression :  goto 66
401 ++ :  shift 67
401 -- :  shift 68
401 function-call :  goto 69
401 array-access :  goto 70
401 unary-expression :  goto 71
401 unary-operator :  goto 72
401 cast-expression :  goto 73
401 sizeof :  shift 74
401 & :  shift 75
401 + :  shift 76
401 - :  shift 77
401 ~ :  shift 78
401 ! :  shift 79
401 multiplicative-expression :  goto 80
401 additive-expression :  goto 81
401 shift-expression :  goto 82
401 relational-expression :  goto 83
401 equality-expression :  goto 84
401 AND-expression :  goto 85
401 exclusive-OR-expression :  goto 86
401 inclusive-OR-expression :  goto 87
401 logical-AND-expression :  goto 88
401 logical-OR-expression :  goto 89
401 conditional-expression :  goto 90
394 ; :  shift 395
395 # :  reduce iteration-statement -> do statement while ( expression ) ; 
414 # :  reduce iteration-statement -> for ( declaration ; expression ) statement 
418 # :  reduce iteration-statement -> for ( declaration expression ; ) statement 
428 # :  reduce iteration-statement -> for ( ; ; ) statement 
435 compound-statement :  goto 328
435 ; :  shift 329
435 { :  shift 49
435 identifier :  shift 331
435 assignment-expression :  goto 332
435 enumeration-constant :  goto 57
435 ( :  shift 58
435 constant :  goto 59
435 * :  shift 60
435 statement :  goto 436
435 labeled-statement :  goto 334
435 expression-statement :  goto 335
435 selection-statement :  goto 336
435 iteration-statement :  goto 337
435 jump-statement :  goto 338
435 case :  shift 339
435 default :  shift 340
435 expression :  goto 343
435 if :  shift 344
435 switch :  shift 345
435 while :  shift 346
435 do :  shift 347
435 for :  shift 348
435 continue :  shift 349
435 break :  shift 350
435 goto :  shift 351
435 return :  shift 352
435 primary-expression :  goto 61
435 string-literal :  shift 62
435 integer-constant :  shift 63
435 floating-constant :  shift 64
435 character-constant :  shift 65
435 postfix-expression :  goto 66
435 ++ :  shift 67
435 -- :  shift 68
435 function-call :  goto 69
435 array-access :  goto 70
435 unary-expression :  goto 71
435 unary-operator :  goto 72
435 cast-expression :  goto 73
435 sizeof :  shift 74
435 & :  shift 75
435 + :  shift 76
435 - :  shift 77
435 ~ :  shift 78
435 ! :  shift 79
435 multiplicative-expression :  goto 80
435 additive-expression :  goto 81
435 shift-expression :  goto 82
435 relational-expression :  goto 83
435 equality-expression :  goto 84
435 AND-expression :  goto 85
435 exclusive-OR-expression :  goto 86
435 inclusive-OR-expression :  goto 87
435 logical-AND-expression :  goto 88
435 logical-OR-expression :  goto 89
435 conditional-expression :  goto 90
325 ; :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
325 , :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
325 = :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
325 identifier :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
325 ( :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
325 [ :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
325 * :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
325 epsilon :  reduce declaration-specifiers -> type-specifier declaration-specifiers 
326 ; :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
326 , :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
326 = :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
326 identifier :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
326 ( :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
326 [ :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
326 * :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
326 epsilon :  reduce declaration-specifiers -> type-qualifier declaration-specifiers 
383 # :  reduce iteration-statement -> while ( expression ) statement 
384 while :  reduce statement -> compound-statement 
385 while :  shift 391
357 compound-statement :  goto 328
357 ; :  shift 329
357 { :  shift 49
357 identifier :  shift 331
357 assignment-expression :  goto 332
357 enumeration-constant :  goto 57
357 ( :  shift 58
357 constant :  goto 59
357 * :  shift 60
357 statement :  goto 358
357 labeled-statement :  goto 334
357 expression-statement :  goto 335
357 selection-statement :  goto 336
357 iteration-statement :  goto 337
357 jump-statement :  goto 338
357 case :  shift 339
357 default :  shift 340
357 expression :  goto 343
357 if :  shift 344
357 switch :  shift 345
357 while :  shift 346
357 do :  shift 347
357 for :  shift 348
357 continue :  shift 349
357 break :  shift 350
357 goto :  shift 351
357 return :  shift 352
357 primary-expression :  goto 61
357 string-literal :  shift 62
357 integer-constant :  shift 63
357 floating-constant :  shift 64
357 character-constant :  shift 65
357 postfix-expression :  goto 66
357 ++ :  shift 67
357 -- :  shift 68
357 function-call :  goto 69
357 array-access :  goto 70
357 unary-expression :  goto 71
357 unary-operator :  goto 72
357 cast-expression :  goto 73
357 sizeof :  shift 74
357 & :  shift 75
357 + :  shift 76
357 - :  shift 77
357 ~ :  shift 78
357 ! :  shift 79
357 multiplicative-expression :  goto 80
357 additive-expression :  goto 81
357 shift-expression :  goto 82
357 relational-expression :  goto 83
357 equality-expression :  goto 84
357 AND-expression :  goto 85
357 exclusive-OR-expression :  goto 86
357 inclusive-OR-expression :  goto 87
357 logical-AND-expression :  goto 88
357 logical-OR-expression :  goto 89
357 conditional-expression :  goto 90
380 identifier :  shift 55
380 assignment-expression :  goto 110
380 enumeration-constant :  goto 57
380 ( :  shift 58
380 constant :  goto 59
380 * :  shift 60
380 expression :  goto 381
380 primary-expression :  goto 61
380 string-literal :  shift 62
380 integer-constant :  shift 63
380 floating-constant :  shift 64
380 character-constant :  shift 65
380 postfix-expression :  goto 66
380 ++ :  shift 67
380 -- :  shift 68
380 function-call :  goto 69
380 array-access :  goto 70
380 unary-expression :  goto 71
380 unary-operator :  goto 72
380 cast-expression :  goto 73
380 sizeof :  shift 74
380 & :  shift 75
380 + :  shift 76
380 - :  shift 77
380 ~ :  shift 78
380 ! :  shift 79
380 multiplicative-expression :  goto 80
380 additive-expression :  goto 81
380 shift-expression :  goto 82
380 relational-expression :  goto 83
380 equality-expression :  goto 84
380 AND-expression :  goto 85
380 exclusive-OR-expression :  goto 86
380 inclusive-OR-expression :  goto 87
380 logical-AND-expression :  goto 88
380 logical-OR-expression :  goto 89
380 conditional-expression :  goto 90
399 ; :  shift 424
399 identifier :  shift 55
399 assignment-expression :  goto 332
399 enumeration-constant :  goto 57
399 ( :  shift 58
399 constant :  goto 59
399 * :  shift 60
399 expression :  goto 425
399 primary-expression :  goto 61
399 string-literal :  shift 62
399 integer-constant :  shift 63
399 floating-constant :  shift 64
399 character-constant :  shift 65
399 postfix-expression :  goto 66
399 ++ :  shift 67
399 -- :  shift 68
399 function-call :  goto 69
399 array-access :  goto 70
399 unary-expression :  goto 71
399 unary-operator :  goto 72
399 cast-expression :  goto 73
399 sizeof :  shift 74
399 & :  shift 75
399 + :  shift 76
399 - :  shift 77
399 ~ :  shift 78
399 ! :  shift 79
399 multiplicative-expression :  goto 80
399 additive-expression :  goto 81
399 shift-expression :  goto 82
399 relational-expression :  goto 83
399 equality-expression :  goto 84
399 AND-expression :  goto 85
399 exclusive-OR-expression :  goto 86
399 inclusive-OR-expression :  goto 87
399 logical-AND-expression :  goto 88
399 logical-OR-expression :  goto 89
399 conditional-expression :  goto 90
405 # :  reduce iteration-statement -> for ( declaration ; ) statement 
427 , :  shift 155
427 ) :  shift 429
422 ; :  shift 423
422 , :  shift 319
421 ; :  reduce declaration -> declaration-specifiers ; 
421 , :  reduce declaration -> declaration-specifiers ; 
421 = :  reduce declaration -> declaration-specifiers ; 
421 identifier :  reduce declaration -> declaration-specifiers ; 
421 ( :  reduce declaration -> declaration-specifiers ; 
421 [ :  reduce declaration -> declaration-specifiers ; 
421 * :  reduce declaration -> declaration-specifiers ; 
421 /= :  reduce declaration -> declaration-specifiers ; 
421 %= :  reduce declaration -> declaration-specifiers ; 
421 string-literal :  reduce declaration -> declaration-specifiers ; 
421 integer-constant :  reduce declaration -> declaration-specifiers ; 
421 floating-constant :  reduce declaration -> declaration-specifiers ; 
421 character-constant :  reduce declaration -> declaration-specifiers ; 
421 ++ :  reduce declaration -> declaration-specifiers ; 
421 . :  reduce declaration -> declaration-specifiers ; 
421 -> :  reduce declaration -> declaration-specifiers ; 
421 -- :  reduce declaration -> declaration-specifiers ; 
421 sizeof :  reduce declaration -> declaration-specifiers ; 
421 & :  reduce declaration -> declaration-specifiers ; 
421 + :  reduce declaration -> declaration-specifiers ; 
421 - :  reduce declaration -> declaration-specifiers ; 
421 ~ :  reduce declaration -> declaration-specifiers ; 
421 ! :  reduce declaration -> declaration-specifiers ; 
421 / :  reduce declaration -> declaration-specifiers ; 
421 % :  reduce declaration -> declaration-specifiers ; 
421 << :  reduce declaration -> declaration-specifiers ; 
421 >> :  reduce declaration -> declaration-specifiers ; 
421 < :  reduce declaration -> declaration-specifiers ; 
421 > :  reduce declaration -> declaration-specifiers ; 
421 <= :  reduce declaration -> declaration-specifiers ; 
421 >= :  reduce declaration -> declaration-specifiers ; 
421 == :  reduce declaration -> declaration-specifiers ; 
421 != :  reduce declaration -> declaration-specifiers ; 
421 ^ :  reduce declaration -> declaration-specifiers ; 
421 | :  reduce declaration -> declaration-specifiers ; 
421 && :  reduce declaration -> declaration-specifiers ; 
421 || :  reduce declaration -> declaration-specifiers ; 
421 *= :  reduce declaration -> declaration-specifiers ; 
421 ? :  reduce declaration -> declaration-specifiers ; 
421 += :  reduce declaration -> declaration-specifiers ; 
421 ^= :  reduce declaration -> declaration-specifiers ; 
421 -= :  reduce declaration -> declaration-specifiers ; 
421 <<= :  reduce declaration -> declaration-specifiers ; 
421 >>= :  reduce declaration -> declaration-specifiers ; 
421 &= :  reduce declaration -> declaration-specifiers ; 
421 |= :  reduce declaration -> declaration-specifiers ; 
421 epsilon :  reduce declaration -> declaration-specifiers ; 
420 # :  reduce iteration-statement -> for ( declaration expression ; expression ) statement 
432 compound-statement :  goto 328
432 ; :  shift 329
432 { :  shift 49
432 identifier :  shift 331
432 assignment-expression :  goto 332
432 enumeration-constant :  goto 57
432 ( :  shift 58
432 constant :  goto 59
432 * :  shift 60
432 statement :  goto 434
432 labeled-statement :  goto 334
432 expression-statement :  goto 335
432 selection-statement :  goto 336
432 iteration-statement :  goto 337
432 jump-statement :  goto 338
432 case :  shift 339
432 default :  shift 340
432 expression :  goto 343
432 if :  shift 344
432 switch :  shift 345
432 while :  shift 346
432 do :  shift 347
432 for :  shift 348
432 continue :  shift 349
432 break :  shift 350
432 goto :  shift 351
432 return :  shift 352
432 primary-expression :  goto 61
432 string-literal :  shift 62
432 integer-constant :  shift 63
432 floating-constant :  shift 64
432 character-constant :  shift 65
432 postfix-expression :  goto 66
432 ++ :  shift 67
432 -- :  shift 68
432 function-call :  goto 69
432 array-access :  goto 70
432 unary-expression :  goto 71
432 unary-operator :  goto 72
432 cast-expression :  goto 73
432 sizeof :  shift 74
432 & :  shift 75
432 + :  shift 76
432 - :  shift 77
432 ~ :  shift 78
432 ! :  shift 79
432 multiplicative-expression :  goto 80
432 additive-expression :  goto 81
432 shift-expression :  goto 82
432 relational-expression :  goto 83
432 equality-expression :  goto 84
432 AND-expression :  goto 85
432 exclusive-OR-expression :  goto 86
432 inclusive-OR-expression :  goto 87
432 logical-AND-expression :  goto 88
432 logical-OR-expression :  goto 89
432 conditional-expression :  goto 90
433 , :  shift 155
433 ) :  shift 435
423 ; :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 , :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 = :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 identifier :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 ( :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 [ :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 * :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 /= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 %= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 string-literal :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 integer-constant :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 floating-constant :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 character-constant :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 ++ :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 . :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 -> :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 -- :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 sizeof :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 & :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 + :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 - :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 ~ :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 ! :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 / :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 % :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 << :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 >> :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 < :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 > :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 <= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 >= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 == :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 != :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 ^ :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 | :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 && :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 || :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 *= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 ? :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 += :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 ^= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 -= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 <<= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 >>= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 &= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 |= :  reduce declaration -> declaration-specifiers init-declarator-list ; 
423 epsilon :  reduce declaration -> declaration-specifiers init-declarator-list ; 
426 compound-statement :  goto 328
426 ; :  shift 329
426 { :  shift 49
426 identifier :  shift 331
426 assignment-expression :  goto 332
426 enumeration-constant :  goto 57
426 ( :  shift 58
426 constant :  goto 59
426 * :  shift 60
426 statement :  goto 428
426 labeled-statement :  goto 334
426 expression-statement :  goto 335
426 selection-statement :  goto 336
426 iteration-statement :  goto 337
426 jump-statement :  goto 338
426 case :  shift 339
426 default :  shift 340
426 expression :  goto 343
426 if :  shift 344
426 switch :  shift 345
426 while :  shift 346
426 do :  shift 347
426 for :  shift 348
426 continue :  shift 349
426 break :  shift 350
426 goto :  shift 351
426 return :  shift 352
426 primary-expression :  goto 61
426 string-literal :  shift 62
426 integer-constant :  shift 63
426 floating-constant :  shift 64
426 character-constant :  shift 65
426 postfix-expression :  goto 66
426 ++ :  shift 67
426 -- :  shift 68
426 function-call :  goto 69
426 array-access :  goto 70
426 unary-expression :  goto 71
426 unary-operator :  goto 72
426 cast-expression :  goto 73
426 sizeof :  shift 74
426 & :  shift 75
426 + :  shift 76
426 - :  shift 77
426 ~ :  shift 78
426 ! :  shift 79
426 multiplicative-expression :  goto 80
426 additive-expression :  goto 81
426 shift-expression :  goto 82
426 relational-expression :  goto 83
426 equality-expression :  goto 84
426 AND-expression :  goto 85
426 exclusive-OR-expression :  goto 86
426 inclusive-OR-expression :  goto 87
426 logical-AND-expression :  goto 88
426 logical-OR-expression :  goto 89
426 conditional-expression :  goto 90
445 identifier :  shift 55
445 assignment-expression :  goto 110
445 enumeration-constant :  goto 57
445 ( :  shift 58
445 ) :  shift 446
445 constant :  goto 59
445 * :  shift 60
445 expression :  goto 447
445 primary-expression :  goto 61
445 string-literal :  shift 62
445 integer-constant :  shift 63
445 floating-constant :  shift 64
445 character-constant :  shift 65
445 postfix-expression :  goto 66
445 ++ :  shift 67
445 -- :  shift 68
445 function-call :  goto 69
445 array-access :  goto 70
445 unary-expression :  goto 71
445 unary-operator :  goto 72
445 cast-expression :  goto 73
445 sizeof :  shift 74
445 & :  shift 75
445 + :  shift 76
445 - :  shift 77
445 ~ :  shift 78
445 ! :  shift 79
445 multiplicative-expression :  goto 80
445 additive-expression :  goto 81
445 shift-expression :  goto 82
445 relational-expression :  goto 83
445 equality-expression :  goto 84
445 AND-expression :  goto 85
445 exclusive-OR-expression :  goto 86
445 inclusive-OR-expression :  goto 87
445 logical-AND-expression :  goto 88
445 logical-OR-expression :  goto 89
445 conditional-expression :  goto 90
442 # :  reduce iteration-statement -> for ( expression ; ; ) statement 
434 # :  reduce iteration-statement -> for ( ; expression ; ) statement 
447 , :  shift 155
447 ) :  shift 449
448 # :  reduce iteration-statement -> for ( expression ; expression ; ) statement 
449 compound-statement :  goto 328
449 ; :  shift 329
449 { :  shift 49
449 identifier :  shift 331
449 assignment-expression :  goto 332
449 enumeration-constant :  goto 57
449 ( :  shift 58
449 constant :  goto 59
449 * :  shift 60
449 statement :  goto 450
449 labeled-statement :  goto 334
449 expression-statement :  goto 335
449 selection-statement :  goto 336
449 iteration-statement :  goto 337
449 jump-statement :  goto 338
449 case :  shift 339
449 default :  shift 340
449 expression :  goto 343
449 if :  shift 344
449 switch :  shift 345
449 while :  shift 346
449 do :  shift 347
449 for :  shift 348
449 continue :  shift 349
449 break :  shift 350
449 goto :  shift 351
449 return :  shift 352
449 primary-expression :  goto 61
449 string-literal :  shift 62
449 integer-constant :  shift 63
449 floating-constant :  shift 64
449 character-constant :  shift 65
449 postfix-expression :  goto 66
449 ++ :  shift 67
449 -- :  shift 68
449 function-call :  goto 69
449 array-access :  goto 70
449 unary-expression :  goto 71
449 unary-operator :  goto 72
449 cast-expression :  goto 73
449 sizeof :  shift 74
449 & :  shift 75
449 + :  shift 76
449 - :  shift 77
449 ~ :  shift 78
449 ! :  shift 79
449 multiplicative-expression :  goto 80
449 additive-expression :  goto 81
449 shift-expression :  goto 82
449 relational-expression :  goto 83
449 equality-expression :  goto 84
449 AND-expression :  goto 85
449 exclusive-OR-expression :  goto 86
449 inclusive-OR-expression :  goto 87
449 logical-AND-expression :  goto 88
449 logical-OR-expression :  goto 89
449 conditional-expression :  goto 90
446 compound-statement :  goto 328
446 ; :  shift 329
446 { :  shift 49
446 identifier :  shift 331
446 assignment-expression :  goto 332
446 enumeration-constant :  goto 57
446 ( :  shift 58
446 constant :  goto 59
446 * :  shift 60
446 statement :  goto 448
446 labeled-statement :  goto 334
446 expression-statement :  goto 335
446 selection-statement :  goto 336
446 iteration-statement :  goto 337
446 jump-statement :  goto 338
446 case :  shift 339
446 default :  shift 340
446 expression :  goto 343
446 if :  shift 344
446 switch :  shift 345
446 while :  shift 346
446 do :  shift 347
446 for :  shift 348
446 continue :  shift 349
446 break :  shift 350
446 goto :  shift 351
446 return :  shift 352
446 primary-expression :  goto 61
446 string-literal :  shift 62
446 integer-constant :  shift 63
446 floating-constant :  shift 64
446 character-constant :  shift 65
446 postfix-expression :  goto 66
446 ++ :  shift 67
446 -- :  shift 68
446 function-call :  goto 69
446 array-access :  goto 70
446 unary-expression :  goto 71
446 unary-operator :  goto 72
446 cast-expression :  goto 73
446 sizeof :  shift 74
446 & :  shift 75
446 + :  shift 76
446 - :  shift 77
446 ~ :  shift 78
446 ! :  shift 79
446 multiplicative-expression :  goto 80
446 additive-expression :  goto 81
446 shift-expression :  goto 82
446 relational-expression :  goto 83
446 equality-expression :  goto 84
446 AND-expression :  goto 85
446 exclusive-OR-expression :  goto 86
446 inclusive-OR-expression :  goto 87
446 logical-AND-expression :  goto 88
446 logical-OR-expression :  goto 89
446 conditional-expression :  goto 90
450 # :  reduce iteration-statement -> for ( expression ; expression ; expression ) statement 
366 compound-statement :  goto 367
366 ; :  shift 329
366 { :  shift 49
366 identifier :  shift 331
366 assignment-expression :  goto 332
366 enumeration-constant :  goto 57
366 ( :  shift 58
366 constant :  goto 59
366 * :  shift 60
366 statement :  goto 368
366 labeled-statement :  goto 369
366 expression-statement :  goto 370
366 selection-statement :  goto 371
366 iteration-statement :  goto 372
366 jump-statement :  goto 373
366 case :  shift 339
366 default :  shift 340
366 expression :  goto 343
366 if :  shift 344
366 switch :  shift 345
366 while :  shift 346
366 do :  shift 347
366 for :  shift 348
366 continue :  shift 349
366 break :  shift 350
366 goto :  shift 351
366 return :  shift 352
366 primary-expression :  goto 61
366 string-literal :  shift 62
366 integer-constant :  shift 63
366 floating-constant :  shift 64
366 character-constant :  shift 65
366 postfix-expression :  goto 66
366 ++ :  shift 67
366 -- :  shift 68
366 function-call :  goto 69
366 array-access :  goto 70
366 unary-expression :  goto 71
366 unary-operator :  goto 72
366 cast-expression :  goto 73
366 sizeof :  shift 74
366 & :  shift 75
366 + :  shift 76
366 - :  shift 77
366 ~ :  shift 78
366 ! :  shift 79
366 multiplicative-expression :  goto 80
366 additive-expression :  goto 81
366 shift-expression :  goto 82
366 relational-expression :  goto 83
366 equality-expression :  goto 84
366 AND-expression :  goto 85
366 exclusive-OR-expression :  goto 86
366 inclusive-OR-expression :  goto 87
366 logical-AND-expression :  goto 88
366 logical-OR-expression :  goto 89
366 conditional-expression :  goto 90
367 else :  reduce statement -> compound-statement 
367 # :  reduce statement -> compound-statement 
382 compound-statement :  goto 328
382 ; :  shift 329
382 { :  shift 49
382 identifier :  shift 331
382 assignment-expression :  goto 332
382 enumeration-constant :  goto 57
382 ( :  shift 58
382 constant :  goto 59
382 * :  shift 60
382 statement :  goto 383
382 labeled-statement :  goto 334
382 expression-statement :  goto 335
382 selection-statement :  goto 336
382 iteration-statement :  goto 337
382 jump-statement :  goto 338
382 case :  shift 339
382 default :  shift 340
382 expression :  goto 343
382 if :  shift 344
382 switch :  shift 345
382 while :  shift 346
382 do :  shift 347
382 for :  shift 348
382 continue :  shift 349
382 break :  shift 350
382 goto :  shift 351
382 return :  shift 352
382 primary-expression :  goto 61
382 string-literal :  shift 62
382 integer-constant :  shift 63
382 floating-constant :  shift 64
382 character-constant :  shift 65
382 postfix-expression :  goto 66
382 ++ :  shift 67
382 -- :  shift 68
382 function-call :  goto 69
382 array-access :  goto 70
382 unary-expression :  goto 71
382 unary-operator :  goto 72
382 cast-expression :  goto 73
382 sizeof :  shift 74
382 & :  shift 75
382 + :  shift 76
382 - :  shift 77
382 ~ :  shift 78
382 ! :  shift 79
382 multiplicative-expression :  goto 80
382 additive-expression :  goto 81
382 shift-expression :  goto 82
382 relational-expression :  goto 83
382 equality-expression :  goto 84
382 AND-expression :  goto 85
382 exclusive-OR-expression :  goto 86
382 inclusive-OR-expression :  goto 87
382 logical-AND-expression :  goto 88
382 logical-OR-expression :  goto 89
382 conditional-expression :  goto 90
452 ; :  reduce block-item-list -> block-item-list block-item 
452 extern :  reduce block-item-list -> block-item-list block-item 
452 static :  reduce block-item-list -> block-item-list block-item 
452 register :  reduce block-item-list -> block-item-list block-item 
452 void :  reduce block-item-list -> block-item-list block-item 
452 char :  reduce block-item-list -> block-item-list block-item 
452 short :  reduce block-item-list -> block-item-list block-item 
452 int :  reduce block-item-list -> block-item-list block-item 
452 long :  reduce block-item-list -> block-item-list block-item 
452 float :  reduce block-item-list -> block-item-list block-item 
452 double :  reduce block-item-list -> block-item-list block-item 
452 signed :  reduce block-item-list -> block-item-list block-item 
452 unsigned :  reduce block-item-list -> block-item-list block-item 
452 const :  reduce block-item-list -> block-item-list block-item 
452 restrict :  reduce block-item-list -> block-item-list block-item 
452 volatile :  reduce block-item-list -> block-item-list block-item 
452 , :  reduce block-item-list -> block-item-list block-item 
452 = :  reduce block-item-list -> block-item-list block-item 
452 { :  reduce block-item-list -> block-item-list block-item 
452 } :  reduce block-item-list -> block-item-list block-item 
452 struct :  reduce block-item-list -> block-item-list block-item 
452 union :  reduce block-item-list -> block-item-list block-item 
452 identifier :  reduce block-item-list -> block-item-list block-item 
452 enum :  reduce block-item-list -> block-item-list block-item 
452 ( :  reduce block-item-list -> block-item-list block-item 
452 [ :  reduce block-item-list -> block-item-list block-item 
452 * :  reduce block-item-list -> block-item-list block-item 
452 /= :  reduce block-item-list -> block-item-list block-item 
452 %= :  reduce block-item-list -> block-item-list block-item 
452 case :  reduce block-item-list -> block-item-list block-item 
452 default :  reduce block-item-list -> block-item-list block-item 
452 if :  reduce block-item-list -> block-item-list block-item 
452 switch :  reduce block-item-list -> block-item-list block-item 
452 while :  reduce block-item-list -> block-item-list block-item 
452 do :  reduce block-item-list -> block-item-list block-item 
452 for :  reduce block-item-list -> block-item-list block-item 
452 continue :  reduce block-item-list -> block-item-list block-item 
452 break :  reduce block-item-list -> block-item-list block-item 
452 goto :  reduce block-item-list -> block-item-list block-item 
452 return :  reduce block-item-list -> block-item-list block-item 
452 string-literal :  reduce block-item-list -> block-item-list block-item 
452 integer-constant :  reduce block-item-list -> block-item-list block-item 
452 floating-constant :  reduce block-item-list -> block-item-list block-item 
452 character-constant :  reduce block-item-list -> block-item-list block-item 
452 ++ :  reduce block-item-list -> block-item-list block-item 
452 . :  reduce block-item-list -> block-item-list block-item 
452 -> :  reduce block-item-list -> block-item-list block-item 
452 -- :  reduce block-item-list -> block-item-list block-item 
452 sizeof :  reduce block-item-list -> block-item-list block-item 
452 & :  reduce block-item-list -> block-item-list block-item 
452 + :  reduce block-item-list -> block-item-list block-item 
452 - :  reduce block-item-list -> block-item-list block-item 
452 ~ :  reduce block-item-list -> block-item-list block-item 
452 ! :  reduce block-item-list -> block-item-list block-item 
452 / :  reduce block-item-list -> block-item-list block-item 
452 % :  reduce block-item-list -> block-item-list block-item 
452 << :  reduce block-item-list -> block-item-list block-item 
452 >> :  reduce block-item-list -> block-item-list block-item 
452 < :  reduce block-item-list -> block-item-list block-item 
452 > :  reduce block-item-list -> block-item-list block-item 
452 <= :  reduce block-item-list -> block-item-list block-item 
452 >= :  reduce block-item-list -> block-item-list block-item 
452 == :  reduce block-item-list -> block-item-list block-item 
452 != :  reduce block-item-list -> block-item-list block-item 
452 ^ :  reduce block-item-list -> block-item-list block-item 
452 | :  reduce block-item-list -> block-item-list block-item 
452 && :  reduce block-item-list -> block-item-list block-item 
452 || :  reduce block-item-list -> block-item-list block-item 
452 *= :  reduce block-item-list -> block-item-list block-item 
452 ? :  reduce block-item-list -> block-item-list block-item 
452 += :  reduce block-item-list -> block-item-list block-item 
452 ^= :  reduce block-item-list -> block-item-list block-item 
452 -= :  reduce block-item-list -> block-item-list block-item 
452 <<= :  reduce block-item-list -> block-item-list block-item 
452 >>= :  reduce block-item-list -> block-item-list block-item 
452 &= :  reduce block-item-list -> block-item-list block-item 
452 |= :  reduce block-item-list -> block-item-list block-item 
452 # :  reduce block-item-list -> block-item-list block-item 
452 epsilon :  reduce block-item-list -> block-item-list block-item 
403 compound-statement :  goto 328
403 ; :  shift 329
403 { :  shift 49
403 identifier :  shift 331
403 assignment-expression :  goto 332
403 enumeration-constant :  goto 57
403 ( :  shift 58
403 constant :  goto 59
403 * :  shift 60
403 statement :  goto 405
403 labeled-statement :  goto 334
403 expression-statement :  goto 335
403 selection-statement :  goto 336
403 iteration-statement :  goto 337
403 jump-statement :  goto 338
403 case :  shift 339
403 default :  shift 340
403 expression :  goto 343
403 if :  shift 344
403 switch :  shift 345
403 while :  shift 346
403 do :  shift 347
403 for :  shift 348
403 continue :  shift 349
403 break :  shift 350
403 goto :  shift 351
403 return :  shift 352
403 primary-expression :  goto 61
403 string-literal :  shift 62
403 integer-constant :  shift 63
403 floating-constant :  shift 64
403 character-constant :  shift 65
403 postfix-expression :  goto 66
403 ++ :  shift 67
403 -- :  shift 68
403 function-call :  goto 69
403 array-access :  goto 70
403 unary-expression :  goto 71
403 unary-operator :  goto 72
403 cast-expression :  goto 73
403 sizeof :  shift 74
403 & :  shift 75
403 + :  shift 76
403 - :  shift 77
403 ~ :  shift 78
403 ! :  shift 79
403 multiplicative-expression :  goto 80
403 additive-expression :  goto 81
403 shift-expression :  goto 82
403 relational-expression :  goto 83
403 equality-expression :  goto 84
403 AND-expression :  goto 85
403 exclusive-OR-expression :  goto 86
403 inclusive-OR-expression :  goto 87
403 logical-AND-expression :  goto 88
403 logical-OR-expression :  goto 89
403 conditional-expression :  goto 90
393 , :  shift 155
393 ) :  shift 394
404 , :  shift 155
404 ) :  shift 413
400 ; :  shift 437
400 , :  shift 362
444 # :  reduce iteration-statement -> for ( expression ; ; expression ) statement 
431 identifier :  shift 55
431 assignment-expression :  goto 110
431 enumeration-constant :  goto 57
431 ( :  shift 58
431 ) :  shift 432
431 constant :  goto 59
431 * :  shift 60
431 expression :  goto 433
431 primary-expression :  goto 61
431 string-literal :  shift 62
431 integer-constant :  shift 63
431 floating-constant :  shift 64
431 character-constant :  shift 65
431 postfix-expression :  goto 66
431 ++ :  shift 67
431 -- :  shift 68
431 function-call :  goto 69
431 array-access :  goto 70
431 unary-expression :  goto 71
431 unary-operator :  goto 72
431 cast-expression :  goto 73
431 sizeof :  shift 74
431 & :  shift 75
431 + :  shift 76
431 - :  shift 77
431 ~ :  shift 78
431 ! :  shift 79
431 multiplicative-expression :  goto 80
431 additive-expression :  goto 81
431 shift-expression :  goto 82
431 relational-expression :  goto 83
431 equality-expression :  goto 84
431 AND-expression :  goto 85
431 exclusive-OR-expression :  goto 86
431 inclusive-OR-expression :  goto 87
431 logical-AND-expression :  goto 88
431 logical-OR-expression :  goto 89
431 conditional-expression :  goto 90
407 # :  reduce jump-statement -> break ; 
406 # :  reduce jump-statement -> continue ; 
408 ; :  shift 409
409 # :  reduce jump-statement -> goto identifier ; 
410 # :  reduce jump-statement -> return ; 
411 ; :  shift 412
411 , :  shift 362
443 compound-statement :  goto 328
443 ; :  shift 329
443 { :  shift 49
443 identifier :  shift 331
443 assignment-expression :  goto 332
443 enumeration-constant :  goto 57
443 ( :  shift 58
443 constant :  goto 59
443 * :  shift 60
443 statement :  goto 444
443 labeled-statement :  goto 334
443 expression-statement :  goto 335
443 selection-statement :  goto 336
443 iteration-statement :  goto 337
443 jump-statement :  goto 338
443 case :  shift 339
443 default :  shift 340
443 expression :  goto 343
443 if :  shift 344
443 switch :  shift 345
443 while :  shift 346
443 do :  shift 347
443 for :  shift 348
443 continue :  shift 349
443 break :  shift 350
443 goto :  shift 351
443 return :  shift 352
443 primary-expression :  goto 61
443 string-literal :  shift 62
443 integer-constant :  shift 63
443 floating-constant :  shift 64
443 character-constant :  shift 65
443 postfix-expression :  goto 66
443 ++ :  shift 67
443 -- :  shift 68
443 function-call :  goto 69
443 array-access :  goto 70
443 unary-expression :  goto 71
443 unary-operator :  goto 72
443 cast-expression :  goto 73
443 sizeof :  shift 74
443 & :  shift 75
443 + :  shift 76
443 - :  shift 77
443 ~ :  shift 78
443 ! :  shift 79
443 multiplicative-expression :  goto 80
443 additive-expression :  goto 81
443 shift-expression :  goto 82
443 relational-expression :  goto 83
443 equality-expression :  goto 84
443 AND-expression :  goto 85
443 exclusive-OR-expression :  goto 86
443 inclusive-OR-expression :  goto 87
443 logical-AND-expression :  goto 88
443 logical-OR-expression :  goto 89
443 conditional-expression :  goto 90
412 # :  reduce jump-statement -> return expression ; 
396 declaration :  goto 397
396 declaration-specifiers :  goto 398
396 ; :  shift 399
396 storage-class-specifier :  goto 45
396 type-specifier :  goto 46
396 type-qualifier :  goto 47
396 extern :  shift 10
396 static :  shift 11
396 register :  shift 12
396 void :  shift 13
396 char :  shift 14
396 short :  shift 15
396 int :  shift 16
396 long :  shift 17
396 float :  shift 18
396 double :  shift 19
396 signed :  shift 20
396 unsigned :  shift 21
396 struct-or-union-specifier :  goto 22
396 enum-specifier :  goto 23
396 const :  shift 24
396 restrict :  shift 25
396 volatile :  shift 26
396 struct-or-union :  goto 27
396 struct :  shift 28
396 union :  shift 29
396 identifier :  shift 55
396 assignment-expression :  goto 332
396 enum :  shift 30
396 enumeration-constant :  goto 57
396 ( :  shift 58
396 constant :  goto 59
396 * :  shift 60
396 expression :  goto 400
396 primary-expression :  goto 61
396 string-literal :  shift 62
396 integer-constant :  shift 63
396 floating-constant :  shift 64
396 character-constant :  shift 65
396 postfix-expression :  goto 66
396 ++ :  shift 67
396 -- :  shift 68
396 function-call :  goto 69
396 array-access :  goto 70
396 unary-expression :  goto 71
396 unary-operator :  goto 72
396 cast-expression :  goto 73
396 sizeof :  shift 74
396 & :  shift 75
396 + :  shift 76
396 - :  shift 77
396 ~ :  shift 78
396 ! :  shift 79
396 multiplicative-expression :  goto 80
396 additive-expression :  goto 81
396 shift-expression :  goto 82
396 relational-expression :  goto 83
396 equality-expression :  goto 84
396 AND-expression :  goto 85
396 exclusive-OR-expression :  goto 86
396 inclusive-OR-expression :  goto 87
396 logical-AND-expression :  goto 88
396 logical-OR-expression :  goto 89
396 conditional-expression :  goto 90
392 identifier :  shift 55
392 assignment-expression :  goto 110
392 enumeration-constant :  goto 57
392 ( :  shift 58
392 constant :  goto 59
392 * :  shift 60
392 expression :  goto 393
392 primary-expression :  goto 61
392 string-literal :  shift 62
392 integer-constant :  shift 63
392 floating-constant :  shift 64
392 character-constant :  shift 65
392 postfix-expression :  goto 66
392 ++ :  shift 67
392 -- :  shift 68
392 function-call :  goto 69
392 array-access :  goto 70
392 unary-expression :  goto 71
392 unary-operator :  goto 72
392 cast-expression :  goto 73
392 sizeof :  shift 74
392 & :  shift 75
392 + :  shift 76
392 - :  shift 77
392 ~ :  shift 78
392 ! :  shift 79
392 multiplicative-expression :  goto 80
392 additive-expression :  goto 81
392 shift-expression :  goto 82
392 relational-expression :  goto 83
392 equality-expression :  goto 84
392 AND-expression :  goto 85
392 exclusive-OR-expression :  goto 86
392 inclusive-OR-expression :  goto 87
392 logical-AND-expression :  goto 88
392 logical-OR-expression :  goto 89
392 conditional-expression :  goto 90
397 ; :  shift 401
397 identifier :  shift 55
397 assignment-expression :  goto 332
397 enumeration-constant :  goto 57
397 ( :  shift 58
397 constant :  goto 59
397 * :  shift 60
397 expression :  goto 402
397 primary-expression :  goto 61
397 string-literal :  shift 62
397 integer-constant :  shift 63
397 floating-constant :  shift 64
397 character-constant :  shift 65
397 postfix-expression :  goto 66
397 ++ :  shift 67
397 -- :  shift 68
397 function-call :  goto 69
397 array-access :  goto 70
397 unary-expression :  goto 71
397 unary-operator :  goto 72
397 cast-expression :  goto 73
397 sizeof :  shift 74
397 & :  shift 75
397 + :  shift 76
397 - :  shift 77
397 ~ :  shift 78
397 ! :  shift 79
397 multiplicative-expression :  goto 80
397 additive-expression :  goto 81
397 shift-expression :  goto 82
397 relational-expression :  goto 83
397 equality-expression :  goto 84
397 AND-expression :  goto 85
397 exclusive-OR-expression :  goto 86
397 inclusive-OR-expression :  goto 87
397 logical-AND-expression :  goto 88
397 logical-OR-expression :  goto 89
397 conditional-expression :  goto 90
419 compound-statement :  goto 328
419 ; :  shift 329
419 { :  shift 49
419 identifier :  shift 331
419 assignment-expression :  goto 332
419 enumeration-constant :  goto 57
419 ( :  shift 58
419 constant :  goto 59
419 * :  shift 60
419 statement :  goto 420
419 labeled-statement :  goto 334
419 expression-statement :  goto 335
419 selection-statement :  goto 336
419 iteration-statement :  goto 337
419 jump-statement :  goto 338
419 case :  shift 339
419 default :  shift 340
419 expression :  goto 343
419 if :  shift 344
419 switch :  shift 345
419 while :  shift 346
419 do :  shift 347
419 for :  shift 348
419 continue :  shift 349
419 break :  shift 350
419 goto :  shift 351
419 return :  shift 352
419 primary-expression :  goto 61
419 string-literal :  shift 62
419 integer-constant :  shift 63
419 floating-constant :  shift 64
419 character-constant :  shift 65
419 postfix-expression :  goto 66
419 ++ :  shift 67
419 -- :  shift 68
419 function-call :  goto 69
419 array-access :  goto 70
419 unary-expression :  goto 71
419 unary-operator :  goto 72
419 cast-expression :  goto 73
419 sizeof :  shift 74
419 & :  shift 75
419 + :  shift 76
419 - :  shift 77
419 ~ :  shift 78
419 ! :  shift 79
419 multiplicative-expression :  goto 80
419 additive-expression :  goto 81
419 shift-expression :  goto 82
419 relational-expression :  goto 83
419 equality-expression :  goto 84
419 AND-expression :  goto 85
419 exclusive-OR-expression :  goto 86
419 inclusive-OR-expression :  goto 87
419 logical-AND-expression :  goto 88
419 logical-OR-expression :  goto 89
419 conditional-expression :  goto 90
398 declarator :  goto 50
398 ; :  shift 421
398 init-declarator-list :  goto 422
398 init-declarator :  goto 35
398 identifier :  shift 36
398 direct-declarator :  goto 51
398 pointer :  goto 52
398 ( :  shift 39
398 * :  shift 40
402 ; :  shift 415
402 , :  shift 362
415 identifier :  shift 55
415 assignment-expression :  goto 110
415 enumeration-constant :  goto 57
415 ( :  shift 58
415 ) :  shift 416
415 constant :  goto 59
415 * :  shift 60
415 expression :  goto 417
415 primary-expression :  goto 61
415 string-literal :  shift 62
415 integer-constant :  shift 63
415 floating-constant :  shift 64
415 character-constant :  shift 65
415 postfix-expression :  goto 66
415 ++ :  shift 67
415 -- :  shift 68
415 function-call :  goto 69
415 array-access :  goto 70
415 unary-expression :  goto 71
415 unary-operator :  goto 72
415 cast-expression :  goto 73
415 sizeof :  shift 74
415 & :  shift 75
415 + :  shift 76
415 - :  shift 77
415 ~ :  shift 78
415 ! :  shift 79
415 multiplicative-expression :  goto 80
415 additive-expression :  goto 81
415 shift-expression :  goto 82
415 relational-expression :  goto 83
415 equality-expression :  goto 84
415 AND-expression :  goto 85
415 exclusive-OR-expression :  goto 86
415 inclusive-OR-expression :  goto 87
415 logical-AND-expression :  goto 88
415 logical-OR-expression :  goto 89
415 conditional-expression :  goto 90
439 ; :  shift 445
439 , :  shift 362
436 # :  reduce iteration-statement -> for ( ; expression ; expression ) statement 
430 # :  reduce iteration-statement -> for ( ; ; expression ) statement 
424 identifier :  shift 55
424 assignment-expression :  goto 110
424 enumeration-constant :  goto 57
424 ( :  shift 58
424 ) :  shift 426
424 constant :  goto 59
424 * :  shift 60
424 expression :  goto 427
424 primary-expression :  goto 61
424 string-literal :  shift 62
424 integer-constant :  shift 63
424 floating-constant :  shift 64
424 character-constant :  shift 65
424 postfix-expression :  goto 66
424 ++ :  shift 67
424 -- :  shift 68
424 function-call :  goto 69
424 array-access :  goto 70
424 unary-expression :  goto 71
424 unary-operator :  goto 72
424 cast-expression :  goto 73
424 sizeof :  shift 74
424 & :  shift 75
424 + :  shift 76
424 - :  shift 77
424 ~ :  shift 78
424 ! :  shift 79
424 multiplicative-expression :  goto 80
424 additive-expression :  goto 81
424 shift-expression :  goto 82
424 relational-expression :  goto 83
424 equality-expression :  goto 84
424 AND-expression :  goto 85
424 exclusive-OR-expression :  goto 86
424 inclusive-OR-expression :  goto 87
424 logical-AND-expression :  goto 88
424 logical-OR-expression :  goto 89
424 conditional-expression :  goto 90
437 ; :  shift 438
437 identifier :  shift 55
437 assignment-expression :  goto 332
437 enumeration-constant :  goto 57
437 ( :  shift 58
437 constant :  goto 59
437 * :  shift 60
437 expression :  goto 439
437 primary-expression :  goto 61
437 string-literal :  shift 62
437 integer-constant :  shift 63
437 floating-constant :  shift 64
437 character-constant :  shift 65
437 postfix-expression :  goto 66
437 ++ :  shift 67
437 -- :  shift 68
437 function-call :  goto 69
437 array-access :  goto 70
437 unary-expression :  goto 71
437 unary-operator :  goto 72
437 cast-expression :  goto 73
437 sizeof :  shift 74
437 & :  shift 75
437 + :  shift 76
437 - :  shift 77
437 ~ :  shift 78
437 ! :  shift 79
437 multiplicative-expression :  goto 80
437 additive-expression :  goto 81
437 shift-expression :  goto 82
437 relational-expression :  goto 83
437 equality-expression :  goto 84
437 AND-expression :  goto 85
437 exclusive-OR-expression :  goto 86
437 inclusive-OR-expression :  goto 87
437 logical-AND-expression :  goto 88
437 logical-OR-expression :  goto 89
437 conditional-expression :  goto 90
425 ; :  shift 431
425 , :  shift 362
